{"version":3,"sources":["StyleModules/Pictures.module.css","StyleModules/TabbedPanel.module.css","FNFF/FNFFAttacks.module.css","NightCity/NightCity.module.css","TraumaTeam/TraumaTeam.module.css","FNFF/FNFFIntroduction.module.css","InterlockSystem/Interlock.module.css","Cyberware/Cyberware.module.css","NightCity/NCCorporations.module.css","InterlockSystem/InterlockSkillChecks.module.css","StyleModules/Animations.module.css","Cyberware/CyberSurgery.module.css","MainMenu/MainMenu.module.css","Classes/ClassDetails.module.css","MainMenu/MainMenu.tsx","Player/Player.module.css","Player/PlayerControls.module.css","Bootloader.module.css","Common/Sidebar.module.css","InterlockSystem/InterlockSkillList.module.css","Mainframe/Mainframe.module.css","FNFF/FNFFActions.module.css","FNFF/FNFFArmor.module.css","StyleModules/Splitter.module.css","Login/Login.module.css","InterlockSystem/InterlockLifepath.module.css","TraumaTeam/TTDrugs.module.css","Player/SongList.module.css","Terminal/Terminal.module.css","InterlockSystem/InterlockReputation.module.css","Classes/Classes.module.css","Classes/ClassQuote.module.css","FNFF/FNFFWounds.module.css","Player/AlbumList.module.css","Classes/ClassSpecialAbility.module.css","FNFF/FridayNightFirefight.module.css","NightCity/NCMaps.module.css","Player/PlayerArtwork.module.css","Player/SongLyrics.module.css","Bootloader.tsx","Login/Login.tsx","Classes/ClassDetails.tsx","Services/ClassService.ts","Classes/ClassQuote.tsx","Classes/ClassIntroduction.tsx","Classes/ClassSpecialAbility.tsx","InterlockSystem/InterlockSkillChecks.tsx","Common/Sidebar.Navigation.tsx","Classes/Classes.tsx","InterlockSystem/InterlockIntroduction.tsx","InterlockSystem/InterlockDice.tsx","Services/StatsAndSkillsService.ts","InterlockSystem/InterlockStats.tsx","Common/Tabs.tsx","InterlockSystem/InterlockSkills.tsx","InterlockSystem/InterlockSkillsIP.tsx","InterlockSystem/InterlockSkillList.tsx","InterlockSystem/InterlockReputation.tsx","InterlockSystem/Interlock.tsx","InterlockSystem/InterlockLifepath.tsx","FNFF/FNFFTurns.tsx","FNFF/FNFFIntroduction.tsx","FNFF/FNFFActions.tsx","FNFF/FNFFArmor.tsx","FNFF/FNFFDamage.tsx","FNFF/FNFFWounds.tsx","FNFF/FNFFBodyType.tsx","FNFF/FNFFAttacks.tsx","FNFF/FNFFDeathSaves.tsx","FNFF/FNFFAttacksRanged.tsx","FNFF/FNFFAttacksAuto.tsx","FNFF/FNFFAttacksLaser.tsx","FNFF/FNFFAttacksAoE.tsx","FNFF/FNFFAttacksMartialArts.tsx","FNFF/FNFFAttacksMelee.tsx","FNFF/FridayNightFirefight.tsx","FNFF/FNFFVehicles.tsx","TraumaTeam/TTHealing.tsx","TraumaTeam/TTIntroduction.tsx","TraumaTeam/TTDeath.tsx","TraumaTeam/TraumaTeam.tsx","TraumaTeam/TTBodyBank.tsx","Services/TraumaTeamService.ts","TraumaTeam/TTDrugs.tsx","Cyberware/Cyberware.tsx","Services/CyberwareService.ts","Cyberware/CyberSurgery.tsx","Cyberware/CyberwareIntroduction.tsx","Cyberware/Cyberpsychosis.tsx","Cyberware/CyberHumanity.tsx","Cyberware/CyberwarePieces.tsx","NightCity/NightCity.tsx","NightCity/NCStartingOut.tsx","NightCity/NCLivingOnTheEdge.tsx","NightCity/NCHistory.tsx","NightCity/NCAmerica.tsx","NightCity/NCSlang.tsx","Services/CorporationService.ts","NightCity/NCCorporations.tsx","NightCity/NCMaps.tsx","Common/Loading.tsx","Mainframe/Mainframe.tsx","Player/PlayerMiddleware.tsx","Services/PlayerService.ts","Player/AlbumList.tsx","Player/PlayerArtwork.tsx","Player/PlayerHeaderbar.tsx","Player/PlayerControls.tsx","Player/Player.tsx","Player/SongList.tsx","Player/SongLyrics.tsx","Services/FileService.ts","Terminal/Terminal.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MainSection","MainMenu","props","changeSection","section","setState","selectedSection","isOpen","openMobileMenu","state","Mainframe","className","styles","Desktop","cyberpunk_logo","tabIndex","onClick","this","bind","mainmenuList","Object","values","map","key","Mobile","activateMobileList","hiddenMobileList","Component","Bootloader","development","process","changeLogin","isLoggedIn","loggedIn","setMainSection","currentSection","enablePlayer","player","togglePlayer","renderRealSite","ZetatechDevelopment","Background","DevelopmentBackground","mainContent","loginFunction","closePlayer","Zetatech","src","autoPlay","loop","renderPlayer","renderLogin","hot","Login","changeUsername","e","username","currentTarget","value","changePassword","password","login","attempts","hash","CryptoJS","SHA1","toString","window","location","href","renderAttempts","onEnterLogin","LoginUsername","onChange","LoginPassword","onKeyDown","type","LoginAttempts","LoginButton","ClassDetailsSection","ClassService","fetch","then","s","json","fetched","charClasses","selectedClass","ClassQuote","getAdjective","quoteNumber","characterClass","name","getGender","renderQuotations","splitQuote","quote","split","item","i","length","Math","floor","random","prevProps","prevState","ClassQuoteWrapper","QuoteName","ClassIntroduction","replaceGender","characterInformation","intro","replace","splitNewlines","information","getInformation","nextProps","nextState","ClassPictureMobile","pictureAnimation","PictureMobileOnly","alt","ClassSpecialAbility","ClassSkillWrapper","specialAbility","val","index","Description","description","SkillCheckSections","ClassDetails","switchContent","switchTo","viewing","ownership","female","isActive","selection","details","None","setDetails","getClassDetails","Intro","SpecialAbility","CareerSkills","careerSkills","CareerSkillsGridified","skills","skill","ind","CareerSkillsLong","animations","FadeIn","Title","ClassSections","sector","tabbedpanel","NavLink","ActiveNav","NotActiveNav","ClassDetailContent","getContent","ClassDetailPicture","InterlacedPicture","Sidebar","IsTheActiveMenu","myChoice","chosen","SidebarButtonActive","changeSelected","clicked","changeToMobile","showMobile","MobileShown","MobileHidden","preDetermined","MobileReturnButton","SidebarButton","toggleMobile","choices","PureComponent","Classes","SetActiveClass","selected","characterClasses","find","x","Error","showMobileMenu","toggleMobileView","GetClasses","getClasses","ClassDetailSplit","ClassSplit","ClassPicture","GetDetails","InterlockIntroduction","InterlockIntroductionText","InterlockIntroMobilePic","InterlockIntroductionPicture","InterlockDice","style","border","padding","StatService","stats","fumbleTable","list","InterlockStats","clearSubMenu","setSubMenu","menu","renderSubMenu","back","stat","InterlockStatsSubmenuButton","short","setStats","getStats","InterlockStatsSubmenu","StatRender","renderBT","renderBTM","InterlockStatsBTModifiedTable","renderText","InterlockStatSubmenuDetails","InterlockReturnSubmenuWrapper","InterlockReturnDesktop","InterlockReturnSubmenu","InterlockReturnMobile","Tabs","getAmount","sections","ThreeTabs","FourTabs","FiveTabs","title","sect","Content","SkillSections","InterlockSkillCheck","setFumbleSubMenu","fumble","chosenFumble","renderAboutSkillChecks","SkillDifficultyBorder","renderMakingSkillChecks","ExampleBorder","renderDifficultyModifiers","renderAutomatics","FumbleTableSubmenu","FumbleTableSubmenuButton","renderFumble","FumbleTableSubmenuDetails","usage","FumbleTableWrapper","fumbles","fumb","FumbleTableRow","FumbleRange","range","FumbleResult","result","FumbleTableSubmenuReturnWrapper","FumbleTableReturnDesktop","FumbleTableSubmenuReturn","FumbleTableReturnMobile","About","Making","Difficulty","Automatic","getFumbles","getFumbleTable","SkillIPSections","InterlockSkills","renderAboutSkills","renderStartingSkills","renderPickupSkills","renderHouseRuled","Starting","Pickup","House","InterlockSkillList","renderChoice","setChoice","clearChoice","renderSkill","Fragment","ModalBackground","WindowedInformation","paragraph","includes","listedItem","BigOnMobile","countSkills","totalCount","getSkills","getSkillList","SkillList","skillList","category","ReputationSections","InterlockSkillsIP","renderLearning","splitter","TwoColumnSplit","AwardTable","renderIPMultipliers","renderGettingMore","Learning","Multipliers","Getting","Choices","InterlockReputation","renderAbout","renderTable","renderFacedowns","Table","Facedowns","InterlockLifepath","Lifepath","Explanations","MobilePicture","Bordered","paddingLeft","Picture","TurnsSections","Interlock","changeSelection","newSelection","getCurrentSelection","Introduction","Dice","Stats","SkillCheck","Skills","Improvement","Reputation","InterlockSplit","FNFFIntroduction","FNFFIntroductionText","FNFFIntroductionPictureMobile","FNFFIntroductionPicture","ActionsSections","FNFFTurns","renderRoundsAndTurns","renderWaiting","renderPartyInitiative","renderSnapshots","ArmorSections","FNFFActions","setSection","SingleColumnGrid","ActionPictureMobile","ActionText","ActionPicture","renderMore","renderAmbushes","renderLoS","DesktopOnly","renderImage","LoSPicture","cursor","openPictureInNewTab","open","imageAnimation","toggleImageAnimation","More","Ambushes","LoS","FNFFDamage","FNFFHitLocationMobile","WoundsSections","FNFFArmor","renderSP","renderHardSoft","ArmorTable","renderLayering","renderPiercing","renderCover","CoverImageWrapper","CoverImage","pictureAnimations","SP","HardSoft","Layering","Piercing","Cover","FNFFBodyType","BTTable","AttackMethods","FNFFWounds","renderWoundEffects","renderSpecial","SpecialCasesSplit","renderStuns","SavesSplit","ModifierTableExtend","Effects","Special","Stuns","FNFFDeathSaves","FNFFAttacksRanged","FNFFAttacks","SplitIntoTwo","liPadding","ATable","FNFFAttacksAuto","OverrideMaxContent","FNFFAttacksLaser","FNFFAttacksAoE","FNFFAttacksMartialArts","FNFFAttacksMelee","renderPicture","url","currentSelection","Ranged","Martial","Melee","AoE","Laser","FNFFAttacksPicture","renderBackButton","FNFFAttackMenu","FNFFAttackSmallerMenu","renderSelection","FNFFAttacksInformation","AttacksMobilePicture","attack","toUpperCase","FNFFAttacksSplit","FNFFVehicles","HealingSections","FridayNightFirefight","Initiative","Actions","Damage","Armor","BodyType","Wounds","Death","Attacking","FNFFSplit","FNFFMain","TTIntroduction","redirectToVideo","TTIntroductionText","TTIntroMobilePicture","InterlacedVideo","muted","TTIntroductionPicture","TTDeath","TTDeathMobilePicture","TTHealing","renderFirstAid","renderMedicalTech","renderTime","LiPadding","renderNanotech","FirstAid","MedTech","Time","Nanomachines","TTBodyBank","BodyBankPictureMobile","TTBodyBankTable","TraumaTeamService","drugs","TTDrugs","clearModal","shownDrug","renderDrug","drugcss","strength","difficulty","duration","splitLine","ModalReturn","getDrugs","DrugsPictureMobile","DrugList","drug","TraumaTeam","Healing","BodyBank","Drugs","TTSplit","TTMain","CyberwareService","codes","CyberSurgery","surgeryCodes","getSurgeryCodes","getCodes","SurgeryMain","SurgeryMobilePicture","SplitSurgery","surgeryCode","required","time","damage","cost","SurgeryImage","CyberwareIntroduction","IntroductionSplit","IntroductionPictureMobile","IntroductionImage","Cyberpsychosis","LoadAnimation","SmallerMobileTitle","CyberpsychosisMobilePicture","CyberwareHumanity","HumanityPictureMobile","Cyberware50Split","CyberPieces","Cyberware","Surgery","Humanity","Pieces","CyberSplit","CyberMain","NightCityStartingOut","NightCityIntroduction","NightCityIntroductionText","FirstSessionPictureMobile","NightCityIntroductionPicture","NightCityTheEdge","NightCityLivingOnTheEdge","NightCityOnTheEdgeSplitter","NightCityLivingOnTheEdgePicture","NightCityEdgeRules","NightCityOnTheEdgePicture","NightCityHistory","NightCityAmerica","NightCitySlang","SlangSplit","CorporationService","console","log","JSON","stringify","corporations","NightCityCorporations","setCorporation","corpo","clearCorpo","renderCorporationList","animation","NightCityCorporationGrid","FadeInSlow","corp","shortname","NightCityCorporationPicture","FadeInVerySlow","renderCorporation","PadOutCorporation","BackButton","splitButton","BackButtonMobileBackground","BackButtonMobile","NoMarginHeader","NightCityCorporationChosen","NightCityCorporationLogo","logo","headquarters","majorShareholder","RegionalOfficeSplit","regionalOffices","office","EmployeeSplit","employees","worldwide","troops","covert","background","resources","getCorporations","NightCityMaps","openMapInNewWindow","MapPicture","Loading","loading","React","lazy","Feeds","NightCity","GetStarted","TheEdge","History","America","Slang","Corporations","Maps","NightCitySplit","NightCityMain","fallback","switchFeed","videoFeed","Netspace","selectedVideo","Realspace","getFeed","videoLocation","fullscreenbgvideo","InterlockSystem","FNFF","mainframeVideo","videoDescription","feed","videoNav","activeVideo","renderSection","PlayerState","PlayerService","albums","album","folderName","songs","AlbumList","AlbumListWrapper","setShownAlbum","Album","PlayerArtwork","interval","setSlideshowInterval","setInterval","song","artwork","currentShownArtwork","clearInterval","path","filename","PlayerHeaderbar","switchToPlaying","switchToInterface","PlayerInterface","NowPlaying","switchToAlbums","Albums","switchToLyrics","Lyrics","hasSong","toggleMinimize","minimized","HeaderBar","HeaderBarButtons","renderMinimizeButton","PlayerControls","intervalTimer","setSeekerListener","controller","getCurrentTime","currentTime","togglePlayPause","isPlaying","pauseMusic","playMusic","onSeek","event","seekTo","Number","parseInt","renderSeekBar","getDuration","playerSeekBar","min","max","playerSeeker","switchToNextSongButton","switchToNextSong","setIsPlayingStatus","switchToPreviousSongButton","switchToPreviousSong","renderSongTitle","nowPlaying","artist","renderPlayedWhen","wasPlayed","MaximizeButton","playerControls","controls","renderMaximizeButton","PlayerMiddleware","playerOpts","height","playerVars","autoplay","width","playVideo","pauseVideo","setPlayerController","target","onYTChange","getPlayerState","VideoCued","Unstarted","setIsPlaying","status","invisibleMiddleware","YouTube","videoId","id","opts","onReady","onStateChange","SongList","renderList","switchToSong","Song","playAllSongs","SongListWrapper","SongLyrics","LyricsPadding","lyrics","Player","renderListOrThumbnail","showList","showThisAlbum","Songs","setInterface","changeToSong","shownAlbum","currentSong","currentAlbum","changeToNextSong","currentSongIndex","findIndex","changeToPreviousSong","getAlbums","incAlbums","a","async","getSongs","MinimizedPlayer","ShownPlayer","relativeTo","mainArea","FileService","files","data","getVampireEpilogue","epilogue","folders","Terminal","prompt","structure","permission","reverseHistoryNumber","keyDown","execute","goUpHistory","goDownHistory","preventDefault","tabAutocomplete","ctrlKey","cls","changeCurrentCommand","currentCommand","commands","commandHistory","currentFolder","currentPath","getFolderStructure","home","mainframe","getFiles","cmd","folder","fold","toLowerCase","join","file","print","trim","pathSplit","splice","RegExp","endsWith","parentDirectory","push","startsWith","executeFile","cat","changeDirectry","indexOf","ls","printArray","first","printable","command","Commands","CommandLine","InvisibleInput","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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AWC,KAAO2O,eACtB,iFAGD,iDACA,uJACA,sSAGA,0IACA,gLACA,yBAAK5O,UAAWC,KAAO2O,eACtB,0GAED,uJACA,iHACA,0SACA,uI,GAtD0B5N,aCgCf8X,G,iLA/Bb,OACC,yBAAK9Y,UAAWC,KAAOuY,aACtB,8CACA,iFACA,kMACA,sCACA,mHACA,6LACA,uPACA,4CACA,iHACA,sRACA,8HACA,uDACA,4BACC,gEACA,8JACA,gEACA,8JACC,4CACA,yCACA,0CACA,4CAED,4H,GA1B0BxX,aCyEhB+X,G,iLAtEb,OACC,yBAAK/Y,UAAWC,KAAOuY,aACtB,uDACA,qOACA,4KACA,4RACA,mNACA,yCACA,yBAAKxY,UAAWC,KAAOwY,cACtB,6BACC,sTACA,6MACA,4LAED,6BACC,8CACA,+BACE,4BACC,qCACA,+CACA,uCAED,4BACC,wCACA,uCACA,oCAED,4BACC,sCACA,wCACA,oCAED,4BACC,oCACA,wCACA,uCAKL,qRACA,gYACA,6CACA,iOACA,oOACA,kKACA,yPACA,4EACA,uFACA,yNACA,4BACC,kDACA,kDACA,mDAED,yCACA,8HACA,0MACA,2LACA,wLACA,mHAEA,kDACA,oMACA,yF,GAlEyBzX,aCkDdgY,G,iLAjDb,OACC,yBAAKhZ,UAAWC,KAAOuY,aACtB,8DACA,wJACA,4DACA,4BACC,uEACA,mEACA,oEACA,uEACA,8GACA,2JACA,sJACA,mGACA,0HACA,mIACA,yIAED,6CACA,qQACA,0NAGA,4BACC,0CACA,+CACA,yCAED,8HACA,kEACA,4BACC,0CACA,+CACA,wCACA,yCACA,0CAED,0FACA,8JACA,sKACA,4HACA,wCACA,mGACA,0K,GA7CiCxX,aCsFtBiY,G,iLApFb,OACC,yBAAKjZ,UAAWC,KAAOuY,aACtB,8CACY,sQACA,uKACZ,yBAAKxY,UAAWC,KAAO2O,eACP,kHAEJ,wCACA,wIACA,gOACZ,yBAAK5O,UAAWC,KAAO2O,eACP,+FAEJ,yCACA,4OACA,2LACA,mIACA,yBAAK5O,UAAWC,KAAO2O,eACnB,8FAEJ,6CACA,yBAAK5O,UAAWC,KAAOwY,cACnB,6BACI,gIACA,sJACA,wEACA,sFACA,yLACA,kKACA,4CACA,6LACA,2KAEJ,6BACI,uDACA,+BACI,4BACI,wCACA,4CAEJ,4BACI,yCACA,mCAEJ,4BACI,oCACA,mCAEJ,4BACI,uCACA,kCAEJ,4BACI,sCACA,mCAEJ,4BACI,2CACA,mCAEJ,4BACI,+CACA,mCAEJ,4BACI,+CACA,mCAEJ,4BACI,6CACA,sCAMhB,+H,GA/EezX,c,SPO1B2W,K,wBAAAA,E,8BAAAA,E,6BAAAA,E,sBAAAA,E,sBAAAA,E,wBAAAA,Q,SQSA9E,GR2IU2F,G,YArId,WAAmBjZ,GAAY,IAAD,8BAC7B,4CAAMA,KAOA2Z,cAAgB,WACtB,IAAIC,EAAM,GACV,OAAQ,EAAKrZ,MAAMsZ,kBAClB,KAAKzB,GAAc0B,OAClBF,EAAM,kCACN,MACD,KAAKxB,GAAc2B,QAClBH,EAAM,iCACN,MACD,KAAKxB,GAAc4B,MAClBJ,EAAM,kCACN,MACD,KAAKxB,GAAcxH,UAClBgJ,EAAM,sCACN,MACD,KAAKxB,GAAc6B,IAClBL,EAAM,gCACN,MACD,KAAKxB,GAAc8B,MAClBN,EAAM,iCACN,MACD,QACCA,EAAM,0BAIR,OACC,yBAAKnZ,UAAWC,KAAOyZ,oBACtB,yBAAK1Z,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,yBAAyB1E,IAAK+W,MApC3D,EAyCvB/D,WAAa,SAAC3V,GACpB,EAAKC,SAAS,CACb0Z,iBAAkB3Z,KA3CU,EA+CvBka,iBAAmB,WACzB,OACC,yBAAK3Z,UAAWC,KAAO2Z,eAAiB,IAAM3Z,KAAO4Z,uBACpD,4BAAQxZ,QAAS,kBAAM,EAAKX,SAAS,CAAE0Z,iBAAkB,SAAzD,kBAlD2B,EAuDvBU,gBAAkB,WACxB,OAAQ,EAAKha,MAAMsZ,kBAClB,KAAKzB,GAAc0B,OAClB,OACC,6BACE,EAAKM,mBACN,kBAAC,GAAD,OAIH,KAAKhC,GAAc4B,MAClB,OACC,6BACE,EAAKI,mBACN,kBAAC,GAAD,OAIH,KAAKhC,GAAcxH,UAClB,OACC,6BACE,EAAKwJ,mBACN,kBAAC,GAAD,OAIH,KAAKhC,GAAc2B,QAClB,OACC,6BACE,EAAKK,mBACN,kBAAC,GAAD,OAGH,KAAKhC,GAAc8B,MAClB,OACC,6BACE,EAAKE,mBACN,kBAAC,GAAD,OAGH,KAAKhC,GAAc6B,IAClB,OACC,6BACE,EAAKG,mBACN,kBAAC,GAAD,OAKJ,OACC,yBAAK3Z,UAAWC,KAAO8Z,wBACtB,+CACA,yBAAK/Z,UAAWC,KAAO+Z,qBAAuB,IAAMpT,IAAiBC,kBAAmBC,IAAI,yBAAyB1E,IAAI,4BACzH,qFACA,6BACA,yBAAKpC,UAAYC,KAAO2Z,gBACtBnZ,OAAOC,OAAOiX,IAAehX,KAAI,SAACsZ,GAClC,OACC,4BAAQ5Z,QAAS,kBAAM,EAAK+U,WAAW6E,KAAUA,EAAOC,mBAI3D,+BAlHF,EAAKpa,MAAQ,CACZsZ,iBAAkB,MAJU,E,sEA4H7B,OACC,yBAAKpZ,UAAWC,KAAOka,kBACrB7Z,KAAKwZ,kBACLxZ,KAAK4Y,qB,GAjIgBlY,aSuBXoZ,G,iLAvCb,OACC,yBAAKpa,UAAWC,KAAOuU,kBACtB,yBAAKxU,UAAWC,KAAOwU,sBACtB,yCACe,oIACA,4IACA,yFACA,yBAAKzU,UAAWC,KAAO2O,eACnB,uFAEJ,0KACA,4BACI,sFACA,yJACA,+FAEJ,+IACA,6HACA,uHACA,+CACA,4LACA,2FACA,+JACA,+CACA,wOACA,8OACA,qDACA,mLACA,4KACA,4IAEhB,yBAAK5O,UAAWC,KAAO0U,yBACtB,yBAAK3U,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,yBAAyB1E,IAAI,sC,GAnC/DpB,c,SDetB6R,K,4BAAAA,E,wBAAAA,E,kBAAAA,E,gBAAAA,E,cAAAA,E,qBAAAA,E,uBAAAA,E,oBAAAA,E,2BAAAA,E,qBAAAA,Q,SEdAwH,GFiGUC,G,YApEd,WAAmB/a,GAAY,IAAD,8BAC7B,4CAAMA,KAQAsU,gBAAkB,SAACC,GACzB,EAAKpU,SAAS,CACboI,UAAWgM,EACX7I,gBAAgB,KAZY,EAgBvB8I,oBAAsB,WAC5B,OAAO,EAAKjU,MAAMgI,WACjB,KAAK+K,GAAQmB,aACA,OAAO,kBAAC,GAAD,MACX,KAAKnB,GAAQ0H,WACrB,OAAO,kBAAC,GAAD,MACR,KAAK1H,GAAQ2H,QACZ,OAAO,kBAAC,GAAD,MACR,KAAK3H,GAAQ4H,OACZ,OAAO,kBAAC,GAAD,MACR,KAAK5H,GAAQ6H,MACZ,OAAO,kBAAC,GAAD,MACR,KAAK7H,GAAQ8H,SACZ,OAAO,kBAAC,GAAD,MACR,KAAK9H,GAAQ+H,OACZ,OAAO,kBAAC,GAAD,MACR,KAAK/H,GAAQgI,MACZ,OAAO,kBAAC,GAAD,MACR,KAAKhI,GAAQiI,UACZ,OAAO,kBAAC,GAAD,MACR,QACC,OAAO,kBAAC,GAAD,QArCoB,EAyCvB5P,iBAAmB,WACzB,EAAKxL,SAAS,CACbuL,gBAAiB,EAAKnL,MAAMmL,kBAxC7B,EAAKnL,MAAQ,CACZgI,UAAW+K,GAAQmB,aACnB/I,gBAAgB,GALY,E,sEAgD7B,OACC,6BACC,wBAAIjL,UAAU,cAAcK,QAASC,KAAK4K,kBAA1C,2BACA,yBAAKlL,UAAWC,KAAO8a,WACtB,kBAAC,EAAD,CAAS9Q,WAAY3J,KAAKR,MAAMmL,eAC9BT,QAAS/J,OAAOC,OAAOmS,IACvB9I,QAASzJ,KAAKuT,gBACdzJ,cAAeyI,GAAQmB,aACvBzJ,aAAcjK,KAAK4K,mBAGrB,yBAAKlL,UAAWC,KAAO+a,UACrB1a,KAAKyT,6B,GA9DuB/S,a,oBGqBpBia,G,2MA/CJC,gBAAkB,WACrB1X,OAAOyS,KAAK,8CAA+C,W,wEAIjE,OACC,yBAAKjW,UAAWC,KAAOgb,gBACtB,yBAAKjb,UAAWC,KAAOkb,oBACtB,wDACA,yBAAKnb,UAAWC,KAAOmb,qBAAuB,IAAMxU,IAAiBC,kBAAmBC,IAAI,oCAAoC1E,IAAI,kCACpI,sNACe,iKACA,oVACA,oTACA,yCACA,4VACA,mLACA,sJACA,4OAEA,iFACA,2CACA,8OACA,qMACA,gLACA,8KACA,yBAAKpC,UAAWC,KAAOob,gBAAiBhb,QAASC,KAAK4a,iBAClD,2BAAO5Y,MAAI,EAACgZ,OAAK,EAACjZ,UAAQ,EAACrC,UAAW4G,IAAiB4C,kBAAmBpH,IAAI,wBAElF,sSACA,iSAGA,kPACA,+VACA,0GACA,kDACA,6OAEhB,yBAAKpC,UAAWC,KAAOsb,uBACtB,yBAAKvb,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,oCAAoC1E,IAAI,wC,GA1CxEpB,aCuCdwa,G,iLApCb,OACC,yBAAKxb,UAAWC,KAAOgb,gBACtB,yBAAKjb,UAAWC,KAAOkb,oBACtB,sCACA,yBAAKnb,UAAWC,KAAOwb,qBAAuB,IAAM7U,IAAiBC,kBAAmBC,IAAI,oBAAoB1E,IAAI,uCACrG,uIACA,kIACA,gLACA,sPACA,yBAAKpC,UAAWC,KAAO2O,eACnB,sKACA,0KAEJ,4KACA,kGACA,8KACA,mLACA,yGACA,wFACA,sUACA,qLACA,+FACA,4HACA,yBAAK5O,UAAWC,KAAO2O,eACnB,wJAEJ,6IAEhB,yBAAK5O,UAAWC,KAAOsb,uBACtB,yBAAKvb,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,oBAAoB1E,IAAI,6C,GAhC/DpB,c,SFCjBqZ,K,cAAAA,E,qBAAAA,E,uBAAAA,E,8BAAAA,E,aAAAA,Q,SGUAxH,GHmIU6I,G,YA/HX,WAAmBnc,GAAY,IAAD,8BAC1B,4CAAMA,KAON6V,WAAa,SAAC3V,GACpB,EAAKC,SAAS,CACbD,QAASA,KAVsB,EAc1Bkc,eAAiB,WACvB,OACC,6BACa,2JACA,sJACA,yBAAK3b,UAAWiJ,IAAY2F,eACxB,sJACA,qJACA,+JAEJ,iDACA,yGACA,2KACA,sEA3BkB,EAgC1BgN,kBAAoB,WAC1B,OACC,6BACa,4HACA,wOACA,2BAAG,oFACH,uMACA,yBAAK5b,UAAWiJ,IAAY2F,eACxB,4HACA,2MACA,4MA1Cc,EAgD1BiN,WAAa,WACnB,OACC,6BACa,gSACA,yFACA,wBAAI7b,UAAWC,KAAO6b,WAClB,wIACA,iKACA,0TACA,gVAzDc,EA+DvBC,eAAiB,WACpB,OACI,6BACI,4IACA,8LACA,oTACA,uMAA4K,yCAC5K,iKACA,iIAvEkB,EA4E1BhJ,YAAc,WACpB,OACC,6BACa,4FACA,yOACA,wIACA,mKACA,yBAAK/S,UAAWiJ,IAAY2F,eACxB,6FAEJ,iNACA,0GAvFkB,EA6F1BoC,aAAe,WACrB,OAAO,EAAKlR,MAAML,SACR,KAAK4a,GAAgBrK,MACjB,OAAO,EAAK+C,cACzB,KAAKsH,GAAgB2B,SACpB,OAAO,EAAKL,iBACb,KAAKtB,GAAgB4B,QACpB,OAAO,EAAKL,oBACb,KAAKvB,GAAgB6B,KACR,OAAO,EAAKL,aAChB,KAAKxB,GAAgB8B,aACjB,OAAO,EAAKJ,iBAG1B,MAAO,IA3GyB,EA8G1BlU,SAAW,SAACC,GAClB,OAAO,EAAKhI,MAAML,UAAYqI,GA5GxB,EAAKhI,MAAQ,CACTL,QAAS4a,GAAgBrK,OAJH,E,sEAoHhC,OACU,kBAAC,EAAD,CAAM1G,WAAYhJ,KAAK0Q,aACnBnJ,SAAUvH,KAAKuH,SACfgG,SAAUwM,GACVpM,MAAM,WACNzG,cAAelH,KAAK8U,iB,GA3HZpU,aIwDTob,G,iLAlEb,OACC,yBAAKpc,UAAWC,KAAOgb,gBACtB,yBAAKjb,UAAWC,KAAOkb,oBACtB,8CACA,yBAAKnb,UAAWC,KAAOoc,sBAAwB,IAAMzV,IAAiBC,kBAAmBC,IAAI,oCAAoC1E,IAAI,qCACrI,iPACe,4QACA,yPACA,2BAAOpC,UAAWC,KAAOqc,iBACrB,4BACI,oCACA,8CACA,2CAEJ,4BACI,mCACA,mCACA,qCAEJ,4BACI,mCACA,mCACA,qCAEJ,4BACI,4CACA,mCACA,qCAEJ,4BACI,8CACA,mCACA,oCAEJ,4BACI,2CACA,mCACA,qCAEJ,4BACI,4CACA,yCACA,2CAGR,wPACA,wNACA,wXACA,iIACA,yBAAKtc,UAAWC,KAAO2O,eACnB,wKACA,+HAEJ,uDACA,qPACA,uGACA,2MAEhB,yBAAK5O,UAAWC,KAAOsb,uBACtB,yBAAKvb,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,oCAAoC1E,IAAI,2C,GA9D5EpB,a,oBCIZub,GAAb,mMAESjY,MAAM,gCACZC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAOF,MAAK,SAACG,GAC1B,OAAOA,EAAQ8X,aAJnB,8CCgFeC,G,YA3EX,WAAmBld,GAAY,IAAD,8BAC1B,4CAAMA,KAgBHmd,WAAa,WAChB,EAAKhd,SAAS,CACVid,UAAW,QAnBW,EAuBvBC,WAAa,WAChB,OAA2B,MAAxB,EAAK9c,MAAM6c,UAEN,6BACI,yBAAK3c,UAAW6c,KAAQxL,gBAAiBhR,QAAS,EAAKqc,aACvD,yBAAK1c,UAAW6c,KAAQvL,qBACpB,4BAAK,EAAKxR,MAAM6c,UAAU1X,MAC1B,0CAAgB,EAAKnF,MAAM6c,UAAUG,UACrC,4CAAkB,EAAKhd,MAAM6c,UAAUI,YACvC,0CAAgB,EAAKjd,MAAM6c,UAAUK,UACpC,EAAKld,MAAM6c,UAAUtV,YAAY/B,MAAM,MAAM3E,KAAI,SAACsc,GAC/C,OAAO,2BAAIA,MAEf,4BAAQjd,UAAW6c,KAAQK,YAAa7c,QAAS,EAAKqc,YAAtD,KACM,oCADN,WAC6B,sCAMtC,IAzCP,EAAK5c,MAAQ,CACT0c,MAAO,GACPG,UAAW,MAGf,EAAKQ,WAPqB,E,0KAWRZ,GAAkBY,Y,OAAhCX,E,OACJlc,KAAKZ,SAAS,CACV8c,MAAOA,I,gFAiCD,IAAD,OACf,OACC,yBAAKxc,UAAWC,KAAOgb,gBACtB,yBAAKjb,UAAWC,KAAOkb,oBACtB,sCACA,yBAAKnb,UAAWC,KAAOmd,mBAAqB,IAAMxW,IAAiBC,kBAAmBC,IAAI,WAAW1E,IAAI,+BACxF9B,KAAKsc,aACP,2NACA,qNACA,2KACA,6OAEA,iEACA,yBAAK5c,UAAW6c,KAAQQ,UACnB/c,KAAKR,MAAM0c,MAAM7b,KAAI,SAAC2c,GACnB,OAAO,4BAAQjd,QAAS,WAAQ,EAAKX,SAAS,CAACid,UAAWW,MAAaA,EAAKrY,WAIpG,yBAAKjF,UAAWC,KAAOsb,uBACP,yBAAKvb,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,WACpDmH,MAAM,yDAAsD7L,IAAI,qC,GArElEpB,c,SHIjB6R,K,4BAAAA,E,cAAAA,E,kBAAAA,E,qBAAAA,E,eAAAA,Q,SIDAA,GJsEU0K,G,YA3Dd,WAAmBhe,GAAY,IAAD,8BAC7B,4CAAMA,KAQAsU,gBAAkB,SAACC,GACzB,EAAKpU,SAAS,CACboI,UAAWgM,EACX7I,gBAAgB,KAZY,EAgBvB8I,oBAAsB,WAC5B,OAAO,EAAKjU,MAAMgI,WACjB,KAAK+K,GAAQmB,aACA,OAAO,kBAAC,GAAD,MACX,KAAKnB,GAAQgI,MACT,OAAO,kBAAC,GAAD,MACX,KAAKhI,GAAQ2K,QACT,OAAO,kBAAC,GAAD,MACpB,KAAK3K,GAAQ4K,SACZ,OAAO,kBAAC,GAAD,MACR,KAAK5K,GAAQ6K,MACZ,OAAO,kBAAC,GAAD,MACR,QACC,MAAO,KA7BoB,EAiCvBxS,iBAAmB,WACzB,EAAKxL,SAAS,CACbuL,gBAAiB,EAAKnL,MAAMmL,kBAhC7B,EAAKnL,MAAQ,CACZgI,UAAW+K,GAAQmB,aACnB/I,gBAAgB,GALY,E,sEAwC7B,OACC,6BACC,wBAAIjL,UAAU,cAAcK,QAASC,KAAK4K,kBAA1C,8BACA,yBAAKlL,UAAWC,KAAO0d,SACtB,kBAAC,EAAD,CAAS1T,WAAY3J,KAAKR,MAAMmL,eAC/BT,QAAS/J,OAAOC,OAAOmS,IACvB9I,QAASzJ,KAAKuT,gBACdzJ,cAAeyI,GAAQmB,aACvBzJ,aAAcjK,KAAK4K,mBAEpB,yBAAKlL,UAAWC,KAAO2d,QACrBtd,KAAKyT,6B,GArDa/S,a,wCKdZ6c,GAAb,mMAESvZ,MAAM,sCACZC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAOF,MAAK,SAACG,GAC1B,OAAOA,EAAQoZ,aAJnB,8CCsEeC,G,YApEd,WAAmBxe,GAAY,IAAD,8BAC7B,4CAAMA,KAEDO,MAAQ,CACZke,aAAc,IAGf,EAAKC,kBAPwB,E,6JAW7B3d,K,mBACqBud,GAAiBK,Y,yBAArCF,a,WADIte,S,gGAML,OACC,yBAAKM,UAAWC,KAAOke,aACtB,6BACC,wCACA,yBAAKne,UAAWC,KAAOme,qBAAuB,IAAMxX,IAAiBC,kBACpEC,IAAI,wBAAwB1E,IAAI,+BAElB,qLACf,iNACA,0MACe,wKACA,wSACA,gKACA,iIACA,qQACA,0NACf,yBAAKpC,UAAWC,KAAOoe,cACrB/d,KAAKR,MAAMke,aAAard,KAAI,SAAC2d,GAC7B,OACC,6BACC,4BAAKA,EAAYrZ,MACjB,4CAAkBqZ,EAAYC,UAC9B,+CAAqBD,EAAYE,MACjC,qCAAWF,EAAYG,QACvB,oCAAUH,EAAYI,MACtB,0CAAgBJ,EAAYvB,iBAKhC,6BACC,kIACA,gGACA,sHACA,2JAEA,oDACA,oIACA,iIACA,wFACA,6LAGF,yBAAK/c,UAAWC,KAAO0e,cACtB,yBAAK3e,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,wBAAwB1E,IAAI,qC,GA/D9DpB,aCkCZ4d,G,iLArCb,OACC,yBAAK5e,UAAWC,KAAO4e,mBACtB,6BACC,6CACA,yBAAK7e,UAAWC,KAAO6e,0BAA4B,IAAMlY,IAAiBC,kBAAmBoH,MAAM,6CACnGnH,IAAI,6CAA6C1E,IAAI,iCACrD,6FACA,kFACA,4TACA,2IACA,yOACA,mEACA,6CACA,qGACA,4TAGA,oRAGA,yOACA,0KACA,+TAGA,4JACA,gGAED,yBAAKpC,UAAWC,KAAO8e,mBACtB,yBAAK/e,UAAW4G,IAAiB4C,kBAAmByE,MAAM,6CAC1DnH,IAAI,6CAA6C1E,IAAI,uC,GAhCtBpB,aCsCrBge,G,iLApCb,OACC,yBAAKhf,UAAWC,KAAO4e,mBACtB,6BACC,yBAAK7e,UAAWC,KAAOgf,gBACvB,wBAAIjf,UAAWC,KAAOif,oBAAtB,mBACA,yBAAKlf,UAAWC,KAAOkf,4BAA8B,IAAMvY,IAAiBC,kBAAmBoH,MAAM,kCACrGnH,IAAI,kCAAkC1E,IAAI,sCAC3B,oJACA,oLACA,sGACA,2IACA,iJAEA,6DACA,2NACA,2LACA,gQACA,yBAAKpC,UAAWC,KAAO2O,eACrC,8IAED,uJACA,4HACA,oJACA,uOACA,qGACA,sNAED,yBAAK5O,UAAWC,KAAO8e,mBACtB,yBAAK/e,UAAW4G,IAAiB4C,kBAAmByE,MAAM,kCAC1DnH,IAAI,kCAAkC1E,IAAI,4C,GA/BlBpB,aCkDdoe,G,iLAhDb,OACC,yBAAKpf,UAAWC,KAAO4e,mBACtB,6BACC,yCACe,yBAAK7e,UAAWC,KAAOof,sBAAwB,IAAMzY,IAAiBC,kBAClEC,IAAI,+BAA+B1E,IAAI,gCAE3C,uKACA,8LACA,sIACA,oKACA,yBAAKpC,UAAWC,KAAOqf,kBACnB,6BACI,iDACA,kHACA,2PAIJ,yBAAKtf,UAAWC,KAAO2O,eACnB,+CACA,+DACA,oEACA,8DACA,qEACA,+DAGR,mIAEA,yBAAK5O,UAAWC,KAAO2O,eACnB,gDACA,uFACA,4BACI,oEACA,oEACA,kEAIxB,yBAAK5O,UAAWC,KAAO8e,mBACtB,yBAAK/e,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,8BAA8B1E,IAAI,sC,GA3C/DpB,aCmFjBue,G,iLAhFb,OACC,yBAAKvf,UAAWC,KAAOke,aACtB,6BACC,oDACe,yBAAKne,UAAW4G,IAAiBC,kBAAmBC,IAAI,YAAYmH,MAAM,YAAY7L,IAAI,oCAC1F,qOACA,6IAEA,4CACA,gOACA,yBAAKpC,UAAW4G,IAAiBC,kBAAmBC,IAAI,iBAAiBmH,MAAM,iBAAiB7L,IAAI,mCAEpG,uDACA,sLACA,sJAEA,yCACA,+UACA,6PACA,kUACA,kKAEA,yCACA,uGACA,kMAEA,wCACA,uLACA,wJAEA,6CACA,sHACA,2LACA,mVAEA,4CACA,iPACA,2LAEA,2CACA,mRACA,iMACA,yBAAKpC,UAAW4G,IAAiBC,kBAAmBC,IAAI,iBAAiBmH,MAAM,iBAAiB7L,IAAI,oCAEpG,2CACA,oLACA,2NACA,yKACA,uLAEA,8CACA,oLACA,uJACA,4LAEA,6CACA,sJACA,+KACA,qMAEJ,6BACI,yBAAKpC,UAAWC,KAAO0e,cACnB,yBAAK3e,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,iBAAiBmH,MAAM,iBAAiB7L,IAAI,oCAExG,yBAAKpC,UAAWC,KAAO0e,cACnB,yBAAK3e,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,YAAYmH,MAAM,YAAY7L,IAAI,qCAE9F,yBAAKpC,UAAWC,KAAO0e,cACnB,yBAAK3e,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,sBAAsBmH,MAAM,sBAAsB7L,IAAI,qCAElH,yBAAKpC,UAAWC,KAAO0e,cACnB,yBAAK3e,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,yBAAyBmH,MAAM,yBAAyB7L,IAAI,2C,GA1ElHpB,c,SNUrB6R,K,4BAAAA,E,gCAAAA,E,kBAAAA,E,oBAAAA,E,iBAAAA,Q,SOKAA,GPgEU2M,G,YA3Dd,WAAmBjgB,GAAY,IAAD,8BAC7B,4CAAMA,KAQAsU,gBAAkB,SAACC,GACzB,EAAKpU,SAAS,CACboI,UAAWgM,EACX7I,gBAAgB,KAZY,EAgBvB8I,oBAAsB,WAC5B,OAAO,EAAKjU,MAAMgI,WACjB,KAAK+K,GAAQmB,aACZ,OAAO,kBAAC,GAAD,MACR,KAAKnB,GAAQmM,eACZ,OAAO,kBAAC,GAAD,MACR,KAAKnM,GAAQ4M,QACZ,OAAO,kBAAC,GAAD,MACR,KAAK5M,GAAQ6M,SACZ,OAAO,kBAAC,GAAD,MACR,KAAK7M,GAAQ8M,OACZ,OAAO,kBAAC,GAAD,MACR,QACC,MAAO,KA7BoB,EAiCvBzU,iBAAmB,WACzB,EAAKxL,SAAS,CACbuL,gBAAiB,EAAKnL,MAAMmL,kBAhC7B,EAAKnL,MAAQ,CACZgI,UAAW+K,GAAQmB,aACnB/I,gBAAgB,GALY,E,sEAwC7B,OACC,6BACC,wBAAIjL,UAAU,cAAcK,QAASC,KAAK4K,kBAA1C,cACA,yBAAKlL,UAAWC,KAAO2f,YACtB,kBAAC,EAAD,CAAS3V,WAAY3J,KAAKR,MAAMmL,eAC9BT,QAAS/J,OAAOC,OAAOmS,IACvB9I,QAASzJ,KAAKuT,gBACdzJ,cAAeyI,GAAQmB,aACvBzJ,aAAcjK,KAAK4K,mBAErB,yBAAKlL,UAAWC,KAAO4f,WACrBvf,KAAKyT,6B,GArDY/S,a,oBQgBT8e,G,iLA/Bb,OACC,yBAAK9f,UAAWC,KAAO8f,uBACtB,yBAAK/f,UAAWC,KAAO+f,2BACtB,kDACA,yBAAKhgB,UAAWC,KAAOggB,0BAA4B,IAAMrZ,IAAiBC,kBAAmBC,IAAI,qBAAqB1E,IAAI,oCAC3G,2MACA,sIACA,6JACA,0FACA,0DACA,iEACA,sGACA,gIACA,+EACA,gIACA,+HACA,yCACA,gJAAqH,mCAArH,mFACA,mJACA,qGACA,2JAGhB,yBAAKpC,UAAWC,KAAOigB,8BACtB,yBAAKlgB,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,qBAAqB1E,IAAI,0C,GA3BnDpB,aC+DpBmf,G,iLA5Db,OACC,yBAAKngB,UAAWC,KAAOmgB,0BACV,yBAAKpgB,UAAWC,KAAOogB,4BACnB,mDACA,yBAAKrgB,UAAWC,KAAOqgB,gCAAkC,IAAM1Z,IAAiBC,kBAAoBC,IAAI,qBAAqB1E,IAAI,qCACjI,uGACA,yBAAKpC,UAAWC,KAAOsgB,oBACnB,yBAAKvgB,UAAWC,KAAO2O,eACnB,wDACA,mHACA,2GACA,wLAEA,yDACA,qLACA,2BAAI,oKACJ,sQACA,yEACA,uEAEA,mDACA,qNACA,kRACA,2DAEJ,yBAAK5O,UAAWC,KAAOigB,8BACnB,yBAAKlgB,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,qBAAqB1E,IAAI,wCAIzG,yBAAKpC,UAAWC,KAAO+f,2BACP,sDAEA,0LACA,gJACA,kGACA,+KACA,4HAEA,yBAAKhgB,UAAW4G,IAAiBC,kBAC7BC,IAAI,qBAAqB1E,IAAI,iCAEjC,yBAAKpC,UAAWC,KAAOugB,2BACnB,yBAAKxgB,UAAW4G,IAAiB4C,kBAC7B1C,IAAI,qBAAqB1E,IAAI,kCAGrC,6DACA,+GACA,iMACA,oHACA,oEACA,4BAAI,kCAAJ,4B,GAvDWpB,aC8BhByf,G,iLA3Bb,OACC,yBAAKzgB,UAAWC,KAAO8f,uBACtB,yBAAK/f,UAAWC,KAAO+f,2BACtB,sDACA,yBAAKhgB,UAAWC,KAAOggB,0BAA4B,IAAMrZ,IAAiBC,kBAAmBC,IAAI,wBAAwBmH,MAAM,wBAAwB7L,IAAI,+BAC5I,uMACA,6RACA,iRACA,uHACA,8PACA,mJACA,uQACA,yMACA,gNACA,yQACA,wIACA,qKACA,8JAEhB,yBAAKpC,UAAWC,KAAOigB,8BACtB,yBAAKlgB,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,wBAAwBmH,MAAM,wBAAwB7L,IAAI,qC,GAvBxFpB,aCgDhB0f,G,iLA7Cb,OACC,yBAAK1gB,UAAWC,KAAO8f,uBACtB,yBAAK/f,UAAWC,KAAO+f,2BACtB,gDACA,yBAAKhgB,UAAWC,KAAOggB,0BAA4B,IAAMrZ,IAAiBC,kBAAmBC,IAAI,4BAA4B1E,IAAI,+BACjI,+LACA,yIACA,4GAEA,6CACA,yMACA,uPACA,gPAEA,gDACA,gKACA,0QACA,6HAEA,+CACA,mNACA,mMACA,mRACA,8NAEA,2CACA,yJACA,0KACA,gMACA,+KAEA,2CACA,kTACA,sPACA,gHACA,8HAED,yBAAKpC,UAAWC,KAAOigB,8BACtB,yBAAKlgB,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,uBAAuBmH,MAAM,+BAA+B7L,IAAI,qC,GAzC9FpB,aCsGhB2f,G,iLApGb,OACU,6BACI,yBAAK3gB,UAAWC,KAAO+f,2BAClC,gDACe,2PAEJ,yBAAKhgB,UAAWC,KAAO2gB,YACnB,6BAAK,qCAAc,iFACnB,6BAAK,0CAAmB,yFACxB,6BAAK,6CAAsB,4EAC3B,6BAAK,wCAAiB,+EACtB,6BAAK,gEAAyC,iHAC9C,6BAAK,uCAAgB,mFACrB,6BAAK,yCAAkB,kDACvB,6BAAK,wCAAiB,wGACtB,6BAAK,+CAAwB,mGAC7B,6BAAK,2CAAoB,0FACzB,6BAAK,yCAAkB,yHACvB,6BAAK,2CAAoB,6HACzB,6BAAK,6CAAsB,oDAC3B,6BAAK,4CAAqB,6FAC1B,6BAAK,qCAAc,uDACnB,6BAAK,2CAAoB,wDACzB,6BAAK,qDAA8B,4EACnC,6BAAK,4CAAqB,8DAC1B,6BAAK,2CAAoB,2CACzB,6BAAK,uCAAgB,6GACrB,6BAAK,uCAAgB,0CACrB,6BAAK,4CAAqB,yDAC1B,6BAAK,+CAAwB,2HAC7B,6BAAK,6CAAsB,kFAC3B,6BAAK,4CAAqB,mIAC1B,6BAAK,gDAAyB,yDAC9B,6BAAK,6CAAsB,2CAC3B,6BAAK,6CAAsB,sGAC3B,6BAAK,0CAAmB,oGACxB,6BAAK,8CAAuB,6HAC5B,6BAAK,yCAAkB,+HACvB,6BAAK,mDAA4B,sEACjC,6BAAK,qCAAc,6CACnB,6BAAK,4CAAqB,2DAC1B,6BAAK,2CAAoB,+EACzB,6BAAK,uCAAgB,yDACrB,6BAAK,4CAAqB,2DAC1B,6BAAK,0CAAmB,2DACxB,6BAAK,4CAAqB,2IAC1B,6BAAK,wCAAiB,4HACtB,6BAAK,qCAAc,mEACnB,6BAAK,2CAAoB,8CACzB,6BAAK,yCAAkB,yCACvB,6BAAK,uCAAgB,yGACrB,6BAAK,uCAAgB,oEACrB,6BAAK,sCAAe,wCACpB,6BAAK,2CAAoB,kDACzB,6BAAK,uCAAgB,iEACrB,6BAAK,sCAAe,yEACpB,6BAAK,2CAAoB,0DACzB,6BAAK,6CAAsB,iEAC3B,6BAAK,sCAAe,sEACpB,6BAAK,sCAAe,4CACpB,6BAAK,6CAAsB,qFAC3B,6BAAK,uCAAgB,kFACrB,6BAAK,yCAAkB,0EACvB,6BAAK,6CAAsB,kGAC3B,6BAAK,2CAAoB,yEACzB,6BAAK,4CAAqB,oFAC1B,6BAAK,uCAAgB,kEACrB,6BAAK,sCAAe,yFACpB,6BAAK,yCAAkB,+IACvB,6BAAK,uCAAgB,8DACrB,6BAAK,uCAAgB,4EACrB,6BAAK,uCAAgB,2CACrB,6BAAK,0CAAmB,uCACxB,6BAAK,0CAAmB,+CACxB,6BAAK,2CAAoB,2CACzB,6BAAK,kDAA2B,0EAChC,6BAAK,2CAAoB,qFACzB,6BAAK,2CAAoB,gFACzB,6BAAK,wCAAiB,4GACtB,6BAAK,gDAAyB,gGAC9B,6BAAK,2CAAoB,iFACzB,6BAAK,4CAAqB,kEAC1B,6BAAK,uCAAgB,uDACrB,6BAAK,wCAAiB,+IACtB,6BAAK,6CAAsB,6EAC3B,6BAAK,uCAAgB,gEACrB,6BAAK,wCAAiB,sDACtB,6BAAK,sCAAe,mEACpB,6BAAK,4CAAqB,wFAC1B,6BAAK,sCAAe,oDACpB,6BAAK,2CAAoB,0DACzB,6BAAK,wCAAiB,8EACtB,6BAAK,uCAAgB,2CACrB,6BAAK,uCAAgB,wD,GAhGZ5f,a,oBCchB6f,GAAb,0MAESvc,MAAM,sCACZC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAOF,MAAK,SAACG,GAE1B,OADYoc,QAAQC,IAAIC,KAAKC,UAAUvc,EAAQwc,eACxCxc,EAAQwc,oBALnB,8CCwHeC,G,YA7HX,WAAmB5hB,GAAY,IAAD,8BAC1B,4CAAMA,KAgBH6hB,eAAiB,SAACC,GACrB,EAAK3hB,SAAS,CACVkL,SAAUyW,KAnBY,EAuBvBC,WAAa,WAChB,EAAK5hB,SAAS,CACVkL,SAAU,QAzBY,EA6BvB2W,sBAAwB,WAC3B,OACI,yBAAKvhB,UAAWC,KAAOkhB,uBACnB,6BACI,yBAAKnhB,UAAWwhB,IAAU3Y,QACtB,+DACA,mQACA,iRACA,0FACA,8BAEJ,yBAAK7I,UAAWC,KAAOwhB,yBAA2B,IAAMD,IAAUE,YAC7D,EAAK5hB,MAAMohB,aAAavgB,KAAI,SAACghB,GAC1B,OACI,4BAAQthB,QAAS,WAAQ,EAAK+gB,eAAeO,KAAWA,EAAKC,gBAK7E,yBAAK5hB,UAAWC,KAAO4hB,4BAA8B,IAAML,IAAUM,gBACjE,yBAAK9hB,UAAW4G,IAAiB4C,kBAAmB1C,IAAI,oBAAoBmH,MAAM,oBAAoB7L,IAAI,uCAjD5F,EAuDvB2f,kBAAoB,WACvB,IAAIV,EAAQ,EAAKvhB,MAAM8K,SAEvB,OAAY,MAATyW,EAEK,yBAAKrhB,UAAWC,KAAO+hB,kBAAoB,IAAMR,IAAU3Y,QACvD,yBAAK7I,UAAWC,KAAOgiB,WAAY5hB,QAAS,EAAKihB,YAAjD,KACQ,WAAWhc,MAAM,KAAK3E,KAAI,SAACuhB,GAC3B,OAAO,kCAAQA,EAAR,SAGf,yBAAKliB,UAAWC,KAAOkiB,4BACnB,4BAAQniB,UAAWC,KAAOmiB,iBAAkB/hB,QAAS,EAAKihB,YAA1D,SAEJ,wBAAIthB,UAAWC,KAAOoiB,gBAAtB,wBACA,6BAEA,yBAAKriB,UAAWC,KAAOqiB,4BACnB,6BACI,wBAAItiB,UAAWC,KAAOoiB,gBAAiBhB,EAAMpc,MAC7C,4BAAKoc,EAAMha,aACX,yBAAKrH,UAAWC,KAAOsiB,0BACnB,yBAAKviB,UAAW4G,IAAiB4C,kBAAmB1C,IAAKua,EAAMpc,KAAM7C,IAAK,mCAAqCif,EAAMmB,QAEzH,oDACA,8CAAoBnB,EAAMoB,cAC1B,iDAAuBpB,EAAMqB,kBAC7B,gDACA,wBAAI1iB,UAAWC,KAAO0iB,qBACjBtB,EAAMuB,gBAAgBjiB,KAAI,SAACkiB,GACxB,OAAO,4BAAKA,OAGpB,yCACA,wBAAI7iB,UAAWC,KAAO6iB,eAClB,8BAAM,yCAAN,IAAyBzB,EAAM0B,UAAUC,WACzC,8BAAM,sCAAN,IAAsB3B,EAAM0B,UAAUE,QACtC,8BAAM,sCAAN,IAAsB5B,EAAM0B,UAAUG,UAI9C,6BACI,yBAAKljB,UAAWC,KAAO2O,eACvB,2CACEyS,EAAM8B,WAAW7d,MAAM,MAAM3E,KAAI,SAACsc,GAAgB,OAAO,2BAAIA,MAE/D,0CACEoE,EAAM+B,UAAU9d,MAAM,MAAM3E,KAAI,SAACsc,GAAgB,OAAO,2BAAIA,SAK1E,8BAMD,IA9GP,EAAKnd,MAAQ,CACTohB,aAAc,GACdtW,SAAU,MAGd,EAAKyY,kBARqB,E,6JAY1B/iB,K,mBACwBugB,GAAmBwC,mB,yBAAvCnC,a,WADCxhB,S,gGAyGL,OAA2B,OAAxBY,KAAKR,MAAM8K,SACHtK,KAAKihB,wBAGTjhB,KAAKyhB,wB,GA1HgB/gB,a,oBCYrBsiB,G,2MAlBJC,mBAAqB,WACxB/f,OAAOyS,KAAK,gCAAiC,W,wEAInD,OACC,yBAAKjW,UAAWC,KAAOqjB,eACV,kDACA,kKACA,8FACA,kCAAO,oDAAP,QAAwC,oCAAxC,gFAAiI,oCAAjI,qCACA,4GACA,yBAAKxc,IAAI,oBAAoB1E,IAAI,yBAAyB/B,QAASC,KAAKijB,mBAAoBvjB,UAAWC,KAAOujB,kB,GAdlGxiB,aCSbyiB,G,iLANX,OACI,yBAAKzjB,UAAW4I,IAAW8a,SAAS,8BAAW,mC,GAJjC1iB,aTShB+e,GAAwB4D,IAAMC,MAAK,kBAAM,kC,SAO1C/Q,K,qBAAAA,E,6BAAAA,E,2BAAAA,E,kBAAAA,E,kBAAAA,E,4BAAAA,E,cAAAA,E,YAAAA,Q,SURAgR,GVwFUC,G,YAnEd,WAAmBvkB,GAAY,IAAD,8BAC7B,4CAAMA,KAQAsU,gBAAkB,SAACC,GACzB,EAAKpU,SAAS,CACboI,UAAWgM,EACX7I,gBAAgB,KAZY,EAgBvB8I,oBAAsB,WAC5B,OAAO,EAAKjU,MAAMgI,WACR,KAAK+K,GAAQmB,aACT,OAAO,kBAAC+L,GAAD,MACX,KAAKlN,GAAQkR,WACT,OAAO,kBAAC,GAAD,MACX,KAAKlR,GAAQmR,QACT,OAAO,kBAAC,GAAD,MACX,KAAKnR,GAAQoR,QACT,OAAO,kBAAC,GAAD,MACpB,KAAKpR,GAAQqR,QACZ,OAAO,kBAAC,GAAD,MACR,KAAKrR,GAAQsR,MACZ,OAAO,kBAAC,GAAD,MACR,KAAKtR,GAAQuR,aACZ,OAAO,kBAAC,GAAD,MACR,KAAKvR,GAAQwR,KACZ,OAAO,kBAAC,GAAD,MACR,QACC,MAAO,KAnCoB,EAuCvBnZ,iBAAmB,WACzB,EAAKxL,SAAS,CACbuL,gBAAiB,EAAKnL,MAAMmL,kBAtC7B,EAAKnL,MAAQ,CACZgI,UAAW+K,GAAQmB,aACnB/I,gBAAgB,GALY,E,sEA8C7B,OACC,6BACC,wBAAIjL,UAAU,cAAcK,QAASC,KAAK4K,kBAA1C,eACA,yBAAKlL,UAAWC,KAAOqkB,gBACtB,kBAAC,EAAD,CAASra,WAAY3J,KAAKR,MAAMmL,eAC9BT,QAAS/J,OAAOC,OAAOmS,IACvB9I,QAASzJ,KAAKuT,gBACdzJ,cAAeyI,GAAQmB,aACvBzJ,aAAcjK,KAAK4K,mBAErB,yBAAKlL,UAAWC,KAAOskB,eACtB,kBAAC,WAAD,CAAUC,SAAU,kBAAC,GAAD,OAClBlkB,KAAKyT,8B,GA5DW/S,c,SUnBnB6iB,K,sBAAAA,E,qBAAAA,Q,SAaC9jB,G,YACL,WAAmBR,GAAyB,IAAD,8BAC1C,4CAAMA,KAMAklB,WAAa,WACnB,IAAIC,EAAYb,GAAMc,SAEnB,EAAK7kB,MAAM8kB,gBAAkBf,GAAMgB,YACrCH,EAAYb,GAAMgB,WAEnB,EAAKnlB,SAAS,CACbklB,cAAeF,KAd0B,EAkBpCI,QAAU,WAChB,IAAIC,EAAgB,GAOpB,OALCA,EADE,EAAKjlB,MAAM8kB,gBAAkBf,GAAMgB,UACrB,sCAGA,wBAEV,2BAAOviB,MAAI,EAACgZ,OAAK,EAACjZ,UAAQ,EAACrC,UAAWC,KAAO+kB,kBAAmB5iB,IAAK2iB,KAxB5E,EAAKjlB,MAAQ,CACZ8kB,cAAef,GAAMgB,WAHoB,E,6EA6BnB,IAAD,OACtB,OAAQvkB,KAAKf,MAAMiC,gBAClB,KAAKnC,KAAYqL,QAChB,OAAO,kBAAC,EAAD,MACR,KAAKrL,KAAY4lB,gBAChB,OAAO,kBAAC,GAAD,MACR,KAAK5lB,KAAYykB,UAChB,OAAO,kBAAC,GAAD,MACR,KAAKzkB,KAAY6lB,KAChB,OAAO,kBAAC,GAAD,MACR,KAAK7lB,KAAYke,WAChB,OAAO,kBAAC,GAAD,MACR,KAAKle,KAAYmgB,UAChB,OAAO,kBAAC,GAAD,MACR,QACC,OACC,6BACC,wBAAIxf,UAAU,eAAd,uBACA,yBAAKA,UAAWC,KAAOklB,gBACtB,0BAAMnlB,UAAWC,KAAOmlB,kBAAmB,IAA3C,uBAEC3kB,OAAOC,OAAOmjB,IAAOljB,KAAI,SAAC0kB,GACzB,OAAO,0BAAMzkB,IAAKykB,EAAMrlB,UAAWC,KAAOqlB,SAAW,KAAO,EAAKxlB,MAAM8kB,gBAAkBS,EAAOplB,KAAOslB,YAAc,IAAKllB,QAAS,EAAKokB,YAAaY,MAGtJ/kB,KAAKwkB,e,+BAQX,OACC,yBAAK9kB,UAAWC,KAAOF,WACrBO,KAAKklB,qB,GAjEcxkB,aAuETjB,Q,iCCzFV0lB,E,oFCJQC,G,OAAb,oMAESphB,MAAM,cACZC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OACbF,MAAK,SAACG,GACN,OAAOA,EAAQihB,cALnB,sEAU8BC,GAV9B,2FAWSthB,MAAM,iBAAkBshB,EAAMC,WAAY,eAChDthB,MAAK,SAACC,GAAD,OAAOA,EAAEC,OACbF,MAAK,SAACG,GACN,OAAOA,EAAQohB,aAdnB,+C,iBCOqBC,E,iLAEH,IAAD,OACf,OACC,yBAAK/lB,UAAWC,IAAO+lB,kBACtB,kBAAC,IAAM5U,SAAP,KACC,sCACA,6BACA,yBAAKpR,UAAWC,IAAO8lB,WACrBzlB,KAAKf,MAAMomB,OAAOhlB,KAAI,SAACilB,GACvB,OACC,yBAAKhlB,IAAKglB,EAAM3gB,MACf,4BAAQ5E,QAAS,EAAKd,MAAM0mB,cAAc1lB,KAAK,EAAMqlB,GAAQ5lB,UAAWC,IAAOimB,OAAQN,EAAM3gB,iB,GAZ/DjE,a,kCCIlBmlB,E,YAGpB,WAAmB5mB,GAA6B,IAAD,8BAC9C,4CAAMA,KAHC6mB,SAAW,EAE4B,EAQxCC,qBAAuB,WAC7B,EAAKD,SAAW5iB,OAAO8iB,aAAY,WACZ,MAAnB,EAAK/mB,MAAMgnB,MAAgB,EAAKhnB,MAAMgnB,KAAKC,QAAQ/gB,SAAW,EAAK3F,MAAM2mB,oBAC3E,EAAK/mB,SAAS,CACb+mB,oBAAqB,EAAK3mB,MAAM2mB,oBAAsB,IAG7B,MAAnB,EAAKlnB,MAAMgnB,MAClB,EAAK7mB,SAAS,CACb+mB,oBAAqB,MAGrB,MAjBH,EAAK3mB,MAAQ,CACZ2mB,oBAAqB,GAJwB,E,oFAwB9CjjB,OAAOkjB,cAAcpmB,KAAK8lB,Y,+BAI1B,GAAuB,MAApB9lB,KAAKf,MAAMqmB,OAAoC,MAAnBtlB,KAAKf,MAAMgnB,KAAc,CACvD,IAAMI,EAAO,iBAAmBrmB,KAAKf,MAAMqmB,MAAMC,WAAa,YAC9D,OACC,yBAAK7lB,UAAWC,IAAOkmB,eACtB,yBAAKrf,IAAKxG,KAAKf,MAAMqmB,MAAM3gB,KAAM7C,IAAKukB,EAAOrmB,KAAKf,MAAMgnB,KAAKC,QAAQlmB,KAAKR,MAAM2mB,qBAAqBG,YAIxG,OACC,yBAAK5mB,UAAWC,IAAOkmB,eACtB,qD,GAzCuCnlB,aCAtB6lB,G,kBAEpB,WAAmBtnB,GAA+B,IAAD,8BAChD,4CAAMA,KAGAunB,gBAAkB,WACxB,EAAKvnB,MAAMwnB,kBAAkBC,EAAgBC,aALG,EAQ1CC,eAAiB,WACvB,EAAK3nB,MAAMwnB,kBAAkBC,EAAgBG,SATG,EAY1CC,eAAiB,WACvB,EAAK7nB,MAAMwnB,kBAAkBC,EAAgBK,SAbG,E,oFAiBhD,OAAyB,MAAtB/mB,KAAKf,MAAM+nB,QAEZ,wBAAIjnB,QAASC,KAAKf,MAAMgoB,gBAAxB,KAGK,O,+BAIP,OAA4B,IAAzBjnB,KAAKf,MAAMioB,UAEZ,yBAAKxnB,UAAWC,IAAOwnB,WACtB,yBAAKznB,UAAWC,IAAOynB,kBACtB,wBAAIrnB,QAASC,KAAKwmB,iBAAlB,eADD,IAGC,wBAAIzmB,QAASC,KAAK4mB,gBAAlB,UAHD,IAKC,wBAAI7mB,QAASC,KAAK8mB,gBAAlB,WAED,yBAAKpnB,UAAWC,IAAOynB,kBAAvB,IAEEpnB,KAAKqnB,uBACN,wBAAItnB,QAASC,KAAKf,MAAM2C,aAAxB,OAKG,S,GA9CoClB,c,yBCUxB4mB,E,YAEpB,WAAmBroB,GAA8B,IAAD,8BAC/C,4CAAMA,KAFCsoB,cAAgB,EACwB,EAazCC,kBAAoB,WAC1B,EAAKD,cAAgBrkB,OAAO8iB,aAAY,WACvC,GAA4B,MAAzB,EAAK/mB,MAAMwoB,WAAoB,CACjC,IAAMvJ,EAAO,EAAKjf,MAAMwoB,WAAWC,iBACnC,EAAKtoB,SAAS,CACbuoB,YAAazJ,OAGb,MArB4C,EA4BzC0J,gBAAkB,WACxB,EAAK3oB,MAAM4oB,UAAY,EAAK5oB,MAAM6oB,aAAe,EAAK7oB,MAAM8oB,aA7Bb,EAgCzCC,OAAS,SAACC,GACY,MAAzB,EAAKhpB,MAAMwoB,YACb,EAAKxoB,MAAMwoB,WAAWS,OAAOC,OAAOC,SAASH,EAAMzlB,cAAcC,MAAO,KAAK,IAlC/B,EAsCzC4lB,cAAgB,WACtB,OAA4B,MAAzB,EAAKppB,MAAMwoB,YAAgD,MAA1B,EAAKjoB,MAAMmoB,aAA8D,MAAvC,EAAK1oB,MAAMwoB,WAAWa,cAE1F,yBAAK5oB,UAAWC,IAAO4oB,eACtB,2BAAO5kB,KAAK,QAAQ6kB,IAAI,IAAIC,IAAK,EAAKxpB,MAAMwoB,WAAWa,cAAe7lB,MAAO,EAAKjD,MAAMmoB,YAAankB,SAAU,EAAKwkB,OAAQtoB,UAAWC,IAAO+oB,gBAI1I,MA9CwC,EAiDzCC,uBAAyB,WAC/B,EAAK1pB,MAAM2pB,mBACX,EAAK3pB,MAAM4pB,oBAAmB,IAnDiB,EAsDzCC,2BAA6B,WACnC,EAAK7pB,MAAM8pB,uBACX,EAAK9pB,MAAM4pB,oBAAmB,IAxDiB,EA2DzCG,gBAAkB,WACxB,OAA4B,IAAzB,EAAK/pB,MAAMioB,WAAyC,MAAnB,EAAKjoB,MAAMgnB,KAE7C,yBAAKvmB,UAAWC,IAAOspB,YACtB,4BAAK,EAAKhqB,MAAMgnB,KAAKthB,KAArB,MAA8B,EAAK1F,MAAMgnB,KAAKiD,SAI1C,MAnEwC,EAsEzCC,iBAAmB,WACzB,OAA4B,IAAzB,EAAKlqB,MAAMioB,WAAyC,MAAnB,EAAKjoB,MAAMgnB,KAE7C,yBAAKvmB,UAAWC,IAAOspB,YACtB,2BAAI,EAAKhqB,MAAMgnB,KAAKmD,YAIhB,MA3EP,EAAK5pB,MAAQ,CACZmoB,YAAa,GAGd,EAAKH,oBAP0C,E,oFAyB/CtkB,OAAOkjB,cAAcpmB,KAAKunB,iB,6CAyD1B,OAAGvnB,KAAKf,MAAMioB,UAEZ,wBAAIxnB,UAAW,kBAAoBC,IAAO0pB,eAAgBtpB,QAASC,KAAKf,MAAMgoB,gBAA9E,UAGK,O,+BAIP,OAAsB,MAAnBjnB,KAAKf,MAAMgnB,KAEZ,6BACC,yBAAKvmB,UAAWC,IAAO2pB,gBACrBtpB,KAAKgpB,kBACLhpB,KAAKmpB,mBACN,yBAAKzpB,UAAWC,IAAO4pB,UACtB,0BAAM7pB,UAAU,iBAAiBK,QAASC,KAAK8oB,4BAA/C,iBACA,0BAAMppB,UAAU,iBAAiBK,QAASC,KAAK4nB,iBAAkB5nB,KAAKf,MAAM4oB,UAAY,QAAU,cAClG,0BAAMnoB,UAAU,iBAAiBK,QAASC,KAAK2oB,wBAA/C,aACC3oB,KAAKwpB,wBAENxpB,KAAKqoB,kBAMH,S,GA/GmC3nB,c,SLjBvCykB,O,yBAAAA,I,iBAAAA,I,qBAAAA,I,mBAAAA,I,yBAAAA,I,0BAAAA,M,SMOOuB,ENeS+C,E,YASpB,WAAmBxqB,GAAgC,IAAD,8BACjD,4CAAMA,KATCyqB,WAAkB,CACzBC,OAAQ,IACRC,WAAY,CACXC,SAAU,GAEXC,MAAO,KAG0C,EAS3C/B,UAAY,WACU,MAAzB,EAAKvoB,MAAMioB,aACb,EAAKjoB,MAAMioB,WAAWsC,YACtB,EAAK3qB,SAAS,CACbyoB,WAAW,MAboC,EAkB3CC,WAAa,WACS,MAAzB,EAAKtoB,MAAMioB,aACb,EAAKjoB,MAAMioB,WAAWuC,aACtB,EAAK5qB,SAAS,CACbyoB,WAAW,MAtBoC,EA2B3CoC,oBAAsB,SAAChC,GAC7B,EAAK7oB,SAAS,CACbqoB,WAAYQ,EAAMiC,UA7B8B,EAkC3CC,WAAa,SAAClC,GACjBA,EAAMiC,OAAOE,mBAAqBjF,EAAYkF,UAChD,EAAKtC,YAEEE,EAAMiC,OAAOE,mBAAqBjF,EAAYmF,WACrD,EAAKrrB,MAAM2pB,oBAvCqC,EA2C3C2B,aAAe,SAACC,GACtB,EAAKprB,SAAS,CACbyoB,UAAW2C,KA1CZ,EAAKhrB,MAAQ,CACZioB,WAAY,KACZI,WAAW,GALqC,E,sEAkDjD,OAAsB,MAAnB7nB,KAAKf,MAAMgnB,KAEZ,kBAAC,IAAMnV,SAAP,KACC,yBAAKpR,UAAWC,IAAO8qB,qBACtB,kBAACC,EAAA,EAAD,CAASC,QAAS3qB,KAAKf,MAAMgnB,KAAK2E,GAAIC,KAAM7qB,KAAK0pB,WAAYoB,QAAS9qB,KAAKiqB,oBAAqBc,cAAe/qB,KAAKmqB,cAErH,kBAAC,EAAD,CACClD,eAAgBjnB,KAAKf,MAAMgoB,eAC3BC,UAAWlnB,KAAKf,MAAMioB,UACtB0B,iBAAkB5oB,KAAKf,MAAM2pB,iBAC7BG,qBAAsB/oB,KAAKf,MAAM8pB,qBACjC9C,KAAMjmB,KAAKf,MAAMgnB,KACjB8B,UAAW/nB,KAAK+nB,UAChBD,WAAY9nB,KAAK8nB,WACjBD,UAAW7nB,KAAKR,MAAMqoB,UACtBgB,mBAAoB7oB,KAAKuqB,aACzB9C,WAAYznB,KAAKR,MAAMioB,cAKpB,S,GAhFqC/mB,a,kCOlBzBsqB,E,YAEpB,WAAmB/rB,GAAwB,IAAD,8BACzC,4CAAMA,KAGAgsB,WAAa,WACnB,GAAuB,MAApB,EAAKhsB,MAAMqmB,MAAe,CAC5B,IAAIA,EAAQ,EAAKrmB,MAAMqmB,MACvB,OAAO,EAAKrmB,MAAMqmB,MAAME,MAAMnlB,KAAI,SAAC4lB,GAClC,OACC,yBAAK3lB,IAAK2lB,EAAKthB,MACd,4BAAQ5E,QAAS,EAAKd,MAAMisB,aAAajrB,KAAxB,eAAmCqlB,EAAOW,GAAOvmB,UAAWC,IAAOwrB,MAAOlF,EAAKthB,KAAhG,MAAyGshB,EAAKiD,YAKlH,OAAO,MAfkC,EAkBnCkC,aAAe,WACE,MAApB,EAAKnsB,MAAMqmB,OACb,EAAKrmB,MAAMisB,aAAa,EAAKjsB,MAAMqmB,MAAO,EAAKrmB,MAAMqmB,MAAME,MAAM,KApBzB,E,sEAyBzC,OAAuB,MAApBxlB,KAAKf,MAAMqmB,MAEZ,yBAAK5lB,UAAWC,IAAO0rB,iBACtB,4BAAKrrB,KAAKf,MAAMqmB,MAAM3gB,MACtB,6BACA,yBAAKjF,UAAWC,IAAOqrB,UACtB,6BACC,4BAAQtrB,UAAWC,IAAOwrB,KAAMprB,QAASC,KAAKorB,cAA9C,aAED,6BACCprB,KAAKirB,eAMH,S,GA3C6BvqB,a,iBCFjB4qB,E,YAEpB,WAAmBrsB,GAA0B,qEACtCA,I,sEAIN,OAAsB,MAAnBe,KAAKf,MAAMgnB,KAEZ,yBAAKvmB,UAAWC,IAAO4rB,eACtB,4BAAKvrB,KAAKf,MAAMgnB,KAAKthB,MACrB,2BAAI3E,KAAKf,MAAMgnB,KAAKuF,SAKtB,yBAAK9rB,UAAWC,IAAO4rB,eACtB,iDACA,uD,GAlBoC7qB,a,6EFK5BgmB,O,2BAAAA,I,mBAAAA,I,iBAAAA,I,oBAAAA,M,SAoBS+E,E,YAEpB,WAAYxsB,GAAsB,IAAD,8BAChC,4CAAMA,KA2BAysB,sBAAwB,WAC9B,OAAO,EAAKlsB,MAAMmsB,UACjB,KAAKjF,EAAgBG,OACpB,OAAO,kBAAC,EAAD,CAAWlB,cAAe,EAAKiG,cAAevG,OAAQ,EAAK7lB,MAAM6lB,SACzE,KAAKqB,EAAgBmF,MACpB,OAAO,kBAAC,EAAD,CAAUC,aAAc,EAAKrF,kBAAmByE,aAAc,EAAKa,aAAczG,MAAO,EAAK9lB,MAAMwsB,aAC3G,KAAKtF,EAAgBK,OACpB,OAAO,kBAAC,EAAD,CAAYd,KAAM,EAAKzmB,MAAMysB,cACrC,QACC,OACC,kBAAC,EAAD,CAAe3G,MAAO,EAAK9lB,MAAM0sB,aAAcjG,KAAM,EAAKzmB,MAAMysB,gBAtCnC,EA2C1BL,cAAgB,SAACtG,GACvB,EAAKlmB,SAAS,CACbusB,SAAUjF,EAAgBmF,MAC1BG,WAAY1G,KA9CmB,EAsD1ByG,aAAe,SAACzG,EAAeW,GACrC,EAAK7mB,SAAS,CACb8sB,aAAc5G,EACd2G,YAAa,OACX,WACF,EAAK7sB,SAAS,CACb6sB,YAAahG,EACb0F,SAAUjF,EAAgBC,iBA7DI,EAkE1BwF,iBAAmB,WACzB,IAAIC,EAAmB,EACO,MAA3B,EAAK5sB,MAAM0sB,cAAkD,MAA1B,EAAK1sB,MAAMysB,cAChDG,EAAmB,EAAK5sB,MAAM0sB,aAAa1G,MAC1C6G,WAAU,SAAA5hB,GAAC,OAAIA,EAAEmgB,MAAkC,MAA1B,EAAKprB,MAAMysB,YAAsB,EAAKzsB,MAAMysB,YAAYrB,GAAK,OAEpF,EAAKprB,MAAM0sB,aAAa1G,MAAMrgB,SAAWinB,GAC3C,EAAKhtB,SAAS,CACb6sB,YAAa,EAAKzsB,MAAM0sB,aAAa1G,MAAM4G,EAAiB,OA1E/B,EAgF1BE,qBAAuB,WAC7B,IAAIF,EAAmB,EACO,MAA3B,EAAK5sB,MAAM0sB,cAAkD,MAA1B,EAAK1sB,MAAMysB,aAIxB,KAHxBG,EAAmB,EAAK5sB,MAAM0sB,aAAa1G,MAC1C6G,WAAU,SAAA5hB,GAAC,OAAIA,EAAEmgB,MAAkC,MAA1B,EAAKprB,MAAMysB,YAAsB,EAAKzsB,MAAMysB,YAAYrB,GAAK,SAGtF,EAAKxrB,SAAS,CACb6sB,YAAa,EAAKzsB,MAAM0sB,aAAa1G,MAAM4G,EAAiB,MAxF/B,EA8F1B3F,kBAAoB,SAACyD,GAC3B,EAAK9qB,SAAS,CACbusB,SAAUzB,KAhGqB,EAoG1BjD,eAAiB,WACvB,EAAK7nB,SAAS,CACb8nB,WAAY,EAAK1nB,MAAM0nB,aApGxB,EAAK1nB,MAAQ,CACZ6lB,OAAQ,GACR6G,aAAc,KACdD,YAAa,KACb/E,WAAW,EACXyE,SAAUjF,EAAgBG,OAC1BmF,WAAY,MAGb,EAAKO,YAX2B,E,yEAcb,IAAD,OAClBnH,EAAcmH,YAAYtoB,MAAM,SAAOuoB,GAAP,yBAAAC,EAAAC,OAAA,8EACXF,EADW,yEACpBlH,EADoB,mBAAAmH,EAAA,MAEVrH,EAAcuH,SAASrH,IAFb,OAE9BA,EAAME,MAFwB,oRAK/B,EAAKpmB,SAAS,CACbimB,OAAQmH,EACRN,aAAcM,EAAU,GACxBP,YAAa,OARiB,gF,+BA4FhC,OACC,yBAAKvsB,UAAWC,IAAO8rB,OAAS,KAAOzrB,KAAKR,MAAM0nB,UAAYvnB,IAAOitB,gBAAkBjtB,IAAOktB,cAC7F,kBAAC,EAAD,CAAiB3F,UAAWlnB,KAAKR,MAAM0nB,UACnCtlB,YAAa5B,KAAKf,MAAM2C,YACxBqlB,eAAgBjnB,KAAKinB,eACrBD,QAAShnB,KAAKR,MAAMysB,YACpBxF,kBAAmBzmB,KAAKymB,oBAE5B,yBAAK/mB,UAAWC,IAAOmtB,YACtB,kBAAC,IAAD,CAAkBptB,UAAWC,IAAOotB,UAClC/sB,KAAK0rB,yBAEP,kBAAC,EAAD,CACCzE,eAAgBjnB,KAAKinB,eACrBC,UAAWlnB,KAAKR,MAAM0nB,UACtB0B,iBAAkB5oB,KAAKmsB,iBACvBpD,qBAAsB/oB,KAAKssB,qBAC3BrG,KAAMjmB,KAAKR,MAAMysB,oB,GA9HavrB,c,oGGjCvBssB,EAAb,8LAGSC,EAAQjpB,MAAM,2BAHvB,kBAIUipB,EAAMhpB,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAOF,MAAK,SAAOipB,GAAP,eAAAT,EAAAC,OAAA,kEAAAD,EAAA,MAGd,EAAKU,sBAHS,cAG/BC,EAH+B,OAKrCF,EAAKG,QAAL,KAAqBA,QAArB,UAA0CA,QAA1C,QAA6DA,QAAQ,0BAA0Bhe,OAAS+d,EAASA,SAL5E,kBAO/BF,GAP+B,4CAJ1C,iKAiBQE,EAAWppB,MAAM,wBAjBzB,kBAkBSopB,EAASnpB,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAOF,MAAK,SAACipB,GAC1C,OAAOA,SAnBV,8C,iBCqBMI,E,YAKL,WAAmBruB,GAAwB,IAAD,8BACzC,4CAAMA,KALAsuB,OAAS,sBAI0B,EAHnCC,UAAwB,CAAEH,QAAS,GAAI1oB,KAAM,GAAI8oB,YAAY,EAAOpe,OAAQ,IAGzC,EAFnCqe,qBAAuB,EAEY,EAuBnCC,QAAU,SAAC1F,GAEjB,OAAOA,EAAM3nB,KACZ,IAAK,QACJ,EAAKstB,UACL,MACD,IAAK,UACJ,EAAKC,cACL,MACD,IAAK,YACJ,EAAKC,gBACL,MACD,IAAK,MACJ7F,EAAM8F,iBACN,EAAKC,kBAKJ/F,EAAMgG,SAAyB,MAAdhG,EAAM3nB,MACzB2nB,EAAM8F,iBACN,EAAKG,QA5CmC,EA8FnCC,qBAAuB,SAAC7rB,GAC9B,EAAKlD,SAAS,CAACgvB,eAAgB9rB,EAAEE,cAAcC,SA/FN,EAqHnCyrB,IAAM,WACZ,EAAK9uB,SAAS,CAAEivB,SAAU,MApH1B,EAAK7uB,MAAQ,CACZ8uB,eAAgB,GAChBD,SAAU,GACVD,eAAgB,GAChBG,cAAe,CAAElB,QAAS,GAAI1oB,KAAM,GAAI8oB,YAAY,EAAOpe,OAAQ,IACnEmf,YAAa,oBAGd,EAAKC,qBAVoC,E,mKAcnCC,EAAO,OACPC,EAAY,Y,mBACK3B,EAAY4B,Y,OAAnC5uB,KAAKwtB,U,OAELxtB,KAAKZ,SAAS,CACbmvB,cAAevuB,KAAKwtB,UAAUH,QAAQqB,GAAMrB,QAAQsB,K,yFA8BrD,IAAME,EAAM7uB,KAAKR,MAAM4uB,eAAeppB,MAAM,KAC5C,GAAG6pB,EAAI1pB,OAAS,EACf,IAAK,IAAM2pB,KAAU9uB,KAAKR,MAAM+uB,cAAclB,QAC7C,GAA+C,MAA5CrtB,KAAKR,MAAM+uB,cAAclB,QAAQyB,GAAgB,CACnD,IAAMC,EAAO/uB,KAAKR,MAAM+uB,cAAclB,QAAQyB,GAC9C,GAAGC,EAAKpqB,KAAKqqB,cAAc9d,SAAS2d,EAAI,GAAGG,eAK1C,OAJAH,EAAI,GAAKE,EAAKpqB,UACd3E,KAAKZ,SAAS,CACbgvB,eAAgBS,EAAII,KAAK,U,oCAYgE,MAA3FjvB,KAAKR,MAAM8uB,eAAetuB,KAAKR,MAAM8uB,eAAenpB,OAASnF,KAAK0tB,wBACpE1tB,KAAKZ,SAAS,CACbgvB,eAAgBpuB,KAAKR,MAAM8uB,eAAetuB,KAAKR,MAAM8uB,eAAenpB,OAASnF,KAAK0tB,wBAGnF1tB,KAAK0tB,0B,sCAKN1tB,KAAK0tB,uBAE6F,MAA/F1tB,KAAKR,MAAM8uB,eAAetuB,KAAKR,MAAM8uB,eAAenpB,OAASnF,KAAK0tB,qBAAuB,IAO5F1tB,KAAKZ,SAAS,CACbgvB,eAAgB,KAEjBpuB,KAAK0tB,qBAAuB,GAT3B1tB,KAAKZ,SAAS,CACbgvB,eAAgBpuB,KAAKR,MAAM8uB,eAAetuB,KAAKR,MAAM8uB,eAAenpB,OAASnF,KAAK0tB,qBAAuB,O,4BAgB3G,IACMqB,EADW/uB,KAAKR,MAAM4uB,eAAeppB,MAAM,KAC3B,GAChBklB,EAASlqB,KAAKR,MAAM+uB,cAAclB,QAAQ0B,GAEnC,MAAV7E,IAAkC,IAAhBA,EAAOgF,OAAuC,IAAtBhF,EAAOuD,WACnDztB,KAAKmvB,MAAMjF,EAAO7a,QAED,MAAV6a,IAAkC,IAAhBA,EAAOgF,KAChClvB,KAAKmvB,MAAMJ,EAAO,mBAED,MAAV7E,IAAkC,IAAhBA,EAAOgF,OAAuC,IAAtBhF,EAAOuD,WACxDztB,KAAKmvB,MAAM,sBAGXnvB,KAAKmvB,MAAM,0B,wCASZ,GAAqC,MAAlCnvB,KAAKR,MAAMgvB,YAAYY,OAA1B,CAKA,IAAIC,EAAYrvB,KAAKR,MAAMgvB,YAAYxpB,MAAM,KAG7CqqB,EAAYA,EAAUC,OAAO,EAAGD,EAAUlqB,OAAO,GAEjD,IAAI2pB,EAAqB9uB,KAAKwtB,UAE9B,GAAG6B,EAAUlqB,OAAS,EAAG,CAAC,IAAD,uBACxB,YAAmBkqB,EAAnB,+CAA8B,CAAC,IAApBhJ,EAAmB,QAC7ByI,EAASA,EAAOzB,QAAQhH,IAFD,mFAMZ,MAAVyI,GACF9uB,KAAKZ,SAAS,CACbmvB,cAAeO,EACfN,YAAaxuB,KAAKR,MAAMgvB,YAAYzoB,QAAQwpB,OAAO,WAAY,WApBhEvvB,KAAKmvB,MAAM,iD,uCA0BZ,GAAGnvB,KAAKR,MAAM4uB,eAAeoB,SAAS,OACrCxvB,KAAKyvB,sBADN,CAKA,IACMV,EADW/uB,KAAKR,MAAM4uB,eAAeppB,MAAM,KAC3B,GAChBklB,EAASlqB,KAAKR,MAAM+uB,cAAclB,QAAQ0B,GAEnC,MAAV7E,IAAwC,IAAtBA,EAAOuD,aAAuC,IAAhBvD,EAAOgF,KACzDlvB,KAAKZ,SAAS,CACbmvB,cAAerE,EACfsE,YAAaxuB,KAAKR,MAAMgvB,YAAYY,OAAS,IAAML,IAGnC,MAAV7E,IAAwC,IAAtBA,EAAOuD,WAChCztB,KAAKmvB,MAAM,sBAGXnvB,KAAKmvB,MAAMJ,EAAO,0C,2BAKnB,IAAI1B,EAAU,GACd,IAAK,IAAM0B,KAAQ/uB,KAAKR,MAAM+uB,cAAclB,QAChC,MAAR0B,IACF1B,GAAW0B,EAAO,YAGpB/uB,KAAKmvB,MAAM9B,K,oCAIX,IACM0B,EADW/uB,KAAKR,MAAM4uB,eAAeppB,MAAM,KAC3B,GAChBklB,EAASlqB,KAAKR,MAAM+uB,cAAclB,QAAQ0B,GAEnC,MAAV7E,IAAwC,IAAtBA,EAAOuD,aAAuC,IAAhBvD,EAAOgF,MAAiBH,EAAKS,SAAS,cACxFxvB,KAAKf,MAAMkC,eAEM,MAAV+oB,IAAwC,IAAtBA,EAAOuD,aAAuC,IAAhBvD,EAAOgF,MAAiBH,EAAKS,SAAS,QAC7FxvB,KAAKmvB,MAAMjF,EAAO0D,SAED,MAAV1D,IAAwC,IAAtBA,EAAOuD,aAAuC,IAAhBvD,EAAOgF,MAAiBH,EAAKS,SAAS,SAC7FtsB,OAAOC,SAASC,KAAO8mB,EAAO0D,QAG9B5tB,KAAKmvB,MAAM,6B,gCAKZ,IAAMN,EAAM7uB,KAAKR,MAAM4uB,eAAegB,OACtCpvB,KAAKR,MAAM8uB,eAAeoB,KAAKb,GAC/B7uB,KAAK0tB,qBAAuB,EAEzBmB,EAAIG,cAAcW,WAAW,MAC/B3vB,KAAK4vB,cAEEf,EAAIG,cAAcW,WAAW,OACpC3vB,KAAK6vB,MAEwB,QAAtBhB,EAAIG,cACXhvB,KAAKkuB,MAEEW,EAAIG,cAAcW,WAAW,QACpC3vB,KAAKmvB,MAAM,sIAEJN,EAAIc,WAAW,MACtB3vB,KAAK8vB,iBAEEjB,EAAIG,cAAce,QAAQ,SAAW,EAC5C/vB,KAAKmvB,MAAM,qBAEJN,EAAIG,cAAce,QAAQ,aAAe,EAChD/vB,KAAKmvB,MAAM,iBAEJN,EAAIG,cAAcW,WAAW,QACpC3vB,KAAKmvB,MAAM,wBAEJN,EAAIG,cAAcW,WAAW,aACpC3vB,KAAKmvB,MAAM,gIAEkB,OAAtBN,EAAIG,cACXhvB,KAAKgwB,KAEwB,SAAtBnB,EAAIG,cACXhvB,KAAKmvB,MAAM,uGAEI,KAARN,EACP7uB,KAAKmvB,MAAM,IAGXnvB,KAAKmvB,MAAM,sBAAwBnvB,KAAKR,MAAM4uB,gBAG/CpuB,KAAKZ,SAAS,CAACgvB,eAAgB,O,4BAGnBe,GACZ,IAAMc,EAAad,EAAMnqB,MAAM,MAC3BkrB,GAAQ,EAFe,uBAG3B,YAAwBD,EAAxB,+CAAoC,CAAC,IAA1BE,EAAyB,QAChCD,GACFlwB,KAAKR,MAAM6uB,SAASqB,KAAK,CAACU,QAASpwB,KAAKR,MAAMgvB,YAAcxuB,KAAKutB,OAASvtB,KAAKR,MAAM4uB,eAAgB/e,OAAQ8gB,IAC7GD,GAAQ,GAGRlwB,KAAKR,MAAM6uB,SAASqB,KAAK,CAACU,QAAS,GAAI/gB,OAAQ8gB,KATtB,qF,+BAcX,IAAD,OACf,OACC,yBAAKzwB,UAAWC,IAAO2tB,UACtB,yBAAK1C,GAAG,WAAWlrB,UAAWC,IAAO0wB,UACnCrwB,KAAKR,MAAM6uB,SAAShuB,KAAI,SAACuG,GACzB,OACC,yBAAKtG,IAAK,EAAKd,MAAM6uB,SAAS0B,QAAQnpB,IACrC,2BAAIA,EAAIwpB,SACR,2BAAIxpB,EAAIyI,YAIX,yBAAK3P,UAAWC,IAAO2wB,aACrBtwB,KAAKR,MAAMgvB,YAAcxuB,KAAKutB,OAC/B,2BAAO7pB,UAAW1D,KAAK2tB,QAASjuB,UAAWC,IAAO4wB,eAAgB9tB,MAAOzC,KAAKR,MAAM4uB,eAAgB5qB,SAAUxD,KAAKmuB,8B,GA1RlGztB,aAkSR4sB,O,kPC3SKkD,QACW,cAA7BttB,OAAOC,SAASstB,UAEe,UAA7BvtB,OAAOC,SAASstB,UAEhBvtB,OAAOC,SAASstB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAACjwB,EAAA,EAAD,MAAgBkwB,SAASC,eAAe,SDmIlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhtB,MAAK,SAAAitB,GACjCA,EAAaC,kB","file":"static/js/main.54825eb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InterlacedPicture\":\"Pictures_InterlacedPicture__pXpde\",\"slideInterlace\":\"Pictures_slideInterlace__1Cz8a\",\"NonloadedPicture\":\"Pictures_NonloadedPicture__3GmW5\",\"PictureAnimationWrap\":\"Pictures_PictureAnimationWrap__FL6p1\",\"PictureMobileOnly\":\"Pictures_PictureMobileOnly__2GJB5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FiveTabs\":\"TabbedPanel_FiveTabs__1MK_H\",\"FourTabs\":\"TabbedPanel_FourTabs__1eAa6\",\"ThreeTabs\":\"TabbedPanel_ThreeTabs__2onD5\",\"Mobile\":\"TabbedPanel_Mobile__2UdzC\",\"ExampleBorder\":\"TabbedPanel_ExampleBorder__1ugCS\",\"Title\":\"TabbedPanel_Title__nb9zk\",\"ActiveNav\":\"TabbedPanel_ActiveNav__3EKb9\",\"NavLink\":\"TabbedPanel_NavLink__OB1W-\",\"Content\":\"TabbedPanel_Content__34PwO\",\"NotActiveNav\":\"TabbedPanel_NotActiveNav__3AIcd\",\"blink-underscore\":\"TabbedPanel_blink-underscore__14qrR\",\"Desktop\":\"TabbedPanel_Desktop__2HuT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FNFFAttacksSplit\":\"FNFFAttacks_FNFFAttacksSplit__3io5Z\",\"FNFFAttacks\":\"FNFFAttacks_FNFFAttacks__1VdGJ\",\"FNFFAttacksInformation\":\"FNFFAttacks_FNFFAttacksInformation__3ZpPo\",\"FNFFAttacksPicture\":\"FNFFAttacks_FNFFAttacksPicture__r0CKE\",\"FNFFAttackMenu\":\"FNFFAttacks_FNFFAttackMenu__2CF-T\",\"Return\":\"FNFFAttacks_Return__VQXwj\",\"ReturnWrapper\":\"FNFFAttacks_ReturnWrapper__2PB6C\",\"FNFFAttackSmallerMenu\":\"FNFFAttacks_FNFFAttackSmallerMenu__JRrFF\",\"ExampleBorder\":\"FNFFAttacks_ExampleBorder__1-Qdu\",\"liPadding\":\"FNFFAttacks_liPadding__3xmU3\",\"OverrideMaxContent\":\"FNFFAttacks_OverrideMaxContent__2oXGs\",\"AttacksMobilePicture\":\"FNFFAttacks_AttacksMobilePicture__3G4ae\",\"SplitIntoTwo\":\"FNFFAttacks_SplitIntoTwo__2rlNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NightCitySplit\":\"NightCity_NightCitySplit__1cBgc\",\"NightCityMenu\":\"NightCity_NightCityMenu__1FFmt\",\"NightCityMain\":\"NightCity_NightCityMain__1Db8_\",\"NightCityIntroduction\":\"NightCity_NightCityIntroduction__3tz_U\",\"NightCityEdgeRules\":\"NightCity_NightCityEdgeRules__2dsYa\",\"NightCityLivingOnTheEdge\":\"NightCity_NightCityLivingOnTheEdge__3lFRN\",\"NightCityIntroductionPicture\":\"NightCity_NightCityIntroductionPicture__1JW2W\",\"NightCityOnTheEdgePicture\":\"NightCity_NightCityOnTheEdgePicture__18ODV\",\"ExampleBorder\":\"NightCity_ExampleBorder__30xh2\",\"SlangSplit\":\"NightCity_SlangSplit__5N9C1\",\"SlangImage\":\"NightCity_SlangImage__21jWR\",\"DoubleSpan\":\"NightCity_DoubleSpan__2HaWo\",\"NightCityMobilePicture\":\"NightCity_NightCityMobilePicture__1JhMv\",\"NightCityLivingOnTheEdgePicture\":\"NightCity_NightCityLivingOnTheEdgePicture__p7hOF\",\"NightCityOnTheEdgePictureMobile\":\"NightCity_NightCityOnTheEdgePictureMobile__2RY4-\",\"FirstSessionPictureMobile\":\"NightCity_FirstSessionPictureMobile__3yp2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TTSplit\":\"TraumaTeam_TTSplit__zM4Ij\",\"TTIntroduction\":\"TraumaTeam_TTIntroduction__37Bxb\",\"TTIntroductionText\":\"TraumaTeam_TTIntroductionText__3Fzou\",\"TTIntroductionPicture\":\"TraumaTeam_TTIntroductionPicture__3919c\",\"ExampleBorder\":\"TraumaTeam_ExampleBorder__1H7Sn\",\"TwoColumnGrid\":\"TraumaTeam_TwoColumnGrid__jbztq\",\"FirstColumn\":\"TraumaTeam_FirstColumn__38JaL\",\"SecondColumn\":\"TraumaTeam_SecondColumn__1NeR2\",\"DeathSaveGrid\":\"TraumaTeam_DeathSaveGrid__3OaPs\",\"InterlacedVideo\":\"TraumaTeam_InterlacedVideo___3B5R\",\"LiPadding\":\"TraumaTeam_LiPadding__QQC07\",\"SplitIntoTwo\":\"TraumaTeam_SplitIntoTwo__1YfzS\",\"TTIntroMobilePicture\":\"TraumaTeam_TTIntroMobilePicture__26IUn\",\"TTDeathMobilePicture\":\"TraumaTeam_TTDeathMobilePicture__RbxRE\",\"BodyBankPictureMobile\":\"TraumaTeam_BodyBankPictureMobile__1Tm1K\",\"DrugsPictureMobile\":\"TraumaTeam_DrugsPictureMobile__1-kcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FNFFIntroduction\":\"FNFFIntroduction_FNFFIntroduction__1bY2v\",\"FNFFIntroductionText\":\"FNFFIntroduction_FNFFIntroductionText__3FaRJ\",\"FNFFIntroductionPicture\":\"FNFFIntroduction_FNFFIntroductionPicture__1Mp8T\",\"FNFFIntroductionPictureMobile\":\"FNFFIntroduction_FNFFIntroductionPictureMobile__1b1cs\",\"ExampleBorder\":\"FNFFIntroduction_ExampleBorder__2s9i3\",\"BTTable\":\"FNFFIntroduction_BTTable__11f9E\",\"TwoColumnGrid\":\"FNFFIntroduction_TwoColumnGrid__NlwLF\",\"FirstColumn\":\"FNFFIntroduction_FirstColumn__36Iw0\",\"SecondColumn\":\"FNFFIntroduction_SecondColumn__3Gp5L\",\"DeathSaveGrid\":\"FNFFIntroduction_DeathSaveGrid__3_C6L\",\"FNFFHitLocationMobile\":\"FNFFIntroduction_FNFFHitLocationMobile__GhWJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InterlockSplit\":\"Interlock_InterlockSplit__23d9n\",\"InterlockMenu\":\"Interlock_InterlockMenu__hUE_x\",\"InterlockIntroduction\":\"Interlock_InterlockIntroduction__1-uK-\",\"InterlockStats\":\"Interlock_InterlockStats__1qy8y\",\"InterlockIntroductionPicture\":\"Interlock_InterlockIntroductionPicture__1kLRK\",\"InterlockStatsSubmenu\":\"Interlock_InterlockStatsSubmenu__xMZOq\",\"StatsAnimation\":\"Interlock_StatsAnimation__3qfFo\",\"InterlockStatsSubmenuButton\":\"Interlock_InterlockStatsSubmenuButton__3h_gI\",\"InterlockStatSubmenuDetails\":\"Interlock_InterlockStatSubmenuDetails__2UytZ\",\"StatsDetailSwitchAnimation\":\"Interlock_StatsDetailSwitchAnimation__29Ze7\",\"InterlockReturnSubmenu\":\"Interlock_InterlockReturnSubmenu__2JlQD\",\"InterlockStatsBTModifiedTable\":\"Interlock_InterlockStatsBTModifiedTable__1RIdK\",\"InterlockReturnMobile\":\"Interlock_InterlockReturnMobile__36cvq\",\"InterlockReturnDesktop\":\"Interlock_InterlockReturnDesktop__1m8ej\",\"InterlockIntroMobilePic\":\"Interlock_InterlockIntroMobilePic__Z3uMj\",\"slideInterlace\":\"Interlock_slideInterlace__S3r1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CyberSplit\":\"Cyberware_CyberSplit__3f2Jc\",\"IntroductionSplit\":\"Cyberware_IntroductionSplit__11FxG\",\"IntroductionImage\":\"Cyberware_IntroductionImage__PThER\",\"ExampleBorder\":\"Cyberware_ExampleBorder__1uU9_\",\"Cyberware50Split\":\"Cyberware_Cyberware50Split__33u8J\",\"IntroductionPictureMobile\":\"Cyberware_IntroductionPictureMobile__i8WLV\",\"CyberpsychosisMobilePicture\":\"Cyberware_CyberpsychosisMobilePicture__3WWRb\",\"SmallerMobileTitle\":\"Cyberware_SmallerMobileTitle__3peF_\",\"HumanityPictureMobile\":\"Cyberware_HumanityPictureMobile__3xBpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NightCityCorporations\":\"NCCorporations_NightCityCorporations__1qFrY\",\"NightCityCorporationChosen\":\"NCCorporations_NightCityCorporationChosen__11y8v\",\"PadOutCorporation\":\"NCCorporations_PadOutCorporation__-25uL\",\"NightCityCorporationPicture\":\"NCCorporations_NightCityCorporationPicture__3Hc3U\",\"NightCityCorporationLogo\":\"NCCorporations_NightCityCorporationLogo__3wxUr\",\"NoMarginHeader\":\"NCCorporations_NoMarginHeader__3nPrl\",\"BackButton\":\"NCCorporations_BackButton__2W2k8\",\"NightCityCorporationGrid\":\"NCCorporations_NightCityCorporationGrid__2_Y37\",\"ExampleBorder\":\"NCCorporations_ExampleBorder__3HvFQ\",\"RegionalOfficeSplit\":\"NCCorporations_RegionalOfficeSplit__1b-fL\",\"EmployeeSplit\":\"NCCorporations_EmployeeSplit__3nUxL\",\"BackButtonMobile\":\"NCCorporations_BackButtonMobile__1o-ni\",\"FirstSessionPictureMobile\":\"NCCorporations_FirstSessionPictureMobile__1fCuO\",\"BackButtonMobileBackground\":\"NCCorporations_BackButtonMobileBackground__23Iov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FumbleTableRow\":\"InterlockSkillChecks_FumbleTableRow__nksc1\",\"FumbleTableWrapper\":\"InterlockSkillChecks_FumbleTableWrapper__2lbd6\",\"FumbleRange\":\"InterlockSkillChecks_FumbleRange__3g6eU\",\"FumbleResult\":\"InterlockSkillChecks_FumbleResult__2idsc\",\"FumbleTableSubmenu\":\"InterlockSkillChecks_FumbleTableSubmenu__1_ZiH\",\"FumbleTableAnimation\":\"InterlockSkillChecks_FumbleTableAnimation__2kOxo\",\"FumbleTableSubmenuButton\":\"InterlockSkillChecks_FumbleTableSubmenuButton__1nniW\",\"FumbleTableSubmenuDetails\":\"InterlockSkillChecks_FumbleTableSubmenuDetails___tSel\",\"FumbleTableDetailSwitchAnimation\":\"InterlockSkillChecks_FumbleTableDetailSwitchAnimation__3Pm0X\",\"FumbleTableSubmenuReturn\":\"InterlockSkillChecks_FumbleTableSubmenuReturn__2UFcp\",\"FumbleTableReturnMobile\":\"InterlockSkillChecks_FumbleTableReturnMobile__h68T4\",\"FumbleTableReturnDesktop\":\"InterlockSkillChecks_FumbleTableReturnDesktop__2Kg5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FadeIn\":\"Animations_FadeIn__34JgS\",\"fadeInAnim\":\"Animations_fadeInAnim__2jy96\",\"FadeInSlow\":\"Animations_FadeInSlow__1TgYA\",\"FadeInVerySlow\":\"Animations_FadeInVerySlow__1oDcb\",\"FadeInFast\":\"Animations_FadeInFast__1FH_F\",\"loading\":\"Animations_loading__35FCD\",\"loadcircle\":\"Animations_loadcircle__29k4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SurgeryMain\":\"CyberSurgery_SurgeryMain__196IC\",\"SurgeryImage\":\"CyberSurgery_SurgeryImage__1ukXp\",\"SplitSurgery\":\"CyberSurgery_SplitSurgery__18F5n\",\"SurgeryMobilePicture\":\"CyberSurgery_SurgeryMobilePicture__2XMcL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenu\":\"MainMenu_MainMenu__cwfm_\",\"mainmenuList\":\"MainMenu_mainmenuList__3JX9j\",\"Mobile\":\"MainMenu_Mobile__2-xMF\",\"cyberpunk_logo\":\"MainMenu_cyberpunk_logo__2h0pT\",\"Desktop\":\"MainMenu_Desktop__CrKls\",\"activateMobileList\":\"MainMenu_activateMobileList__3dPLk\",\"hiddenMobileList\":\"MainMenu_hiddenMobileList__1prGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClassDetails\":\"ClassDetails_ClassDetails__nFjm7\",\"Title\":\"ClassDetails_Title__1vjFd\",\"ClassSections\":\"ClassDetails_ClassSections__2pSeT\",\"CareerSkillsGridified\":\"ClassDetails_CareerSkillsGridified__3-CS-\",\"CareerSkillsLong\":\"ClassDetails_CareerSkillsLong__1kIyq\",\"ClassDetailContent\":\"ClassDetails_ClassDetailContent__eWKzf\",\"ClassDetailPicture\":\"ClassDetails_ClassDetailPicture__3R-7i\",\"ClassPictureMobile\":\"ClassDetails_ClassPictureMobile__3unHQ\"};","import React, { Component } from 'react';\nimport styles from './MainMenu.module.css';\n\nexport enum MainSection {\n\tNightCity = \"Night City\",\n\tMainframe = \"Mainframe\",\n\tClasses = \"Classes\",\n\tInterlockSystem = \"Interlock System\",\n\tFNFF = \"FNFF\",\n\tTraumaTeam = \"Trauma Team\",\n\tCyberware = \"Cyberware\"\n}\n\ninterface IMainMenuState {\n\tselectedSection: MainSection;\n\tisOpen: boolean;\n}\n\ninterface IMainMenuProps {\n\tchangeSection: (section: MainSection) => void;\n}\n\nclass MainMenu extends Component<IMainMenuProps, IMainMenuState> {\n\n\tpublic constructor(props: IMainMenuProps) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tisOpen: false,\n\t\t\tselectedSection: MainSection.Mainframe\n\t\t};\n\t}\n\n\tpublic changeSection = (section: MainSection) => {\n\t\tthis.setState({\n\t\t\tselectedSection: section,\n\t\t\tisOpen: false\n\t\t})\n\n\t\tthis.props.changeSection(section);\n\t}\n\n\tpublic openMobileMenu = () => {\n\t\tthis.setState({\n\t\t\tisOpen: !this.state.isOpen\n\t\t});\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<nav className={styles.MainMenu}>\n\t\t\t\t{ /* DESKTOP */ }\n\t\t\t\t<div className={styles.Desktop}>\n\t\t\t\t\t<button className={styles.cyberpunk_logo} tabIndex={1} onClick={this.changeSection.bind(this, MainSection.Mainframe)}>\n\t\t\t\t\t\tCyberpunk 2020\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className={styles.mainmenuList}>\n\t\t\t\t\t\t{Object.values(MainSection).map((section) => {\n\t\t\t\t\t\t\tif(section !== MainSection.Mainframe) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<button key={section} \n\t\t\t\t\t\t\t\t\t\tclassName={this.state.selectedSection === section ? \"selectedButton\" : ''}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.changeSection(section) }\n\t\t\t\t\t\t\t\t\t>{section}</button> \n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t</div>\n\n\t\t\t\t{ /* MOBILE */ }\n\t\t\t\t<div className={styles.Mobile}>\n\t\t\t\t\t<h1 className={styles.cyberpunk_logo} tabIndex={1} onClick={this.openMobileMenu}>Cyberpunk 2020</h1>\n\t\t\t\t\t<div className={styles.mainmenuList + \" \" + (this.state.isOpen ? styles.activateMobileList : styles.hiddenMobileList)}>\n\t\t\t\t\t\t{Object.values(MainSection).map((section) => {\n\t\t\t\t\t\t\tif(section !== MainSection.Mainframe) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<p key={section} \n\t\t\t\t\t\t\t\t\t\tclassName={this.state.selectedSection === section ? styles.selectedSection : ''}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.changeSection(section)}\n\t\t\t\t\t\t\t\t\t>{section}</p> \n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\nexport default MainMenu;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Player\":\"Player_Player__2OhPp\",\"HeaderBar\":\"Player_HeaderBar__2gwpu\",\"HeaderBarButtons\":\"Player_HeaderBarButtons__2gyTc\",\"relativeTo\":\"Player_relativeTo__2aG6E\",\"ShownPlayer\":\"Player_ShownPlayer__3elXg\",\"mainArea\":\"Player_mainArea__2wLW7\",\"MinimizedPlayer\":\"Player_MinimizedPlayer__CrKbq\",\"maximizeButton\":\"Player_maximizeButton__2869f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerControls\":\"PlayerControls_playerControls__38DRH\",\"nowPlaying\":\"PlayerControls_nowPlaying__1wHgX\",\"controls\":\"PlayerControls_controls__13k80\",\"playerSeekBar\":\"PlayerControls_playerSeekBar__f5dJG\",\"playerSeeker\":\"PlayerControls_playerSeeker__1v7Ws\",\"MaximizeButton\":\"PlayerControls_MaximizeButton__1gvVO\",\"invisibleMiddleware\":\"PlayerControls_invisibleMiddleware__IAGRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zetatech\":\"Bootloader_Zetatech__lZ1nq\",\"Background\":\"Bootloader_Background__EPuYb\",\"mainContent\":\"Bootloader_mainContent__wvrUw\",\"ZetatechDevelopment\":\"Bootloader_ZetatechDevelopment__3oVTd\",\"DevelopmentBackground\":\"Bootloader_DevelopmentBackground__3NWPx\",\"footerLocation\":\"Bootloader_footerLocation__1-W7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarButton\":\"Sidebar_SidebarButton__1AyjY\",\"MobileReturnButton\":\"Sidebar_MobileReturnButton__1Fdfr\",\"MobileShown\":\"Sidebar_MobileShown__3sdiI\",\"fadeIn\":\"Sidebar_fadeIn__eImjE\",\"MobileHidden\":\"Sidebar_MobileHidden__1oDFt\",\"SidebarButtonActive\":\"Sidebar_SidebarButtonActive__3FVar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SkillList\":\"InterlockSkillList_SkillList__2yhfA\",\"InterlockSkillList\":\"InterlockSkillList_InterlockSkillList__Ww12n\",\"ModalBackground\":\"InterlockSkillList_ModalBackground__10I97\",\"WindowedInformation\":\"InterlockSkillList_WindowedInformation__mzE6v\",\"FadeIn\":\"InterlockSkillList_FadeIn__vZaSs\",\"BigOnMobile\":\"InterlockSkillList_BigOnMobile__1BELX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Mainframe\":\"Mainframe_Mainframe__7A22T\",\"fullscreenbgvideo\":\"Mainframe_fullscreenbgvideo__1vcY-\",\"mainframeVideo\":\"Mainframe_mainframeVideo__3n20b\",\"videoNav\":\"Mainframe_videoNav__1URes\",\"videoDescription\":\"Mainframe_videoDescription__22hiW\",\"activeVideo\":\"Mainframe_activeVideo__2xx-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionText\":\"FNFFActions_ActionText__2zqAZ\",\"ActionPicture\":\"FNFFActions_ActionPicture__2UUJx\",\"ActionPictureMobile\":\"FNFFActions_ActionPictureMobile__1euU4\",\"SingleColumnGrid\":\"FNFFActions_SingleColumnGrid__285Vt\",\"LoSPicture\":\"FNFFActions_LoSPicture__31pMY\",\"DesktopOnly\":\"FNFFActions_DesktopOnly__3nDSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TwoColumnSplit\":\"FNFFArmor_TwoColumnSplit__3JHjT\",\"ArmorTable\":\"FNFFArmor_ArmorTable__uRNsS\",\"CoverImageWrapper\":\"FNFFArmor_CoverImageWrapper__1gUzN\",\"CoverImage\":\"FNFFArmor_CoverImage__3OA9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TwoColumnSplit\":\"Splitter_TwoColumnSplit__2OE3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__19JT4\",\"LoginColumn\":\"Login_LoginColumn__2D1Ic\",\"LoginUsername\":\"Login_LoginUsername__39TLr\",\"LoginPassword\":\"Login_LoginPassword__17cjV\",\"LoginAttempts\":\"Login_LoginAttempts__22I9U\",\"LoginButton\":\"Login_LoginButton__1VWxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bordered\":\"InterlockLifepath_Bordered__32wxu\",\"Lifepath\":\"InterlockLifepath_Lifepath__2BToA\",\"Explanations\":\"InterlockLifepath_Explanations__1Uotk\",\"Picture\":\"InterlockLifepath_Picture__1vTgZ\",\"MobilePicture\":\"InterlockLifepath_MobilePicture__3mrN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrugList\":\"TTDrugs_DrugList__3lHzz\",\"ModalBackground\":\"TTDrugs_ModalBackground__1MaxI\",\"WindowedInformation\":\"TTDrugs_WindowedInformation__1AKMA\",\"FadeIn\":\"TTDrugs_FadeIn__2idW_\",\"ModalReturn\":\"TTDrugs_ModalReturn__2lirW\",\"ModalBackground \":\"TTDrugs_ModalBackground __3xb7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SongList\":\"SongList_SongList__r6T5G\",\"Song\":\"SongList_Song__3KC0C\",\"SongListWrapper\":\"SongList_SongListWrapper__2aApv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Terminal\":\"Terminal_Terminal__QPK2W\",\"Commands\":\"Terminal_Commands__62s1J\",\"CommandLine\":\"Terminal_CommandLine__3QWBa\",\"InvisibleInput\":\"Terminal_InvisibleInput__2dwSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AwardTable\":\"InterlockReputation_AwardTable__1mLko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClassSplit\":\"Classes_ClassSplit__1Hl3y\",\"ClassPicture\":\"Classes_ClassPicture__15jHy\",\"ClassPanel\":\"Classes_ClassPanel__23MgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClassQuoteWrapper\":\"ClassQuote_ClassQuoteWrapper__146ct\",\"ClassQuote\":\"ClassQuote_ClassQuote__2k4zI\",\"QuoteName\":\"ClassQuote_QuoteName__1RvW5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SavesSplit\":\"FNFFWounds_SavesSplit__1FP6I\",\"SpecialCasesSplit\":\"FNFFWounds_SpecialCasesSplit__3MXjR\",\"ModifierTableExtend\":\"FNFFWounds_ModifierTableExtend__18i57\",\"TwoColumnGrid\":\"FNFFWounds_TwoColumnGrid__3dCYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AlbumList\":\"AlbumList_AlbumList__3z-j1\",\"Album\":\"AlbumList_Album__i3G2T\",\"AlbumListWrapper\":\"AlbumList_AlbumListWrapper__10JPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClassSkillWrapper\":\"ClassSpecialAbility_ClassSkillWrapper__2Syke\",\"Description\":\"ClassSpecialAbility_Description__1Gq_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FNFFSplit\":\"FridayNightFirefight_FNFFSplit__3iojI\",\"FNFFMenu\":\"FridayNightFirefight_FNFFMenu__2oE2T\",\"FNFFMain\":\"FridayNightFirefight_FNFFMain__1slGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NightCityMaps\":\"NCMaps_NightCityMaps__1kZwq\",\"MapPicture\":\"NCMaps_MapPicture__1-PY6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerArtwork\":\"PlayerArtwork_PlayerArtwork__2NqRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LyricsPadding\":\"SongLyrics_LyricsPadding__2Hcic\"};","import React, { Component } from 'react';\nimport { hot } from 'react-hot-loader';  \nimport styles from './Bootloader.module.css';\nimport Login from './Login/Login';\nimport Mainframe from './Mainframe/Mainframe';\nimport MainMenu, { MainSection } from './MainMenu/MainMenu';\nimport Player from './Player/Player';\nimport Terminal from './Terminal/Terminal';\nimport './Initialization.css';\n\ninterface IBootloaderState {\n\tcurrentSection: MainSection;\n\tloggedIn: string | null;\n\tplayer: boolean;\n}\n\nclass Bootloader extends Component<{}, IBootloaderState> {\n\tprivate development: boolean = process.env.NODE_ENV === 'development'; \n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentSection: MainSection.Mainframe,\n\t\t\tloggedIn: null,\n\t\t\tplayer: false\n\t\t};\n\t}\n\n\tpublic changeLogin = (isLoggedIn: string) => {\n\t\tthis.setState({ loggedIn: isLoggedIn });\n\t}\n\n\tpublic setMainSection = (section: MainSection) => {\n\t\tthis.setState({\n\t\t\tcurrentSection: section\n\t\t});\t\n\t}\n\n\tpublic renderLogin() {\t\t\n\t\tif (this.state.loggedIn === \"admin\"){\n\t\t\treturn <Terminal enablePlayer={this.enablePlayer} />\n\t\t}\n\t\telse if(this.state.loggedIn === \"TopSecret\") {\n\t\t\treturn this.renderRealSite();\n\t\t}\n\n\t\treturn <Login loginFunction={this.changeLogin} />\n\t}\n\n\tpublic renderPlayer() {\n\t\tif(this.state.player) {\n\t\t\treturn (\n\t\t\t\t<Player closePlayer={this.togglePlayer} />\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic enablePlayer = () => {\n\t\tthis.setState({\n\t\t\tplayer: true\n\t\t})\n\t}\n\n\tpublic togglePlayer = () => {\n\t\tthis.setState({\n\t\t\tplayer: !this.state.player\n\t\t})\n\t}\n\n\tpublic renderRealSite = () => {\n\t\treturn(\n\t\t\t<div className={styles.ZetatechDevelopment }>\n\t\t\t\t<header className={styles.Background + ' ' + styles.DevelopmentBackground} />\n\n\t\t\t\t<MainMenu changeSection={this.setMainSection}/>\n\n\t\t\t\t<div className={styles.mainContent}>\n\t\t\t\t\t<Mainframe currentSection={this.state.currentSection} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\tpublic render() {\n\t\tif(this.development) {\n\t\t\treturn this.renderRealSite();\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={styles.Zetatech}>\n\t\t\t\t<header>\n\t\t\t\t\t<video src=\"assets/Background.mp4\" autoPlay={true} className={styles.Background} loop={true} />\n\t\t\t\t</header>\n\t\t\t\t{this.renderPlayer()}\n\t\t\t\t{this.renderLogin()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default hot(module)(Bootloader);\n","import CryptoJS from 'crypto-js';\nimport React, { Component } from 'react';  \nimport styles from './Login.module.css';\n\ninterface ILoginState {\n\tpassword: string;\n\tusername: string;\n\tattempts: number;\n} \n\ninterface ILoginProps {\n\tloginFunction: (isLoggedIn: string) => void;\n}\n\nclass Login extends Component<ILoginProps, ILoginState> {\n\t\n\tpublic constructor(props: ILoginProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tattempts: 3,\n\t\t\tpassword: '',\n\t\t\tusername: '',\n\t\t}\n\t}\n\n\tpublic changeUsername = (e: React.FormEvent<HTMLInputElement>) => {\n\t\tthis.setState({ username: e.currentTarget.value });\n\t}\n\n\tpublic changePassword = (e: React.FormEvent<HTMLInputElement>) => {\n\t\tthis.setState({ password: e.currentTarget.value });\n\t}\n\n\tpublic login = () => {\n\t\tthis.setState({ attempts: this.state.attempts-1 });\n\n\t\tif(this.state.attempts === 1) {\n\t\t\twindow.location.href = 'https://www.google.com/#q=What is password?';\n\t\t\treturn;\n\t\t}\n\n\t\tconst hash = CryptoJS.SHA1(this.state.password).toString();\n\t\tconst username = CryptoJS.SHA1(this.state.username).toString();\n\t\tif(username === 'd033e22ae348aeb5660fc2140aec35850c4da997' && hash === 'd5240d4a4b8066612800099ed10f85cb21ec0adf') {\n\t\t\tthis.props.loginFunction(\"admin\");\n\t\t\treturn;\n\t\t}\n\t\telse if(username === \"ac3478d69a3c81fa62e60f5c3696165a4e5e6ac4\" && hash === 'af51d716321777677bb9f3888fc6810cdc2d5db1') {\n\t\t\tthis.props.loginFunction(\"TopSecret\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\tpublic renderAttempts = () => {\n\t\tif(this.state.attempts < 3) {\n\t\t\treturn <p>Wrong credentials. Remaining attempts: {this.state.attempts}</p>\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic onEnterLogin = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif(e.key === \"Enter\") {\n\t\t\tthis.login();\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.Login}>\n\t\t\t\t<div className={styles.LoginUsername}>\n\t\t\t\t\t<h3>Username:</h3>\n\t\t\t\t\t<input onChange={this.changeUsername} />\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.LoginPassword}>\n\t\t\t\t\t<h3>Password:</h3>\n\t\t\t\t\t<input onChange={this.changePassword} onKeyDown={this.onEnterLogin} type=\"password\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.LoginAttempts}>\n\t\t\t\t\t{this.renderAttempts()}\n\t\t\t\t</div>\n\t\t\t\t<button className={styles.LoginButton} onClick={this.login} >Login</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './ClassDetails.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport animations from '../StyleModules/Animations.module.css';\nimport { CharacterClass, ClassDetailedInformation } from './Classes';\nimport { ClassQuote } from './ClassQuote';\nimport { ClassService } from '../Services/ClassService';\nimport { ClassIntroduction } from './ClassIntroduction';\nimport { ClassSpecialAbility } from './ClassSpecialAbility';\n\nenum ClassDetailsSection {\n\tNone = \"\",\n\tIntro = \"Introduction\",\n\tSpecialAbility = \"Special Ability\",\n\tCareerSkills = \"Career Skills\"\n}\n\ninterface ClassDetailsProps {\n\tcharacterClass: CharacterClass;\n}\n\ninterface ClassDetailsState {\n\tdetails: ClassDetailedInformation | null\n\tfemale: boolean;\n\tviewing: ClassDetailsSection\n}\n\nclass ClassDetails extends Component<ClassDetailsProps, ClassDetailsState> {\n\n\tpublic constructor(props: ClassDetailsProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdetails: null,\n\t\t\tfemale: Math.floor(Math.random() * 10) % 2 === 1,\n\t\t\tviewing: ClassDetailsSection.None\n\t\t}\n\n\t\t//  Set the details async. Constructor can't be async.\n\t\tthis.setDetails();\n\t}\n\n\n\t// Ensure that once the class changes it'll set the correct name.\n\tasync componentDidUpdate(prevProps: ClassDetailsProps, prevState: ClassDetailsState) {\n\t\tif(prevProps.characterClass.name !== this.props.characterClass.name) {\n\t\t\tthis.setState({\n\t\t\t\tfemale: Math.floor(Math.random() * 10) % 2 === 1,\n\t\t\t\tviewing: ClassDetailsSection.None\n\t\t\t}, \n\t\t\t() => this.setDetails())\n\t\t}\n\t}\n\n\tpublic async setDetails() {\n\t\tthis.setState({\n\t\t\tdetails: await ClassService.getClassDetails(this.props.characterClass.name)\n\t\t});\n\t}\n\n\tpublic getContent() {\n\t\tif(this.state.details == null)\n\t\t\treturn \"\";\n;\n\t\tswitch (this.state.viewing) {\n\t\t\tcase ClassDetailsSection.None:\n\t\t\t\treturn <ClassQuote characterClass={this.props.characterClass} getGender={this.getGender}/>\n\t\t\tcase ClassDetailsSection.Intro:\n\t\t\t\t\treturn <ClassIntroduction characterClass={this.props.characterClass} characterInformation={this.state.details} getGender={this.getGender} />\n\t\t\tcase ClassDetailsSection.SpecialAbility:\n\t\t\t\treturn <ClassSpecialAbility characterInformation={this.state.details} />\n\t\t\tcase ClassDetailsSection.CareerSkills:\n\t\t\t\treturn <div>\n\t\t\t\t\t{this.state.details.careerSkills.map((val, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={val.name}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{ val.name === \"Medtechie\" ? <hr/> : \"\" }\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t/* Mainly for Tech/MedTechie  */\n\t\t\t\t\t\t\t\t\tthis.state.details != null && this.state.details.careerSkills.length > 1 \n\t\t\t\t\t\t\t\t\t? ( <h2>{val.name} career skills:</h2> )\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<div className={styles.CareerSkillsGridified}>\n\t\t\t\t\t\t\t\t\t{val.skills.map((skill, ind) => {\n\t\t\t\t\t\t\t\t\t\treturn <h3 key={skill} className={skill.length > 20 ? styles.CareerSkillsLong : \"\" }>{skill}</h3>\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\tdefault:\n\t\t\t\treturn \"ERROR: NULL\"\n\t\t}\n\t}\n\n\tpublic switchContent = (switchTo: ClassDetailsSection) => {\n\t\tthis.setState({\n\t\t\tviewing: switchTo\n\t\t});\n\t}\n\n\t// Used to replace gender in the text for flavor.  \n\tpublic getGender = (ownership: boolean) => {\n\t\tif(ownership)\n\t\t\treturn this.state.female ? \"her\": \"his\";\n\t\treturn this.state.female ? \"she\": \"he\";\n\t}\n\n\tpublic isActive = (selection: ClassDetailsSection) => {\n\t\treturn this.state.viewing === selection;\n\t}\n\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.ClassDetails + \" \" + animations.FadeIn}>\n\t\t\t\t<h1 className={styles.Title}>{this.props.characterClass.name}:</h1> \n\t\t\t\t<h2>{this.props.characterClass.description}</h2>\n\t\t\t\t<div className={styles.ClassSections}>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.values(ClassDetailsSection).map((sector) => {\n\t\t\t\t\t\t\t// Ignore \"None\" in enum.\n\t\t\t\t\t\t\tif(sector === ClassDetailsSection.None)\n\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p key={sector}\n\t\t\t\t\t\t\t\t\t\tclassName={ tabbedpanel.NavLink + \" \" + (this.isActive(sector) ? tabbedpanel.ActiveNav : tabbedpanel.NotActiveNav)} \n\t\t\t\t\t\t\t\t\t\tonClick={() => {this.switchContent(sector)}}\n\t\t\t\t\t\t\t\t\t>{sector}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.ClassDetailContent}>\n\t\t\t\t\t{this.getContent()}\n\t\t\t\t\t<div className={styles.ClassDetailPicture}>\n\t\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Class\" \n\t\t\t\t\t\t\tsrc={`assets/Classes/${this.props.characterClass.name}/Picture.png`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ClassDetails;\n","import { CharacterClass, ClassDetailedInformation } from '../Classes/Classes';\n\nexport class ClassService {\n\tpublic static async getClasses(): Promise<CharacterClass[]> {\n\t\treturn fetch('assets/Classes/Classes.json')\n\t\t.then((s) => s.json().then((fetched: { charClasses: CharacterClass[] }) => {\n\t\t\t\treturn fetched.charClasses;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic static async getClassDetails(selectedClass: string): Promise<ClassDetailedInformation> {\n\t\treturn fetch(`assets/Classes/${selectedClass}/${selectedClass}.json`)\n\t\t.then((s) => s.json().then((fetched: ClassDetailedInformation) => {\n\t\t\t\treturn fetched;\n\t\t\t})\n\t\t);\n\t}\n}","import React, { Component } from 'react'\nimport styles from './ClassQuote.module.css'\nimport { CharacterClass } from './Classes';\n\ninterface ClassQuoteProps {\n    characterClass: CharacterClass;\n    getGender: (ownership: boolean) => string;\n}\n\ninterface ClassQuoteState {\n    quoteNumber: number;\n}\n\nexport class ClassQuote extends Component<ClassQuoteProps, ClassQuoteState> {\n\n    constructor(props: ClassQuoteProps) {\n        super(props);\n        this.state = {\n            quoteNumber: Math.floor(Math.random() * 17)\n        }\n    }\n\n    componentDidUpdate(prevProps: ClassQuoteProps, prevState: ClassQuoteState) {\n        if(prevProps.characterClass.name !== this.props.characterClass.name) {\n            this.setState({\n                quoteNumber: Math.floor(Math.random() * 17)\n            });\n        }\n    }\n    \n\tpublic getAdjective = () => {\n\t\tswitch (this.state.quoteNumber) {\n\t\t\tcase 0:\n\t\t\t\treturn `An interesting ${this.props.characterClass.name}.`\n\t\t\tcase 1:\n\t\t\t\treturn `A 'special' type of ${this.props.characterClass.name}.`\t\n\t\t\tcase 2:\n\t\t\t\treturn `Ballsy ${this.props.characterClass.name}.`\n\t\t\tcase 3:\n\t\t\t\treturn `Excited ${this.props.characterClass.name}.`\n\t\t\tcase 4:\n\t\t\t\treturn `Trigger happy ${this.props.characterClass.name}.`\n\t\t\tcase 5:\n\t\t\t\treturn `${this.props.characterClass.name} on the edge of Cyberpsychosis.`\n\t\t\tcase 6:\n\t\t\t\treturn `Lying ${this.props.characterClass.name}.`\n\t\t\tcase 7:\n\t\t\t\treturn `${this.props.characterClass.name} of high self esteem.`\n\t\t\tcase 8:\n\t\t\t\treturn `Some ${this.props.characterClass.name}.`\n\t\t\tcase 9:\n\t\t\t\treturn `Shady ${this.props.characterClass.name}.`\n\t\t\tcase 10:\n\t\t\t\treturn `${this.props.characterClass.name} on ${this.props.getGender(true)} last breath.`\n\t\t\tcase 11:\n                return `Legendary ${this.props.characterClass.name}.`\n            case 12:\n                    return `${this.props.characterClass.name} with too much to drink.`\n            case 13:\n                return `Excerpt from 'My life as a ${this.props.characterClass.name}'.`\n            case 14:\n                return `An annoying ${this.props.characterClass.name}.`\n            case 15:\n                return `Confident ${this.props.characterClass.name}.`\n\t\t\tdefault:\n\t\t\t\treturn `${this.props.characterClass.name}`\n\t\t}\n\t}\n\n\tpublic renderQuotations = () => {\n\t\tlet splitQuote = this.props.characterClass.quote.split(\"\\n\");\n\t\treturn splitQuote.map((item, i) => {\n\t\t\tif(i === 0 && i === splitQuote.length -1)\n\t\t\t\treturn <p key={i}>\"{item}\"</p>\n\t\t\telse if(i === (splitQuote.length-1))\n\t\t\t\treturn <p key={i}>{item}\"</p>\n\t\t\telse if(i === 0)\n\t\t\t\treturn <p key={i}>\"{item}</p>\n\t\t\treturn <p key={i}>{item}</p>\n\t\t})\n\t}\n\n    public render() {\n        return (\n            <div className={styles.ClassQuoteWrapper}>\n                <div className={styles.ClassQuote}>{this.renderQuotations()}</div>\n                <p className={styles.QuoteName}>- {this.getAdjective()}</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { CharacterClass, ClassDetailedInformation } from './Classes';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './ClassDetails.module.css';\n\n\ninterface ClassIntroductionProps {\n    characterClass: CharacterClass;\n    characterInformation: ClassDetailedInformation;\n    getGender: (ownership: boolean) => string;\n}\n\ninterface ClassIntroductionState {\n    information: number;\n}\n\nexport class ClassIntroduction extends Component<ClassIntroductionProps, ClassIntroductionState> {\n\n    constructor(props: ClassIntroductionProps) {\n        super(props);\n        this.state = {\n            information: 0\n        }\n    }\n\n    componentDidUpdate(nextProps: ClassIntroductionProps, nextState: ClassIntroductionState) {\n        if(this.props.characterClass.name !== nextProps.characterClass.name) {\n            this.setState({\n                information: 1\n            });\n        }\n    }\n\n    // Replaces the genders in the text by replacing <gender> (she/he) and <genderOwn> for ownership (his/her)\n    public replaceGender = () => {\n        return this.props.characterInformation.intro.replace(\"<gender>\", this.props.getGender(false)).replace(\"<genderOwn>\", this.props.getGender(true));\n    }\n\n    // Splits all newlines from the json into paragraphs.\n    public splitNewlines = (information: string) => {\n\t\tlet splitQuote = information.split(\"\\n\");\n\t\treturn splitQuote.map((item, i) => {\n\t\t\treturn <p key={i}>{item}</p>\n\t\t})\n    }\n    \n    public getInformation = () => {\n        return this.splitNewlines(this.replaceGender());\n    }\n\n    render() {\n        return (\n            <div>\n                <img className={styles.ClassPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Class\" src={`assets/Classes/${this.props.characterClass.name}/Picture.png`}/>\n                {this.getInformation()}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport styles from './ClassSpecialAbility.module.css'\nimport { ClassDetailedInformation } from './Classes';\n\ninterface ClassSpecialAbilityProps {\n    characterInformation: ClassDetailedInformation;\n}\n\nexport class ClassSpecialAbility extends Component<ClassSpecialAbilityProps, {}> {\n\n    // Splits all newlines from the json into paragraphs.\n    public splitNewlines = (information: string) => {\n\t\tlet splitQuote = information.split(\"\\n\");\n\t\treturn splitQuote.map((item, i) => {\n\t\t\treturn <p key={i}>{item}</p>\n\t\t})\n    }\n\n    public render() {\n        return (\n            <div className={styles.ClassSkillWrapper}>\n                {this.props.characterInformation.specialAbility.map((val, index) => {\n                    return (\n                        <div key={index}>\n                            <h2>{val.name}</h2>\n                            <p className={styles.Description}>{this.splitNewlines(val.description)}</p>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { StatService, Fumble } from '../Services/StatsAndSkillsService';\nimport styles from './InterlockSkillChecks.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum SkillCheckSections {\n    About = \"About\",\n    Making = \"Making a Skill Check\",\n    Difficulty = \"Difficulty Modifiers\",\n    Automatic = \"Fumbles and Criticals\"\n}\n\ninterface InterlockSkillCheckState {\n    section: SkillCheckSections;\n    fumbleTable: Fumble[];\n    chosenFumble: Fumble | null;\n}\n\nclass InterlockSkillCheck extends Component<{}, InterlockSkillCheckState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: SkillCheckSections.About,\n            chosenFumble: null,\n            fumbleTable: []\n        }\n\n        this.getFumbles();\n    }\n\n    public async getFumbles() {\n        this.setState({\n            fumbleTable: await StatService.getFumbleTable()\n        });\n    }\n\n    public setFumbleSubMenu = (fumble: Fumble | null) => {\n        this.setState({\n            chosenFumble: fumble\n        });\n    }\n\n    public isActive = (selection: SkillCheckSections) => {\n\t\treturn this.state.section === selection;\n    }\n    \n    public switchContent = (section: SkillCheckSections) => {\n        this.setState({\n            section: section\n        });\n    }\n\n    public renderAboutSkillChecks = () => {\n        return (\n            <div>\n                <p>Most of the time, your character will be able to do most ordinary things without difficulty; walk, talk, open a can of Protein Food Complex 35 without gagging. But certain things will require that the character make a Skill Check to see if he can actually do what he wanted to.</p>\n                <p>Each task is rated by the Referee from Easy to Nearly Impossible. Each rating has a corresponding numerical value, called a Difficulty.</p>\n                <div className={styles.SkillDifficultyBorder}>\n                    <p>Easy ..................................... 10+</p>\n                    <p>Average ............................. 15+</p>\n                    <p>Difficult ............................... 20+</p>\n                    <p>Very Difficult ................. 25+</p>\n                    <p>Nearly Impossible ...... 30+</p>\n                </div>\n            </div>\n        )\n    }\n\n    public renderMakingSkillChecks = () => {\n        return (\n            <div>\n                <p>When making a Skill Check, first, determine which of your stats is the most appropriate to use to perfom the action.</p>\n                <p>For example, if you were trying to stand on your head, REF would be best. If you were deciphering a code, INT would be the most appropriate.</p>\n                <p>Next, if you have any one Skill directly relating to the task at hand, add that skill to the stat. You may apply only one Skill to a task at any time.</p>\n                <p>Finally, roll a D10 and add the combined total of your die roll, your Stat, and your selected Skill. Compare your total with the Task’s Difficulty (as determined by the Referee). If your total is equal or higher, you have succeeded; on a lower roll, you have failed.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <p>Example:</p>\n                    <p>Johnny Silverhand needs to break into a locked room, a task the Referee considers to require some training. As such, it has a Difficulty of 15.</p>\n                    <p>Johnny's most applicable stat is Technical, because this is a Task that requires manipulating a mechanical object. Johnny isn’t much of a techie (his Tech stat is only +3, enough to fix his guitar strings and plug in his amp). But Johnny also picked up Pick Lock +3 as one of his early Pickup skills.</p>\n                    <p>This gives him a Base Ability of 6. Johnny will need to roll at least a 9 on his D10 to pick this lock.</p>\n                </div>\n                <h3>Opposed Rolls:</h3>\n                <p>If you are making an attempt against another player character, the opposing player will combine his most applicable stat, skill and 1D10 roll. </p>\n                <p>On an equal or higher roll, the defending player wins.</p>\n            </div>\n        )\n    }\n\n    public renderDifficultyModifiers = () => {\n        return (\n            <div>\n                <p>Difficulty Modifiers are values which are added to the difficulty of a task, reflecting adverse conditions or extra problems.</p>\n                <p>Modifiers might come when you are dealing with very ticklish or picky situations; things where life and death tasks must be performed.</p>\n                <p>At these times, the referee might want to make the steps of the task clear by creating a Difficulty through stacking the modifiers.</p>\n                <p>In addition, modifiers allow to determine the relative difficulty of doing something and the effect of prevailing conditions.</p>\n            </div>\n        )\n    }\n\n    public renderAutomatics = () => {\n        if(this.state.chosenFumble == null) {\n            return (\n                <div>\n                    <h3>Critical Success:</h3>\n                    <p>On a natural roll of 10, you have had a critical success. Roll an additional 1D10 and add it to your original roll.</p>\n                    <p>This is when you get lucky and manage to pull off something you have no chance in hell of doing normally.</p>\n                    \n                    <h3>Automatic Failure:</h3>\n                    <p>On a natural die roll ot 1, you have failed. Roll an additional 1D10 and check the result on the Fumble Table below to see what (if anything) happens.</p>\n                    <p>(The referee always has a final say on the Fumble and the table might not always be used depending on the situation).</p>\n                    \n                    <h3>Fumble Table:</h3>\n                    <div className={styles.FumbleTableSubmenu}>\n                        {\n                            this.state.fumbleTable.map((fumble) => {\n                                return (\n                                    <button className={styles.FumbleTableSubmenuButton} key={fumble.title} \n                                            onClick={() => this.setFumbleSubMenu(fumble)}>{fumble.title}\n                                    </button> \n                                )\n                            }) \n                        }\n                    </div>\n                    \n                </div>\n            )\n        }\n        else {\n            return this.renderFumble();\n        }\n    }\n\n    public renderFumble = () => {\n        let fumble = this.state.chosenFumble;\n\n        if(fumble != null) {\n            return (\n                <div className={styles.FumbleTableSubmenuDetails}>\n                    <h2>{fumble.title}</h2>\n                    <p>Typically used when: {fumble.usage}</p>\n                    <div className={styles.FumbleTableWrapper}>\n                        { \n                            fumble.fumbles.map((fumb) => {\n                                return (\n                                    <div className={styles.FumbleTableRow}>\n                                        <span className={styles.FumbleRange}>{fumb.range}</span>\n                                        <span className={styles.FumbleResult}>{fumb.result}</span>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <div className={styles.FumbleTableSubmenuReturnWrapper} onClick={() => this.setFumbleSubMenu(null)}>\n                        <div className={styles.FumbleTableReturnDesktop}>\n                            > [<span className={styles.FumbleTableSubmenuReturn}> RETURN </span>]\n                        </div>\n                        <button className={styles.FumbleTableReturnMobile}>\n                            RETURN\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n        \n        return \"\";\n    }\n\n    public getContent = () => {\n        switch (this.state.section) {\n            case SkillCheckSections.About:\n                return this.renderAboutSkillChecks();\n            case SkillCheckSections.Making:\n                return this.renderMakingSkillChecks();\n            case SkillCheckSections.Difficulty:\n                    return this.renderDifficultyModifiers();\n            case SkillCheckSections.Automatic:\n                return this.renderAutomatics();\n            default:\n                return <div/>;\n        }\n    }\n\n\tpublic render() {\n\t\treturn (\n            <Tabs getContent={this.getContent} \n                isActive={this.isActive} \n                sections={SkillCheckSections} \n                title=\"Skill Checks:\" \n                switchContent={this.switchContent} \n            />\n\t\t);\n\t}\n}\n\nexport default InterlockSkillCheck;\n","import React, { PureComponent } from 'react';\nimport styles from \"./Sidebar.module.css\";\n\ninterface ISidebarProps {\n    choices: string[];\n    clicked: (chosen: string) => void;\n    toggleMobile: () => void;\n    showMobile: boolean;\n    preDetermined: string;\n}\n\ninterface ISidebarState {\n    chosen: string;\n}\n\nclass Sidebar extends PureComponent<ISidebarProps, ISidebarState> {\n\n    public constructor(props: ISidebarProps) {\n        super(props);\n\n        this.state = {\n            chosen: this.props.preDetermined\n        }\n    }\n\n    // CSS\n    public IsTheActiveMenu = (myChoice: string) => {\n\t\tif(this.state.chosen != null && myChoice === this.state.chosen) {\n\t\t\treturn styles.SidebarButtonActive;\n\t\t}\n\t\treturn \"\";\n    }\n    \n    public changeSelected = (myChoice: string) => {\n        this.setState({\n            chosen: myChoice\n        });\n\n        this.props.clicked(myChoice);\n    }\n\n    public changeToMobile = () => {\n        if(!this.props.showMobile) \n            return styles.MobileHidden;\n        return styles.MobileShown;\n    }\n\n\tpublic render() {\n\t\treturn (\n            <div className={this.changeToMobile()}>\n                <div className={styles.MobileReturnButton}>\n                    <button className={styles.SidebarButton} onClick={this.props.toggleMobile}>> RETURN</button>\n                    <hr/>\n                </div>\n                { \n                    this.props.choices.map((sector) => \n                        <button key={sector} className={styles.SidebarButton + \" \" + this.IsTheActiveMenu(sector)} \n                            onClick={() => { this.changeSelected(sector)} }>\n                            {sector}\n                        </button> \n                    )\n                }\n            </div>\n\t\t);\n\t}\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport { ClassService } from '../Services/ClassService';\nimport styles from './Classes.module.css';\nimport ClassDetails from './ClassDetails';\nimport Sidebar from '../Common/Sidebar.Navigation';\n\ninterface ClassState {\n\tcharacterClasses: CharacterClass[];\n\tselectedClass: CharacterClass | null;\n\tshowMobileMenu: boolean;\n} \n\nclass Classes extends Component<{}, ClassState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcharacterClasses: [],\n\t\t\tselectedClass: null,\n\t\t\tshowMobileMenu: false\n\t\t}\n\n\t\tthis.GetClasses();\n\t}\n\n\tpublic async GetClasses() {\n\t\tthis.setState({\n\t\t\tcharacterClasses: await ClassService.getClasses()\n\t\t});\n\t}\n\n\tpublic GetDetails() {\n\t\tif(this.state != null && this.state.selectedClass != null) {\n\t\t\treturn (\n\t\t\t\t<div className={styles.ClassDetailSplit}>\n\t\t\t\t\t<ClassDetails characterClass={this.state.selectedClass} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\n\tpublic SetActiveClass = (selectedClass: string) => {\n\t\tlet selected = this.state.characterClasses.find(x => x.name === selectedClass);\n\t\tif(selected == null) {\n\t\t\tthrow Error(\"Unknown class chosen: \" + selectedClass);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tselectedClass: selected,\n\t\t\tshowMobileMenu: false\n\t\t});\n\t}\n\n\tpublic toggleMobileView = () => {\n\t\tthis.setState({\n\t\t\tshowMobileMenu: !this.state.showMobileMenu\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"consoleText\" onClick={this.toggleMobileView}>Classes:</h1>\n\t\t\t\t<div className={styles.ClassSplit}>\n\t\t\t\t\t<Sidebar showMobile={this.state.showMobileMenu} \n\t\t\t\t\t\t\tchoices={Object.values(this.state.characterClasses.map(x => x.name))} \n\t\t\t\t\t\t\tclicked={this.SetActiveClass} \n\t\t\t\t\t\t\tpreDetermined=\"\"\n\t\t\t\t\t\t\ttoggleMobile={this.toggleMobileView}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={styles.ClassPicture}>\n\t\t\t\t\t\t{this.GetDetails()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport interface CharacterClass {\n\tname: string;\n\tdescription: string;\n\tquote: string;\n\tartwork: string;\n}\n\nexport interface ClassDetailedInformation {\n\tintro: string;\n    specialAbility: [{\n        name: string,\n        description: string\n    }],\n    careerSkills: [{\n\t\tname: string,\n\t\tskills: string[]\n\t}]\n}\n\nexport default Classes;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './Interlock.module.css';\n\nclass InterlockIntroduction extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.InterlockIntroduction}>\n\t\t\t\t<div className={styles.InterlockIntroductionText}>\n\t\t\t\t\t<h1>Introduction:</h1>\n\t\t\t\t\t<div className={styles.InterlockIntroMobilePic + \" \" + pictureAnimation.PictureMobileOnly}>\n\t\t\t\t\t\t<img className={\"responsive\"} alt=\"Interlock system\" src=\"assets/Visuals/InterlockSystem.png\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>The interlock system is a simple die + bonus system using a D10. Cyberpunk 2020 is using a polished version of Interlock named \"Standard Interlock\".</p> \n\t\t\t\t\t<p>It is highly skilled-based where characters choose skills for them and advance those skills individually rather than choosing a character package to play.</p> \n\t\t\t\t\t<p>Stats and skills are both rated on a scale of 0-10 with zero representing no ability/no training while 10 being the maximum ability possible for a human being.</p>\n\t\t\t\t\t<p>A typical skill roll will range from 12-20 for most tasks, thus a skill 10 plus stat 10 will succeed at virtually any task barring a critical mishap.</p>\n\t\t\t\t\t<p>Cyberpunk 2020's combat system is named Friday Night Firefight and is a modern weapons combat system for using futuristic and archaic firearms. </p>\n\t\t\t\t\t<p>It is designed to cover all major elements of weapons combat in an easy to use format, allowing realistic firefight action without resorting to a lot of tables and charts.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.InterlockIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Interlock system\" src=\"assets/Visuals/InterlockSystem.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default InterlockIntroduction;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './Interlock.module.css';\n\nclass InterlockDice extends Component<{}, {}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.InterlockIntroduction}>\n\t\t\t\t<div className={styles.InterlockIntroductionText}>\n\t\t\t\t\t<h1>Dice:</h1>\n                    <p>All systems in Cyberpunk use two types of dice; the common, garden variety six sided die (found in most popular games and in Las Vegas), and the more esoteric ten sided die (used excluslvely by the japanese Imperial Navy and in many roleplaying games).</p>\n                    <p>D6 is primarily used for damage, while the D10 is used for everything else.</p>\n                    <p>There are a number of ways in which dice can be used such as: </p>\n\t\t\t\t\t<div style={{ border: \"1px solid red\", padding: \"30px\" }}>\n\t\t\t\t\t\t<p><li>Rolling a group of dice together and adding the results (roll 3D6 would mean roll 3 six sided dice to get a value from 3 to 18).</li></p>\n\t\t\t\t\t\t<p><li>Rolling one or more dice together and adding another value called a modifier to get a final value, expressed as 1D6+1, or 2D10 -2</li></p>\n\t\t\t\t\t\t<p><li>Rolling two ten sided dice together, designating one to mark the tens place and the other to mark the ones place (rolling a percentage).</li></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>In Cyberpunk, if you are asked to divide something and you come up with a decimal value, you will automatically round the result down to the nearest whole number (such as 2.65352 becoming 2).</p>\n\t\t\t\t\t<p>If a modified value (such as 1D6-4) comes out equal to, or below zero, It is automatically equal to 1 unless otherwise specified.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.InterlockIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"D6 and D10\" src=\"assets/Visuals/D10.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default InterlockDice;\n","import { Stat } from '../InterlockSystem/InterlockStats';\n\nexport interface Fumble {\n    title: string;\n    usage: string;\n    fumbles: { range: string, result: string }[];\n}\n\nexport interface SkillList {\n\tcategory: string;\n\tskills: Skill[]\n}\n\nexport interface Skill {\n\tname: string;\n\tdescription: string;\n}\n\nexport class StatService {\n\tpublic static async getStats(): Promise<Stat[]> {\n\t\treturn fetch('assets/InterlockSystem/Stats.json')\n\t\t.then((s) => s.json().then((fetched: { stats: Stat[] }) => {\n\t\t\t\treturn fetched.stats;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic static async getFumbleTable(): Promise<Fumble[]> {\n\t\treturn fetch('assets/InterlockSystem/FumbleTable.json')\n\t\t.then((s) => s.json().then((fetched: { fumbleTable: Fumble[] }) => {\n\t\t\t\treturn fetched.fumbleTable;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic static async getSkillList(): Promise<SkillList[]> {\n\t\treturn fetch('assets/InterlockSystem/SkillList.json')\n\t\t.then((s) => s.json().then((fetched: { list: SkillList[] }) => {\n\t\t\t\treturn fetched.list;\n\t\t\t})\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport { StatService } from '../Services/StatsAndSkillsService';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './Interlock.module.css';\n\nexport interface Stat {\n    name: string;\n    short: string;\n    description: string;\n}\n\ninterface InterlockStatsState {\n    chosen: Stat | null;\n    stats: Stat[];\n}\n\nclass InterlockStats extends Component<{}, InterlockStatsState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            chosen: null,\n            stats: []\n        }\n\n        this.setStats();\n    }\n\n    public async setStats() {\n        this.setState({\n            stats: await StatService.getStats()\n        })\n    }\n\n    public clearSubMenu = () => {\n        this.setState({\n            chosen: null\n        });\n    }\n\n    public setSubMenu = (menu: Stat) => {\n        this.setState({\n            chosen: menu\n        });\n    }\n\n    public renderSubMenu = () => {\n        if(this.state.chosen != null) {\n           return <StatRender chosen={this.state.chosen} back={this.clearSubMenu} />\n        }\n\n        return (\n            this.state.stats.map((stat) => \n                <button className={styles.InterlockStatsSubmenuButton} key={stat.name} onClick={() => this.setSubMenu(stat)}>{stat.name} ({stat.short})</button> \n            )\n        );\n    }\n\n\tpublic render() {\n\n\t\treturn (\n\t\t\t<div className={styles.InterlockStats}>\n\t\t\t\t<div className={styles.InterlockIntroductionText}>\n\t\t\t\t\t<h1>Stats:</h1>\n                    <p>Each Cyberpunk character has nine Statistics values representing the level of native ability of the character in specific areas of activity.</p>\n                    <p>These Stats are rated from two to ten, with two being the worst possible, ten being the best possible, and the average falling at about five or six.</p>\n                    <p>Stats are called <i>Ability Scores</i> in Pathfinder and <i>Attributes</i> in the World of Darkness systems.</p>\n                    <hr/>\n                    <div className={styles.InterlockStatsSubmenu}>\n                        {this.renderSubMenu()}\n                    </div>\n                    <hr/>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.InterlockIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Stats\" src=\"assets/Visuals/Stats.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\ninterface StatProp {\n    chosen: Stat;\n    back: () => void;\n}\n\nclass StatRender extends Component<StatProp, {}> {\n\n    public renderBT = () => {\n        return (\n            <div>\n                <p>Strength, Endurance and Constitution are all based on the character’s Body Type. Body Type determines how much damage you can take in wounds, how much you can lift or carry, how far you can throw, how well you recover from shock, and how much additional damage you cause with physical attacks.</p>\n                <p>Body Type is important to all character types, but to Solos, Rockerboys and Nomads most of all.</p>\n                <h2>{'Body types & Points'}</h2>\n                    <p>2 pts ...................... Very Weak</p>\n                    <p>3-4 pts ...................... Weak</p>\n                    <p>5-7 pts ...................... Average</p>\n                    <p>8-9 pts ...................... Strong</p>\n                    <p>10 pts ...................... Very Strong</p>\n\n                <p style={{border: \"1px solid red\", padding: \"20px\"}}>\n                    <b>You may carry up to 10x your Body Type in kg. You may also dead lift 40 times your Body Type in kg.</b>\n                </p>\n            </div>\n        )\n    }\n\n    public renderBTM = () => {\n        return (\n            <div>\n                <p>Not all people take damage the same way. For example, it takes a lot more damage to stop Arnold The Terminator than it does Arnold the Nerd. This is reflected by the Body Type Modifier, a special bonus used by your character to reduce the effects of damage. The Body type modifier is subtracted from any damage your character takes in combat.</p>\n                <h2>{'Body type modified table'}</h2>\n                <div className={styles.InterlockStatsBTModifiedTable}>\n                    <p>Very Weak...................... -0</p>\n                    <p>Weak ...................... -1</p>\n                    <p>Average ...................... -2</p>\n                    <p>Strong ...................... -3</p>\n                    <p>Very Strong ...................... -4</p>\n                    <p>Superhuman* ...................... -5</p>\n                    <small>(*Superhuman is only available with cybernetics.)</small>\n                </div>\n                    <p>For example, say you took ten points of damage. If you were a <b>Very Weak</b> Body Type, you would take the full ten. But with a <b>Very Strong</b> Body Type, you'd only take (10-4=6) six points of damage.</p>\n                    <p>Remember; no matter how cybered up you get, make sure you're solid meat underneath.</p>\n            </div>\n        )\n    }\n\n    public renderText = () => {\n        \n        if(this.props.chosen.short === \"BT\") {\n            return this.renderBT();\n        }\n        else if(this.props.chosen.short === \"BTM\") {\n            return this.renderBTM();\n        }\n        else {\n            return this.props.chosen.description.split(\"\\n\").map((description) => {\n                return <p>{description}</p>\n            });\n        }\n    }\n\n    public render() {\n        return (\n            <div className={styles.InterlockStatSubmenuDetails}>\n\n                <h2>{this.props.chosen.name}:</h2>\n                { this.renderText() }\n                <div className={styles.InterlockReturnSubmenuWrapper} onClick={this.props.back}>\n                    <div className={styles.InterlockReturnDesktop}>\n                        > [<span className={styles.InterlockReturnSubmenu}> RETURN </span>]\n                    </div>\n                    <button className={styles.InterlockReturnMobile}>\n                        RETURN\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default InterlockStats;\n","import React, { Component } from 'react';\nimport styles from '../StyleModules/TabbedPanel.module.css';\nimport animations from '../StyleModules/Animations.module.css';\n\n\ninterface TabsProps {\n    title: string;\n    sections: any;\n    isActive: (sector: any) => boolean;\n    switchContent: (sector: any) => void;\n    getContent: () => JSX.Element | \"\";\n}\n\nclass Tabs extends Component<TabsProps> {\n    public constructor(props: TabsProps) {\n        super(props);\n    }\n\n    public getAmount = () => {\n        let amount = Object.values(this.props.sections).length;\n\n        switch (amount) {\n            case 3:\n                return styles.ThreeTabs;\n            case 4:\n                return styles.FourTabs;\n            case 5: return styles.FiveTabs;\n        }\n\n        return \"\";\n    }\n\n\tpublic render() {\n\t\treturn (\n            <div className={this.getAmount() + \" \" + animations.FadeIn}>\n            <h1 className={styles.Title}>{this.props.title}</h1>\n            \n            { /* DESKTOP */ }\n            {\n                Object.values(this.props.sections).map((sector) => { \n                    let sect = sector as string;      \n                    return (\n                        <span key={sect}\n                            className={styles.Desktop + \" \" + styles.NavLink + \" \" + (this.props.isActive(sect) ? styles.ActiveNav : styles.NotActiveNav)} \n                            onClick={() => {this.props.switchContent(sect)}}\n                        >{sect}</span>\n                    )\n                })\n            }\n\n            { /* MOBILE */ }\n            <div className={styles.Mobile} >\n                {\n                    Object.values(this.props.sections).map((sector) => { \n                        let sect = sector as string;      \n                        return (\n                            <button key={sect}\n                            className={styles.NavLink + \" \" + (this.props.isActive(sect) ? styles.ActiveNav : styles.NotActiveNav)}\n                                onClick={() => {this.props.switchContent(sect)}}\n                            >{sect}</button>\n                        )\n                    })\n                }\n                <hr/>\n            </div>\n            <div className={styles.Content}>\n                {this.props.getContent()}\n            </div>\n        </div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum SkillSections {\n\tAbout = \"About\",\n\tStarting = \"Starting Skills\",\n\tPickup = \"Pickup Skills\",\n\tHouse = \"House Rules\"\n}\n\ninterface InterlockSkillsState {\n    section: SkillSections;\n}\n\nclass InterlockSkills extends Component<{}, InterlockSkillsState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: SkillSections.About\n        }\n\t}\n\t\n\tpublic renderAboutSkills = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Skills are used to enhance your ability to perform certain tasks. They represent things you've specifically taken the time to learn and possibly master, (as opposed to your stats, which only indicate a basic, natural ability at doing something).</p>\n\t\t\t\t<p>For example, if you had very good REF, you would probably pick up driving a car very easily. But you would not know how to drive a car until you had learned the skill of Driving.</p>\n\t\t\t\t<p>Each skill is related in some way to one of your basic stats. For example, the skill of Handgun is always related to the character’s REF stat.</p>\n\t\t\t\t<p>Skills are always rated from 0 to 10, with 1 being a novice level of knowledge, and 10 being a master’s level of ability. In addition, players may opt to invent their own Skills (see Inventing New Skills, page 54 core rulebook).</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderStartingSkills = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>There are two types of starting Skills: Career Skill Packages and Pickup Skills: </p>\n\t\t\t\t<p>The Career Skill Package is a group of skills that are known by your character as part of his or her Career. They're basics— Rockers know how to play instruments, Solos know how to shoot guns, etc. </p>\n\t\t\t\t<p>A starting character receives 40 points to distribute among his 10 Career Skills. He may not use these points on his Pickup Skills, although he can choose to use future Improvement Points to improve a Career Skill at any later time. He does not have to put points into all of his Career Skills (but it's a good idea— you never know).</p>\n\t\t\t\t<div style={{ border: \"1px solid red\", padding: \"20px\" }}>\n\t\t\t\t\t<p>Important: it is required that one of your character’s Career Skills be the Special Ability for his or her class. These Skills are unique to the class and reflect abilities and resources only that particular class possesses.</p>\n\t\t\t\t\t<p>Examples are the Authority of Cops which allows them to use the weight and powers of the Law or the Charismatic Leadership which allows a Rockerboy to convince a crowd to get down and party — or get out and riot.</p>\n\t\t\t\t\t<p>The number of points you put into your Special Ability (up to, but not greater than 10) reflects your position in your chosen field and the development of your unique career skill. Because of this, your Special Ability also determines how much money you have to start with (see page 58 in rulebook).</p>\n\t\t\t\t</div>\n\t\t\t\t<p>Obviously while spreading those Career Points around it’s going to be pretty tempting to make yourself a wealthy Superstar, but remember a Rocker with lots of Charismatic Leadership and no performance skills will find that things can get ugly fast.</p>\n\t\t\t\t<p>They may love you but they paid 60 eurobucks for those tickets so you’d better be smokin'.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic switchContent = (section: SkillSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\n\tpublic renderPickupSkills = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Pickup Skills are skills the character has learned in the course of knocking around, living his or her life. Characters determine their starting points for these skills by adding their REF and INT Stats.</p>\n\t\t\t\t<p>For example: Johnny’s REF is 9 and his INT is 7. Johnny has 16 points to spend on Pickup Skills.</p>\n\t\t\t\t<div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<p>Friendly reminder:</p>\n\t\t\t\t\t<p>Pickup Skill points may not be used to increase your character's Career Skills!</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderHouseRuled = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>The total amount of skills in Cyberpunk is <u>79</u> by default.</p>\n\t\t\t\t<p>Due to this excessive amount of skills that are very similar in nature, many skills have been squashed into a single skill.</p>\n\t\t\t\t<p>This is a referee house rule to keep the game simple and will make it easier for both referee and players.</p>\n\t\t\t\t<p>A good example of this squash is Hide/Evade, Shadow/Track and Stealth which fulfill mostly the same roles.</p>\n\t\t\t\t<div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<p><b>Shadow/Track</b> is described as <i>\"The skill of shadowing and following people.\"</i></p>\n\t\t\t\t\t<p><b>Hide/Evade</b> is described as <i>\"The skill of losing pursuers, covering tracks and otherwise evading people on your trail.\"</i></p>\n\t\t\t\t\t<p><b>Stealth</b> is described as <i>\"The skill of hiding in shadows, moving silently, evading guards, etc.\"</i></p>\n\t\t\t\t</div>\n\t\t\t\t<p>These skills, while not identical, are essentially the same which means a character who is good at hiding might not be good at stealth, a skill described as 'hiding in shadows'.</p>\n\t\t\t\t<p>In Cyberpunk RED - The newest edition of Cyberpunk, the skills have been squashed into <u>22</u> skills. Which is less than the WoD games which usually have 30.</p>\n\t\t\t\t<p>Due to the referee not wanting to deviate too far from the Cyberpunk 2020 formula, the total sum of skills after the squash is 40.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic getContent = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase SkillSections.About:\n\t\t\t\treturn this.renderAboutSkills();\n\t\t\tcase SkillSections.Starting:\n\t\t\t\treturn this.renderStartingSkills();\n\t\t\tcase SkillSections.Pickup:\n\t\t\t\treturn this.renderPickupSkills();\n\t\t\tcase SkillSections.House:\n\t\t\t\treturn this.renderHouseRuled();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: SkillSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n\t\t\t<Tabs getContent={this.getContent} \n                isActive={this.isActive} \n                sections={SkillSections} \n                title=\"Skills:\" \n                switchContent={this.switchContent} \n            />\n\t\t);\n\t}\n}\n\nexport default InterlockSkills;\n","import React, { Component } from 'react';\nimport styles from './InterlockReputation.module.css';\nimport splitter from '../StyleModules/Splitter.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum SkillIPSections {\n\tLearning = \"Learning and Improving\",\n\tMultipliers = \"IP Multipliers\",\n\tGetting = \"Getting More IP\"\n}\n\ninterface InterlockSkillsIPState {\n    section: SkillIPSections;\n}\n\nclass InterlockSkillsIP extends Component<{}, InterlockSkillsIPState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: SkillIPSections.Learning\n        }\n\t}\n\t\n\tpublic renderLearning = () => {\n\t\treturn (\n\t\t\t<div className={splitter.TwoColumnSplit}>\n                <div>\n                    <p>Players can improve their skills or begin new ones by accumulating Improvement Points (IP) . As you gain more IP, you'll record these points in the area next to the skills listing on your Hardcopy Form. When you have collected enough Improvement Points in a skill, the skill's level increases by one.</p>\n                    <p>The first level of a skill will always cost 10 IP.</p> \n                    <p>To determine how many points are required to raise a skill higher than this, multiply the current level of skill by 10. This is how many points are required to raise a simple (IP multiplier=1) skill to the next level.</p>\n                    <p>Example: My Brawling skill is +4. To move from +4 to +5 will require 40 IP. To move from +5 to +6 will require 50 IP.</p>\n                </div>\n                <div className={styles.AwardTable}>\n                    <span>Award</span>\n                    <span>Based on</span>\n                    <span>1</span>\n                    <span>Used Skills in this area often even if not effectively. </span>\n                    <span>2</span>\n                    <span>Used Skills effectively.</span>\n                    <span>3</span>\n                    <span>Frequent and effective use of Skill.</span>\n                    <span>4</span>\n                    <span>Did something out of the ordinary with this Skill. </span>\n                    <span>5</span>\n                    <span>Very clever or effective use of this Skill.</span>\n                    <span>6</span>\n                    <span>Extremely clever or effective use of Skill.</span>\n                    <span>7</span>\n                    <span>Skill was critical to player in this adventure session.</span>\n                    <span>8</span>\n                    <span>Skill use was critical to entire group this adventure session.</span>\n                    <span>9</span>\n                    <span>Did something really incredible with this Skill.</span>\n                </div>\n\t\t\t</div>\n\t\t)\n    }\n    \n    public renderIPMultipliers = () => {\n        return(\n            <div>\n                <p>Not all skills are equally easy to learn. These skills have an additional IP multiplier which multiplies the number of points required to learn the next level of skill.</p> \n                <p>This extra cost will be noted in the skill descriptions.</p>\n                <p>Example: Choi Li Fut (Martial Arts) has a multiplier of 3. To raise my Choi Li Fut skill from +4 to +5 would require 120 IP, not 40.</p>\n            </div>\n        )\n    }\n\n    public renderGettingMore = () => {\n        return(\n            <div>\n                <p>There are three ways to accumulate Improvement Points: Study and Practice, Being Taught, and Direct Experience. In all three cases, the amount of improvement is determined by the Referee of your game.</p>\n                \n                <h3><u>Study and practice:</u></h3>\n                <p>In its simplest form, you get a how-to book and begin practicing. </p>\n                <p>Study is pretty tough—you have no idea of where to begin, and no one to correct your mistakes. </p>\n                <p>The biggest limit to this type of learning is that you can only improve your skill from a level of +0 to a level of +2. In general, it takes about 1 day of book learning to gain 1x 1P.</p>\n                \n                <h3><u>Being Taught:</u></h3>\n                <p>Finding a teacher is far superior to self-teaching or book learning. The teacher must have a higher level of skill than the student, and must have the time to teach you (how long this takes, of course, is determined by the Referee).</p>\n                <p>But even the most knowledgeable of teachers may not be able to transfer that knowledge. That's where the skill of Teaching comes into play. The teacher must average his skill in the subject to be taught with his teaching skill. He may then teach the student up to that level of skill.</p>\n                <p>How long this takes is, of course, up to the Referee, who awards IP over the passage of time (usually 1-5 IP per sesson).</p>\n                \n                <h3><u>Experience:</u></h3>\n                <p>Still the best teacher.</p>\n                <p>Whenever you do something well, the Referee rewards you with Improvement Points right on the spot. The problem is that these points will be applied to the skill you were using when you got the reward. Therefore, if you want to get better in a particular skill, it's important to use that skill every chance you get.</p>\n                <p>Referees should use an even hand when rewarding Improvement Points, not only rewarding players for doing things well, but also for demonstrating both role-playing ability and teamwork. </p>\n                <p>In general, the rulebook suggests not awarding more than six points per skill per game session.</p>\n            </div>\n        )\n    }\n\n\tpublic switchContent = (section: SkillIPSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\n\n\tpublic getContent = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase SkillIPSections.Learning:\n\t\t\t\treturn this.renderLearning();\n\t\t\tcase SkillIPSections.Multipliers:\n\t\t\t\treturn this.renderIPMultipliers();\n\t\t\tcase SkillIPSections.Getting:\n\t\t\t\treturn this.renderGettingMore();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: SkillIPSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n\t\t\t<Tabs getContent={this.getContent} \n                isActive={this.isActive} \n                sections={SkillIPSections} \n                title=\"Improvement Points:\" \n                switchContent={this.switchContent} \n            />\n\t\t);\n\t}\n}\n\nexport default InterlockSkillsIP;\n","import React, { Component } from 'react';\nimport styles from './InterlockSkillList.module.css';\nimport { StatService, SkillList, Skill } from '../Services/StatsAndSkillsService';\n\ninterface InterlockSkillsState {\n\tselection: Skill | null;\n\tlist: SkillList[]\n}\n\nclass InterlockSkillList extends Component<{}, InterlockSkillsState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n\t\t\tlist: [],\n\t\t\tselection: null     \n\t\t}\n\n\t\tthis.getSkills();\n\t}\n\t\n\tpublic renderChoice = () => {\n\t\treturn \"\";\n\t}\n\n\tpublic async getSkills() {\n\t\tthis.setState( {\n\t\t\tlist: await StatService.getSkillList()\n\t\t});\n\t}\n\n\tpublic setChoice = (skill: Skill) => {\n\t\tthis.setState({\n\t\t\tselection: skill\n\t\t});\n\t}\n\n\tpublic clearChoice = () => {\n\t\tthis.setState({\n\t\t\tselection: null\n\t\t});\n\t}\n\n\tpublic renderSkill = () => {\n\t\tif(this.state.selection == null)\n\t\t\treturn \"\";\n\n\t\tlet skill = this.state.selection;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={styles.ModalBackground} onClick={this.clearChoice}/>\n\t\t\t\t<div className={styles.WindowedInformation}>\n\t\t\t\t\t<h1>{skill.name}</h1>\n\t\t\t\t\t{skill.description.split(\"\\n\").map((paragraph) => {\n\t\t\t\t\t\tif(paragraph.includes(\"**\")) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tparagraph.split(\"**\").map((listedItem) => {\n\t\t\t\t\t\t\t\t\treturn <li>{listedItem}</li>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<p>{paragraph}</p>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<button className={styles.BigOnMobile} onClick={this.clearChoice}>> Return </button> \n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tpublic countSkills = () => {\n\t\tlet totalCount = 0;\n\n\t\tfor (const category of this.state.list) {\n\t\t\ttotalCount = totalCount + category.skills.length;\n\t\t}\n\n\t\treturn totalCount;\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.SkillList}>\n\t\t\t\t{ this.renderSkill() }\n\t\t\t\t{\n\t\t\t\t\tthis.state.list.map((skillList) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h2 className={styles.InterlacedPicture}>{ skillList.category}:</h2>\n\t\t\t\t\t\t\t\t<div className={styles.InterlockSkillList}>\n\t\t\t\t\t\t\t\t\t{skillList.skills.map((skill) =>  {\n\t\t\t\t\t\t\t\t\t\treturn <button onClick={() => { this.setChoice(skill); } }>{skill.name}</button>\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}) \n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default InterlockSkillList;\n","import React, { Component } from 'react';\nimport styles from './InterlockReputation.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport splitter from '../StyleModules/Splitter.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum ReputationSections {\n\tAbout = \"About\",\n\tTable = \"Reputation Table\",\n\tFacedowns = \"Facedowns\"\n}\n\ninterface InterlockReputationState {\n    section: ReputationSections;\n}\n\nclass InterlockReputation extends Component<{}, InterlockReputationState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: ReputationSections.About\n        }\n\t}\n\t\n\tpublic renderAbout = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Reputation is a measure of things your character may do so well (or badly) that he has actually become well known for them. A reputation for something is always established by a character's actions, and is then awarded by the Referee. Whenever a character encounters new people in new situations , his reputation may actually influence how they react to him. Sometimes this can be very good. Other times, it can be very bad.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <p>Example:</p>\n                    <p>Jake the Hammer is known far and wide as a streetfighter; he is feared throughout Night City for his trademark killer punch. Over time, the Referee has awarded Jake a Reputation of 6 points. Anyone who meets Jake for the first time must roll higher than 6 on 1D10 in order to have not heard of Jake's name.</p>\n                    <p>On this particular night, jake swaggers into the Totentanz and orders a drink. Down the bar, Ripperjack hears the bartender address jake by name.</p>\n                    <p>Ripperjack puts two and two together (a 3 on 1D10). This \"lake” must be the sonovagun who caught The Jack's kid brother in an alley and beat him to death with his metalshod fists. Ripperjack's eyes flare, and his teeth grind down. He pulls out his Minami 10 and blows a hole through Jake's back.</p>\n                </div>\n                <p>Reputation can also be a disadvantage. Whenever you do something extremely uncool (show cowardice, desert or betray someone, etc.), the Referee can still award you Reputation Points for these actions. The more points you score, the more likely people are to have heard about your infamous deeds (once again, roll 1D10).</p>\n                <p>However, this time they won't be impressed. If your rep is for cowardice, it can even work against you.</p>\n\t\t\t</div>\n\t\t)\n    }\n    \n    public renderTable = () => {\n        return(\n            <div>\n                 <div className={styles.AwardTable}>\n                    <span>Level</span>\n                    <span>Who knows about you</span>\n                    <span>1</span>\n                    <span>Anyone who was there at the time knows. </span>\n                    <span>2</span>\n                    <span>Stories have gotten around to immediate friends. </span>\n                    <span>3</span>\n                    <span>All your co-workers and casual acquaintances know. </span>\n                    <span>4</span>\n                    <span>Stories are all over the local area.</span>\n                    <span>5</span>\n                    <span>Your name is recognized by others beyond your local area.</span>\n                    <span>6</span>\n                    <span>You are known on sight by others beyond your local area. </span>\n                    <span>7</span>\n                    <span>A news story or two has been written about your exploits.</span>\n                    <span>8</span>\n                    <span>Your exploits regularly make the headlines and screamsheets.</span>\n                    <span>9</span>\n                    <span>Your exploits always make the screamsheets and TV.</span>\n                    <span>10</span>\n                    <span>You're known worldwide.</span>\n                </div>\n            </div>\n        )\n    }\n\n    public renderFacedowns = () => {\n        return(\n            <div>\n                <div className={splitter.TwoColumnSplit}>\n                    <div>\n                        <p>Reputation in Cyberpunk has one other big effect — facedowns. </p>\n                        <p>Remember; a lot of combat in this genre comes down to a duel of wills; who's tougher, meaner, and looks more ready to prove it. This often leads to what are called facedowns; when two heavies on the Street square off just before a fight, or to see who'll back down from a confrontation.</p>\n                    </div>\n                    <div className={tabbedpanel.ExampleBorder}>\n                        <h3>1D10 + Cool + Reputation</h3>\n                        <p>Note: If one of the opponents has a reputation for cowardice, his value will be treated as a negative number.</p>\n                    </div>\n                </div>\n                <p>When making a facedown, both participants will roll:</p>\n               \n                <p>In a facedown, the loser has the option of backing down or making any subsequent attacks against this particular opponent at a -3 (due to fear) until he has successfully defeated that opponent once. On a tied roll, both parties are unsure and no penalties will apply.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <p>Example:</p> \n                    <p>The Ironmaster is a feared boosterganger known throughout Night City. In the middle of the Slammer, he runs across an attractive young woman and her male companion. The Ironmaster says \"Take a clue and vanish, Kid-trash, the input's with me now.\" The Kid stands up and says, \"Vanish yourself, burnbrain.” A faceoff begins.</p>\n                    <p>The Ironmaster is known all over the City, giving him a Rep of 6.</p>\n                    <p>What he doesn't know s that the Kid is a 5th Dan black belt in Kenpo Karate. Although he's new in the Zone and hasn't much of a Rep (3), he is totally selfposessed and aware of his skills (COOL=10). </p>\n                    <p>The Ironmaster may be tough, but he's mostly a bully. His COOL is only 4, bolstered by a Reputation made on a few lucky fights. His total roll is 4+4+(roll of 6)=14.</p>\n                    <p> The Kid's total is 3+10+(roll of 3)=16. The Ironmaster feels a strange unease as he stares at the calm, ready-to-rock Kid. His eyes shift away and he backs down with a grunt.</p>\n                </div>\n            </div>\n        )\n    }\n\n\tpublic switchContent = (section: ReputationSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\n\n\tpublic getContent = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase ReputationSections.About:\n\t\t\t\treturn this.renderAbout();\n\t\t\tcase ReputationSections.Table:\n\t\t\t\treturn this.renderTable();\n\t\t\tcase ReputationSections.Facedowns:\n\t\t\t\treturn this.renderFacedowns();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: ReputationSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n            <Tabs getContent={this.getContent} \n            isActive={this.isActive} \n            sections={ReputationSections} \n            title=\"Reputation:\" \n            switchContent={this.switchContent} \n            />\n\t\t);\n\t}\n}\n\nexport default InterlockReputation;\n","import React, { Component } from 'react';\nimport styles from './Interlock.module.css';\nimport InterlockIntroduction from './InterlockIntroduction';\nimport InterlockDice from './InterlockDice';\nimport InterlockStats from './InterlockStats';\nimport Sidebar from '../Common/Sidebar.Navigation';\nimport InterlockSkillCheck from './InterlockSkillChecks';\nimport InterlockSkills from './InterlockSkills';\nimport InterlockSkillList from './InterlockSkillList';\nimport InterlockSkillsIP from './InterlockSkillsIP';\nimport InterlockReputation from './InterlockReputation';\nimport InterlockLifepath from './InterlockLifepath';\n\ninterface InterlockState {\n\tselection: string | null;\n\tshowMobileMenu: boolean;\n} \n\nenum Choices {\n\tIntroduction = \"Introduction\",\n\tDice = \"Dice\",\n\tStats = \"Stats\",\n\tSkillCheck = \"Skill Check\",\n\tSkills = \"Skills\",\n\tImprovement = \"Imp. Points\",\n\tSkillList = \"Skill List\", \n\tReputation = \"Reputation\",\n\tStarting = \"Lifepath\"\n}\n\nclass Interlock extends Component<{}, InterlockState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselection: Choices.Introduction,\n\t\t\tshowMobileMenu: false\n\t\t}\n\t}\n\n\tpublic changeSelection = (newSelection: string) => {\n\t\tthis.setState({\n\t\t\tselection: newSelection,\n\t\t\tshowMobileMenu: false\n\t\t});\n\t}\n\n\tpublic getCurrentSelection = () => {\n\t\tswitch(this.state.selection) {\n\t\t\tcase Choices.Introduction:\n\t\t\t\treturn <InterlockIntroduction />;\n\t\t\tcase Choices.Dice: \n\t\t\t\treturn <InterlockDice />;\n\t\t\tcase Choices.Stats:\n\t\t\t\treturn <InterlockStats />;\n\t\t\tcase Choices.SkillCheck:\n\t\t\t\treturn <InterlockSkillCheck />\n\t\t\tcase Choices.Skills:\n\t\t\t\treturn <InterlockSkills />;\n\t\t\tcase Choices.Improvement:\n\t\t\t\treturn <InterlockSkillsIP/>;\n\t\t\tcase Choices.SkillList:\n\t\t\t\treturn <InterlockSkillList />\n\t\t\tcase Choices.Reputation:\n\t\t\t\treturn <InterlockReputation />\n\t\t\tcase Choices.Starting:\n\t\t\t\treturn <InterlockLifepath />\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tpublic toggleMobileView = () => {\n\t\tthis.setState({\n\t\t\tshowMobileMenu: !this.state.showMobileMenu\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1 className={\"consoleText\"} onClick={this.toggleMobileView}>Interlock System:</h1>\n\t\t\t\t<div className={styles.InterlockSplit}>\n\t\t\t\t\t<Sidebar showMobile={this.state.showMobileMenu} \n\t\t\t\t\t\t\tchoices={Object.values(Choices)} \n\t\t\t\t\t\t\tclicked={this.changeSelection} \n\t\t\t\t\t\t\tpreDetermined={Choices.Introduction}\n\t\t\t\t\t\t\ttoggleMobile={this.toggleMobileView}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.getCurrentSelection()}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Interlock;\n","import React, { Component } from 'react';\nimport styles from './InterlockLifepath.module.css';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\n\nclass InterlockLifepath extends Component<{}, {}> {\n\n\tpublic render() {\n\n\t\treturn (\n            <div className={styles.Lifepath}>\n                <div className={styles.Explanations}>\n                    <h1>Lifepath:</h1>\n                    <div className={styles.MobilePicture + \" \" + pictureAnimation.PictureMobileOnly}>\n                        <img alt=\"Lifepath\" src=\"assets/Visuals/Lifepath.png\"/>\n                    </div>\n                    <p>You got this half-formed person standing there. You got some stats, maybe an vague idea of where you're going with the character, but nothing else.</p>\n                    <p>So how do you take this Blank and make him really Cyberpunk? You start with the Lifepath.</p>\n                    <p>Lifepath is a flow chart of \"plot complications\", designed to help you give your Cyberpunk character an authentically dark future background.\n                        So in practice it is a way to randomly or selectively flesh out your character.\n                    </p>\n                    <p>Its seven sections cover your national and ethnic origins, your family, friends, enemies, personal habits and even key events on a yearly basis. </p>\n                    <div className={styles.Bordered}>\n                        <h4>\n                            <i>It's intended primarily as a guide; if you encounter something you don't think fits the character you've envisioned, \n                            feel free to change the path as you see fit.</i>\n                        </h4>\n                        <p style={{paddingLeft: '40px'}}>- Rulebook</p>\n                    </div>\n                    <p>The point above needs to be very clear. The lifepath system is a <u>guide</u> and not a forced character generator. \n                        If you rolled something and it didn't fit your character, roll again or choose something else.\n                    </p>\n                    <p>Don't like the available choices? Make something up. It is supposed to be your character.\n                        Don't choose something that doesn't fit your vision because you feel the need to.</p>\n                    <p>Maybe you get some ideas? Maybe it will  trigger some thoughts about your character's background story?</p>\n                    <p>Take it for a spin and see where you land.</p>\n\n                    <hr/>\n                    <h2>Using the Lifepath system:</h2>\n                    <p>The lifepath system is depicted on page 33-39 in the core rulebook. We will go through this it in the first session.</p>\n                    <p>Since we will go through it during the initial session, it is not available on this website. \n                        Please look at the core rulebook at page 33-39 to see the flowcharts and how it might generate rad ideas for your character.\n                    </p>\n                </div>\n                <div className={styles.Picture}>\n                    <img className={pictureAnimation.InterlacedPicture} alt=\"Lifepath\" src=\"assets/Visuals/Lifepath.png\"/>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default InterlockLifepath;\n","import React, { Component } from 'react';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum TurnsSections {\n\tAbout = \"Rounds/Turns\",\n\tStarting = \"Waiting\",\n\tPickup = \"Party Initiative\",\n\tHouse = \"Snapshots\"\n}\n\ninterface FNFFTurnsState {\n    section: TurnsSections;\n}\n\nclass FNFFTurns extends Component<{}, FNFFTurnsState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: TurnsSections.About\n        }\n\t}\n\n\tpublic switchContent = (section: TurnsSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\t\n\tpublic renderRoundsAndTurns = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Combat in FNFF is divided up into rounds, each representing 3 seconds. Every round, each player gets to do something.</p>\n\t\t\t\t<p>The order of the round is based on an inititative roll of 1D10 plus the players REF stat, with highest rolls moving first to lowest rolls\n\t\t\t\t\tmoving last. Reflex boosts are added to this roll where applicable.\n\t\t\t\t</p>\n\n\t\t\t\t<p className={tabbedpanel.ExampleBorder}>INITIATIVE = ROLL 1D10 + REF. HIGHEST ROLL FIRST.</p>\n\n\t\t\t\t<p>Example:</p>\n\t\t\t\t<p>Players A, Band C all have REF stats of 10. A rolls a 5, B rolls an 8, and C rolls a 2.</p>\n\t\t\t\t<p>Turn order will be B, then A, then C.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderWaiting = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>You can elect to act later in the round, stepping in at any point to act.</p>\n\t\t\t\t<p>If you have elected to wait until another player's turn has come up, you will be able to act after they have taken their turn in the round.</p>\n\t\t\t\t<div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<p>Example:</p>\n\t\t\t\t\t<p>Turn order is player A, then B, then C.</p>\n\t\t\t\t\t<p>Player A decides to wait until player C has moved from cover, then take his shot.</p>\n\t\t\t\t\t<p>By waiting, the new turn order will be B, C then A.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderPartyInitiative = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>You may want to speed up your play by designating one member of the group as the party leader and have him roll initiative for the whole group.</p>\n\t\t\t\t<p>His roll is added to REF scores of everyone in the group to determine when each member of the group will act.</p>\n\t\t\t\t<div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<p>PARTY INITIATIVE = LEADER ROLL + INDIVIDUAL REF</p>\n\t\t\t\t</div>\n\t\t\t\t<p>You are free to activate this way of initiative at any point during the session.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderSnapshots = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>By declaring a fast draw (aka snapshot) at the start of the round, you automatically add +3 to your initiative roll, taking a -3 penalty to hit (you're rushing into combat instead of preparing carefully).</p>\n\t\t\t\t<p>You also may not take advantage of scope, sights or other aiming advantages. The martial arts or melee verson of this technique is called the iai-jutsu or lightning strike.</p>\n\t\t\t\t<div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<p>FAST DRAW = +3 TO INITIATIVE, -3 TO HIT</p>\n\t\t\t\t</div>\n\t\t\t\t<p>Example:</p>\n\t\t\t\t<p>Ripperjack is faced with his long time enemy, Hargan.</p>\n\t\t\t\t<p>He knows Hargan has a higher REF than he does, so he elects to make an all out, blazing attack before the giant can get in a move.</p>\n\t\t\t\t<p>The snapshooting bonus will give him the +3 advantage he needs. Ripperjack's mono-katana arcs out in a searing iai-jutsu before Hargan can raise his own sword.</p>\n\t\t\t\t<p>Unfortunantly, the -3 point penalty for snapshots works against Ripperjack, and his attack misses his opponent by a mile.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderChoice = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase TurnsSections.About:\n\t\t\t\treturn this.renderRoundsAndTurns();\n\t\t\tcase TurnsSections.Starting:\n\t\t\t\treturn this.renderWaiting();\n\t\t\tcase TurnsSections.Pickup:\n\t\t\t\treturn this.renderPartyInitiative();\n\t\t\tcase TurnsSections.House:\n\t\t\t\treturn this.renderSnapshots();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: TurnsSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n\t\t\t<Tabs getContent={this.renderChoice} \n\t\t\t\tisActive={this.isActive} \n\t\t\t\tsections={TurnsSections} \n\t\t\t\ttitle=\"Initiative and turns:\" \n\t\t\t\tswitchContent={this.switchContent}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default FNFFTurns;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './FNFFIntroduction.module.css';\n\nclass FNFFIntroduction extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFIntroduction}>\n\t\t\t\t<div className={styles.FNFFIntroductionText}>\n\t\t\t\t\t<h1>Introduction:</h1>\n\t\t\t\t\t<img className={styles.FNFFIntroductionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Friday Night Firefight\" src=\"assets/Visuals/FNFFIntro.png\"/>\n                    <p>Friday Night Firefight (FNFF) is a weapons combat system for using modern, futuristic and archaic firearms in Cyberpunk adventures.</p>\n                    <p>It's designed to cover all major elements of weapons combat in an easy to use format, allowing realistic firefight action without resorting to lots of tables and charts.</p>\n                    <p>FNFF also covers melee weapons, hand to hand combatand martial arts as well, all in a simple system that allows you to use strategy over firepower.</p>\n                    <p>There’s alot of vague ideas and theories about modern weapons encounters— most of them from the Hollywood Never-Empty-Six-Gun-School of Armed Combat.</p>\n                    <p>These misconceptions have crept on little flat feet into the design of many roleplaying games, leading to characters who can be repeatedly shot with large caliber handguns until they run out of “hit points” and who can fire Ingram MAC-10’s one-handed and hit with every bullet.</p>\n                    <p>In other words, good, clean fun.</p>\n                    <p>FNFF is not good, clean fun. Most of the data herein has been complied from ballistics reports, police data, FBI statistics and other not-clean fun sources. These sources tend to point to a couple of basic truths about firefight combat.</p>\n                    <ul className={styles.ExampleBorder}>\n                        <li>80% of most gunfights occur between untrained amateurs at a range of 21 feet. </li>\n                        <li>40% of these raging gun battles happen within 8 feet or less! </li>\n                        <li>Most (60%) occur in dimly lit and difficult conditions— dark, rainy alleys, with both participants panting and out of breath, pausing momentarily to snap off a badly aimed shot at a fleeing shadow, then ducking back for cover. </li>\n                        <li>Hits are surprisingly rare. When they do occur (assuming a large caliber weapon’s involved), the victim is usually hors de combat on the first shot from a combination of wound- shock and terror.</li>\n                        <li>A solid hit with a .44 magnum will usually splatter a real person all over New Jersey.</li>\n                    </ul>\n                    <p>On the other hand, this is Cyberpunk, right?  So why are we telling you all this if we don’t intend for you to go in there with guns blazing?</p>\n                    <p>If a large caliber handgun is truly something to be respected, who wants to lose character after character until they get the point?</p>\n                    <p>We've made this edition of FNFF simpler, faster and more direct, so you can concentrate on how to fight; how to win every encounter (you'll only get to lose once). </p>\n                    <p>We're going to give you all the tips we’ve learned over hundreds of our own encounters, plus hot tips from cops, combatgrunts, SWAT masters and other veterans who've put it on the line for real.</p>\n                    <p>It's true— a firefight is dangerous. But you can handle it.</p>\n                    <p>That's why you’re Cyberpunk.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.FNFFIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Friday Night Firefight\" src=\"assets/Visuals/FNFFIntro.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFIntroduction;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport splitter from '../StyleModules/Splitter.module.css';\nimport styles from './FNFFActions.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum ActionsSections {\n\tAbout = \"An Action\",\n\tMore = \"More than one\",\n\tAmbushes = \"Ambushes\",\n\tLoS = \"Line of Sight\"\n}\n\ninterface FNFFActionsState {\n\tsection: ActionsSections;\n\timageAnimation: boolean\n}\n\nclass FNFFActions extends Component<{}, FNFFActionsState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n\t\t\tsection: ActionsSections.About,\n\t\t\timageAnimation: true\n        }\n\t}\n\n\tpublic setSection = (section: ActionsSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\t\n\tpublic renderAbout = () => {\n\t\treturn (\n\t\t\t<div className={styles.SingleColumnGrid}>\n\t\t\t\t<img className={styles.ActionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Action!\" src=\"assets/Visuals/Actions.jpg\"/>\n\t\t\t\t<p>During your part of the round, you may perform one <b>action</b> without penalty.</p>\n\t\t\t\t<div className={splitter.TwoColumnSplit}>\n\t\t\t\t\t<div className={styles.ActionText}>\n\t\t\t\t\t\t<div className={tabbedpanel.ExampleBorder} >\n\t\t\t\t\t\t\t<h3>Examples:</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Move up to your full Movement (3x your Movement Allowance in meters) per round. </li>\n\t\t\t\t\t\t\t\t<li>Attack up to your weapon’s maximum Rate of Fire (ROF), or make a Melee attack. </li>\n\t\t\t\t\t\t\t\t<li>Dodge (making yourself harder to hit. Melee attacks only.) </li>\n\t\t\t\t\t\t\t\t<li>Parry (deflecting damage onto something else.) </li>\n\t\t\t\t\t\t\t\t<li>Escape a hold or trap. </li>\n\t\t\t\t\t\t\t\t<li>Aim (gaining +1 to hit for every consecutive turn of aiming up to 3 rounds) </li>\n\t\t\t\t\t\t\t\t<li>Reload or change weapons. </li>\n\t\t\t\t\t\t\t\t<li>Mount or dismount from a vehicle. </li>\n\t\t\t\t\t\t\t\t<li>Repair or give Medical Aid. </li>\n\t\t\t\t\t\t\t\t<li>Perform a non-combat task.</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.ActionPicture}>\n\t\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Action!\" src=\"assets/Visuals/Actions.jpg\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderMore = () => {\n\t\treturn (\n\t\t\t<React.Fragment>\n                <h3>More than one action:</h3>\n                <p>You may perform more than one action at a -3 penalty to each successive action. </p>\n                <h3>Two weapon attacks:</h3>\n                <p>Two weapon attacks can be made at a -3 to hit penalty on both weapons used.</p>\n\t\t\t\t<div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<h2>Don't forget to take some penalties!</h2>\n\t\t\t\t\t<p>Maybe you have a 90% chance to hit, why not equip that extra weapon or run while gunning? It'll make it harder for enemies to hit you.</p>\n\t\t\t\t\t<p>How about moving behind cover? Quick reloading after shooting? Sliding across the room and shooting someone in the face? \n\t\t\t\t\t\tThe possibilities here are endless, so don't forget to take some penalities to do more stuff.</p>\n\t\t\t\t\t<p>Because standing still in a gunfight will only make you predictable.</p>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tpublic renderAmbushes = () => {\n\t\treturn (\n\t\t\t<React.Fragment>\n                <p>Sometimes, the best way to deal with a very powerful opponent is to get the drop on him from behind; in short, setting an ambush.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n\t\t\t\t\t<p>AMBUSH = +5 TO ATTACK FOR 1 ROUND</p>\n\t\t\t\t</div>\n                <p>You may ambush or backstab by announcing your intent to hide or lie in ambush for a target. You can elect to set up an ambush any time:</p>\n                <ul>\n                    <li>The opponent is unaware of your location and your intention to attack. This can be accomplished by setting up a hiding place ahead of time or taking advantage of a melee to get under cover and waiting for a shot.</li>\n                    <p>A victim of an ambush must make an Awareness roll greater than your Stealth Skill+INT+1D10, or you have automatically succeeded.</p>\n                    <li>The opponent’s attention is on another situation, such as another attack or a task requiring great concentration. This can be accomplished by creating a distraction for your opponent, or by sneaking up on him while he is in combat with another combatant.</li>\n                </ul>\n                <p>An ambush doesn’t mean you act first— it just means you have an attack advantage.</p>\n                <p>Initiative for the round is made as usual, and the ambushing character can spring the trap on his part of the round or can wait to see what develops before making his attack. </p>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tpublic renderLoS = () => {\n\t\treturn (\n\t\t\t<React.Fragment>\n                <p>Whenever you are facing your target and have a clear path between you, you can attack.</p>\n                <p>You can clearly see anything forward of your shoulders.</p>\n                <p>See image below for clear paths and facings:</p>\n\t\t\t\t<div className={styles.DesktopOnly}>\n\t\t\t\t\t{this.renderImage()}\n\t\t\t\t</div>\n\t\t\t\t<img className={styles.LoSPicture + \" \" + pictureAnimation.InterlacedPicture} style={{ cursor: \"pointer\" }} \n\t\t\t\t\tonClick={this.openPictureInNewTab} alt=\"Line of sight\" title=\"Click to remove background.\" src=\"assets/Visuals/LineOfSight.png\"\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tpublic openPictureInNewTab = () => {\n        window.open(\"assets/Visuals/LineOfSightNo3D.png\", \"_blank\"); \t\t\n\t}\n\n\tpublic renderImage = () => {\n\t\tif(this.state.imageAnimation) {\n\t\t\treturn <img className={pictureAnimation.InterlacedPicture} style={{ cursor: \"pointer\" }} \n\t\t\t\t\tonClick={this.toggleImageAnimation} alt=\"Line of sight\" title=\"Click to remove background.\" src=\"assets/Visuals/LineOfSight.png\"\n\t\t\t\t\t/>\n\t\t}\n\t\treturn <img onClick={this.toggleImageAnimation} style={{ cursor: \"pointer\" }} alt=\"Line of sight\" src=\"assets/Visuals/LineOfSightNo3D.png\"/>\n\t}\n\n\tpublic toggleImageAnimation = () => {\n\t\tthis.setState({\n\t\t\timageAnimation: !this.state.imageAnimation\n\t\t})\n\t}\n\n\tpublic renderChoice = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase ActionsSections.About:\n\t\t\t\treturn this.renderAbout();\n\t\t\tcase ActionsSections.More:\n\t\t\t\treturn this.renderMore();\n\t\t\tcase ActionsSections.Ambushes:\n\t\t\t\treturn this.renderAmbushes();\n\t\t\tcase ActionsSections.LoS:\n\t\t\t\treturn this.renderLoS();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: ActionsSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n\t\t\t<Tabs getContent={this.renderChoice} \n\t\t\t\tisActive={this.isActive} \n\t\t\t\tsections={ActionsSections} \n\t\t\t\ttitle=\"Actions:\" \n\t\t\t\tswitchContent={this.setSection}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default FNFFActions;\n","import React, { Component } from 'react';\nimport styles from './FNFFArmor.module.css';\nimport pictureAnimations from '../StyleModules/Pictures.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum ArmorSections {\n\tSP = \"Stopping Power\",\n\tHardSoft = \"Hard/Soft\",\n    Layering = \"Layering\",\n    Piercing = \"Piercing\",\n    Cover = \"Cover\"\n}\n\ninterface FNFFArmorState {\n    section: ArmorSections;\n}\n\nclass FNFFArmor extends Component<{}, FNFFArmorState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: ArmorSections.SP\n        }\n\t}\n\n\tpublic setSection = (section: ArmorSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\t\n\tpublic renderSP = () => {\n\t\treturn (\n\t\t\t<div>\n                <p>Armor is what stops targets from taking the damage you just located.</p>\n                <p>Stopping power (SP) refers to the ability of armor to stop damage. Each type of armor has it's own Stopping Power.</p>\n                <p>When the armor is struck by a round, the armor's SP is subtracted from the total amount of damage done by the hit. \n                    The remaining damage is then applied to the target area. If the damage done is less than the SP of the armor, no damage is done.\n                </p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <h4>Example:</h4>\n                    <p>Ripperjack is wearing a Kevlar jacket with an SP of 18.</p>\n                    <p>A 5.56 round strikes him in the chest, causing 14 points of damage. The armor's higher SP thwarts the attack.</p>\n                    <p>The next shot does 22 points of damage. The armor reduces this by 18 points.</p>\n                    <p>Only 4 points get through to cause Ripperjack harm.</p>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderHardSoft = () => {\n\t\treturn (\n\t\t\t<div className={styles.TwoColumnSplit}>\n                <div>\n                    <p>Body armors are divided up by whether or not the majority of their protection is based on rigid metals/ceramics/composites, or on softer, more flexible ballistic fabrics.</p>\n                    <p>This is done for layering purposes and for some weapon damage effects.</p>\n                    <p>The table is arranged with heaviest protection at the top, lightest at bottom.</p>\n                    <p>Remember that there are more armors in the Chrome books 1-4. These are only from the core rulebook.</p>\n                </div>\n            \n                <table className={styles.ArmorTable}>\n                    <tr>\n                        <th>Hard armor:</th>\n                        <th>Soft armor:</th>\n                    </tr>\n                    <tr>\n                        <td>Metal Gear</td>\n                        <td>Heavy Armor jacket </td>\n                    </tr>\n                    <tr>\n                        <td>Police riot armor</td>\n                        <td>Med. Armor jacket </td>\n                    </tr>\n                    <tr>\n                        <td>Door Gunner’s vest</td>\n                        <td>Police patrol armor </td>\n                    </tr>\n                    <tr>\n                        <td>Steel helmet</td>\n                        <td>M-78 RPA jacket </td>\n                    </tr>\n                    <tr>\n                        <td>Flak vest/pants</td>\n                        <td>Light Armor jacket </td>\n                    </tr>\n                    <tr>\n                        <td>Ballistic Nylon helmet</td>\n                        <td>Kevlar T-shirt/vest </td>\n                    </tr>\n                    <tr>\n                        <td>M-78 RPA heavy vest </td>\n                        <td>M-78 RPA T-shirt </td>\n                    </tr>\n                    <tr>\n                        <td>Corp Mil body armor</td>\n                        <td>Heavy Leather </td>\n                    </tr>\n                    <tr>\n                        <td>C-Ballistic Light Mesh™</td>\n                        <td>SkinTight™ armor padding</td>\n                    </tr>\n                </table>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderLayering = () => {\n\t\treturn (\n\t\t\t<div>\n                <p>\"What a concept\", you think, shrugging into a bulletproof T-shirt, bulletproof vest and a Kevlar armor jacket. \n                    Theoretically, one should be able to layer protection upon itself until he becomes invulnerable.\n                </p>\n                <p>Wrongo.</p>\n                <p>First of all, let's look at reality. If the average cop could stack layers of armor on himself before tackling a domestic disturbance call, you can bet he'd do it. B\n                    ut he doesn't, because it just isn't practical. Here's why.\n                </p>\n                <p>When you layer flack jackets, you aren't invulnerable; you're just immobile. While modern armor isn't as heavy as old fashioned armor plate, it's very encumbering from the movement angle.</p>\n                <p>Straps, buckles, padding and stiff plastic add up to restrict arm movement, chafe the torso, and weigh down the legs. </p>\n                <p>Pillsbury-doughboy padded arms don't lift guns very well, and well stuffed legs aren't much for bending, climbing and running. For this reason, every armor type in FNFF has an encumberance value (EV).</p>\n                <p>When wearing body armor, add up the total of EV's (listed in the Armor Table), and subtract this from your character's REFLEX stat.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <p>REFLEX IN BODY ARMOR = REFLEX - TOTAL ARMOR EVS</p>\n                </div>\n                <p>In addition to Encumberance Values, only a <b>maximum of 3 layers of Armor</b> can be worn at any one time. No more than <b>one of these layers can be Hard Armor</b> (see Hard/Soft Armors Table). The 2nd layer has an extra EV penalty of -1; the 3rd layer, an additional penalty of -2.</p>\n                <p>Subdermal Armor and Bodyplating cyberware options are considered to be armor layers; Skinweave is considered a layer, but receives no penalty.</p>\n                <p>When layering armor, or wearing armor behind an obstacle or cover, subtract the smaller SP from the larger one. Find the difference on the table and read across to the other column. This is the bonus number you add to the larger SP to determine overall protection from the armor/ armor, or armor/cover combination. </p>\n                <p>If you have three or more layers of protection, calculate in pairs from the inside out. (example: For armors A, B, C, you compare A and B; determine the bonus number, and then compare the new strength of the larger of the pair to armor C.)</p>\n\t\t\t</div>\n\t\t)\n    }\n    \n    public renderPiercing = () => {\n        return (\n            <div>\n                <h2>Armor piercing:</h2>\n                <p>There's another reason why armor isn't the universal cure for flying lead, and it's called Armor Piercing (AP) rounds. These are bullets designed to deliver their full impact to a single point, instead of mushrooming out like a normal bullet. </p>\n                <p>They don't cause as much damage as a standard lead or hollow point round (1/2 norma! damage), but they cut through armor like a hot knife through cheese. As a result, whenever AP rounds are encountered, armor will have one half it's total SP value.</p>\n                <p>For example, say a 5.56 AP round causes 30 points of damage. It hits SP 10 armor, which reduces it by 5 (10/2=5).</p>\n                <p>The remaining 25 points are further reduced to 12 (25/2=12.5, rounded downto 12), based on an AP round's lower damage capacity.</p>\n                <p>The same is true of knives, swords and other edged weapons. Note that armors marked with a check (✓) on the Armor Table are at half SP effectiveness against edged weapons.</p>\n                <p>The smart solution in a combat situation is to rely on the lightest armor you think you can get away with unless you're planning to take on a stationary position or go up against very heavy firepower.</p>\n                <h2>Staged Penetration:</h2>\n                <p>Armor doesn't just keep absorbing damage indefinitely. One option is to use the concept of Staged Penetration.</p>\n                <p>Each time the armor is struck by a pentrating attack (i.e., an attack that actually exceeds the armor's SP), it's SP is reduced by 1 point. When the SP reaches 0, the armor will no longer stop damage.</p>\n            </div>\n        )\n    }\n\n\tpublic renderCover = () => {\n\t\treturn (\n\t\t\t<div className={styles.TwoColumnSplit}>\n                <div>\n                    <p>You don't have to lug around an armor jacket with you—often the best armor is what you can find around you.</p>\n                    <p>Cover allows you to move from place to place, letting something else soak up the gunfire.</p>\n                    <div className={styles.CoverImageWrapper}>\n                        <img className={styles.CoverImage + \" \" + pictureAnimations.InterlacedPicture} alt=\"Covering yourself up prevents bullets to the face.\" src=\"assets/Visuals/FNFFCover.png\" />\n                    </div>\n                </div>\n                <table className={styles.ArmorTable}>\n                    <tr>\n                        <th>Common Cover</th>\n                        <th>SPs</th>\n                    </tr>\n                    <tr>\n                        <td>Sheetrock Wall </td>\n                        <td>5</td>\n                    </tr>\n                    <tr>\n                        <td>Stone Wall </td>\n                        <td>30</td>\n\n                    </tr> \n                    <tr>\n                        <td>Large Tree, Phone pole </td>\n                        <td>30</td>\n                    </tr> \n                    <tr>\n                        <td>Brick wall </td>\n                        <td>25</td>\n                    </tr> \n                    <tr>\n                        <td>Concrete Block Wall </td>\n                        <td>10</td>\n                    </tr> \n                    <tr>\n                        <td>Wood door </td>\n                        <td>5</td>\n                    </tr> \n                    <tr>\n                        <td>Heavy Wood Door </td>\n                        <td>15</td>\n                    </tr> \n                    <tr>\n                        <td>Steel Door </td>\n                        <td>20</td>\n                    </tr> \n                    <tr>\n                        <td>Concrete Ultility Pole </td>\n                        <td>35</td>\n                    </tr>\n                    <tr>\n                        <td>Data Term™ </td>\n                        <td>25</td>\n                    </tr>\n                    <tr>\n                        <td>Car body, door </td>\n                        <td>10</td>\n                    </tr>\n                    <tr>\n                        <td>Armored Car body </td>\n                        <td>40</td>\n                    </tr>\n                    <tr>\n                        <td>AV-4 Body </td>\n                        <td>40</td>\n                    </tr>\n                    <tr>\n                        <td>Engine block</td>\n                        <td>35</td>\n                    </tr>\n                    <tr>\n                        <td>Mailbox</td>\n                        <td>25</td>\n                    </tr>\n                    <tr>\n                        <td>Hydrant </td>\n                        <td>35</td>\n                    </tr>\n                    <tr>\n                        <td>Curb</td>\n                        <td>25</td>\n                    </tr>\n                </table>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderChoice = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase ArmorSections.SP:\n\t\t\t\treturn this.renderSP();\n\t\t\tcase ArmorSections.HardSoft:\n\t\t\t\treturn this.renderHardSoft();\n\t\t\tcase ArmorSections.Layering:\n                return this.renderLayering();\n            case ArmorSections.Piercing:\n                return this.renderPiercing();\n\t\t\tcase ArmorSections.Cover:\n\t\t\t\treturn this.renderCover();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: ArmorSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\t\treturn (\n            <Tabs getContent={this.renderChoice} \n                isActive={this.isActive} \n                sections={ArmorSections} \n                title=\"Armor:\" \n                switchContent={this.setSection}\n            />\n\t\t);\n\t}\n}\n\nexport default FNFFArmor;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './FNFFIntroduction.module.css';\n\nclass FNFFDamage extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFIntroduction}>\n\t\t\t\t<div className={styles.FNFFIntroductionText}>\n\t\t\t\t\t<h1>Damage:</h1>\n                    <p>Damage in combat is determined by rolling groups of six-sided dice.</p> \n                    <p>If a rule says, “roll 2D6\", for example, you would roll two six sided dice, total the results, and apply the total to the target you were attacking.</p>\n                    <p>If the rule said “roll 2D6+1\", you would roll as above, then add 1 to the total.</p> \n                    <h1>Hit Location</h1>\n                    <img className={styles.FNFFHitLocationMobile} alt=\"Friday Night Firefight\" src=\"assets/Visuals/HitLocations.png\"/>\n                    <p>The first step in applying damage Is to figure out where to apply it.</p>\n                    <p>Most combat attacks are just barely aimed; you're looking for an opening, your opponent slips up, and you take it.</p>\n                    <p>This means that unless you attempt to aim your shot at a specific location (and take the -4 penalty for this), you will have to determine where you hit on a random basis.</p>\n                    <p>The Location section of your Hardcopy Form is designed for this; it lists all body areas with a value from 1 to 10 written underneath.</p>\n                    <p>When your character is hit, roll 1D10 and compare the chart number to the roll to determine where he has been hit.</p>\n                    <div className={styles.ExampleBorder}>\n                        <p>Use some common sense with this rule; for example, if a character is standing behind a low wall, a roll of 7-8 (R.Leg) is pretty silly.</p>\n                        <p>Ignore it and re-roll.</p>\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.FNFFIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Friday Night Firefight\" src=\"assets/Visuals/HitLocations.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFDamage;\n","import React, { Component } from 'react';\nimport styles from './FNFFWounds.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum WoundsSections {\n\tEffects = \"Effects\",\n\tSpecial = \"Special cases\",\n\tStuns = \"Stun/Shock\"\n}\n\ninterface FNFFWoundsState {\n    section: WoundsSections;\n}\n\nclass FNFFWounds extends Component<{}, FNFFWoundsState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: WoundsSections.Effects\n        }\n\t}\n\n\tpublic setSection = (section: WoundsSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\t\n\tpublic renderWoundEffects = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Okay, so the Armor didn't stop all of the damage, and your Body Type Modifierwasn't enough to shrug off the rest. It's time to take a Wound.</p>\n                <p>The Wound section of the Hardcopy Form is used to record damage. For each point of damage taken, check off one box, moving from left to right, top to bottom. \n                    The top line of this section (marked LIGHT, SERIOUs, CRITICAL, MORTAL, etc.) tells the overall state of the character’s health.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n                <h3>Wound Effects:</h3>\n                <ul>\n                    <li>At a LIGHT wound level, a character suffers no penalties to his activities. He just hurts a lot (\"It's only a flesh wound...\").</li>\n                    <li>At a SERIOUS wound level, the character will be at -2 to his REF stat for all actions. He's hurting, bleeding, and definitely hampered.</li>\n                    <li>At a CRITICAL wound level, the character's REF, INT and CL stats are automatically reduced by half (round up). The character is holding his guts in with one hand and doing his damndest to stay in the battle.</li>\n                    <li>If MORTALLY wounded, the character's REF, INT and CL stats are reduced to 1/3rd normal (divide by 3, rounding up). Most characters are already out of the action by now, and are quietly going about the business of expiring. Messily.</li>\n                </ul>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderSpecial = () => {\n\t\treturn (\n            <div className={styles.SpecialCasesSplit}>\n                <div>\n                    <p>Being hit isn't always something you can shrug off. Friday Night Firefight is extremely deadly, often due to the rules below:</p>\n                    <h2>Limb Loss:</h2>\n                    <p>If a character takes more than eight points of damage to a limb area in any one attack, the area is severed or crushed beyond recognition. The character must make an immediate Death Save at Mortal 0.</p>\n                    <p>A head wound of this type will kill automatically.</p>\n                    <h2>Head Hits:</h2>\n                    <p>A head hit always doubles damage.</p>\n                </div>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <h3>Think about it:</h3>\n                    <p>A regular Militech Arms Avenger (9mm hand pistol) does 2D6+1 damage.</p>\n                    <p>If your character takes more than 8 points to the head she dies immidiately.</p>\n                    <h4>And a headshot is double damage.</h4>\n                    <p>If the character hits and does a damage roll where <u>both</u> D6 land 1, you might survive. Otherwise you need some serious armor or be turned into spare parts.</p>\n                    <p>Walking around with a \"bulletproof\" box on your head isn't exactly stylish however, and can instead be a typical sign of someone looking for trouble to the inhabitants of Night City.</p>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderStuns = () => {\n\t\treturn (\n\t\t\t<div className={styles.SavesSplit}>\n                <div>\n                    <p>Every time a character takes damage, he must make a save against the effects of pain, shock, fear and blood loss. \n                    This is what you see in most Hollywood gunfights when the bad guy gets hit—staggering, falling back and so on, \n                    all caused by pain and shock (see the sidebar for a general tirade about the fiction of knockback).\n                    </p>\n                    <p>The Stun Shock Save is a serious thing, because it can put an opponent out of the picture faster than the actual damage from the wound. Police officers have actually died from the shock of a minor bullet wound in the foot (but we won't do that to your character).</p>\n                    <p>Other people have taken as many as thirty or forty gunshots and managed to keep moving for up to ten minutes before their minds got the message their bodies were telling them (\"Hey Bob, you're dead!\").</p>\n                    <p>The Stun Save is equal to your character's Body Type value, minus a penalty based on his current Wound State.</p>\n                    <p>A failed roll means the character is out of combat.</p>\n                </div>\n                <div className={styles.ModifierTableExtend}>\n                    <h3>Stun/Shock Save Modifiers:</h3>\n                    <table>\n                        <tr>\n                            <th>Wound State</th>\n                            <th>Penalty</th>\n                        </tr>\n                        <tr>\n                            <td>Light</td>\n                            <td>-0</td>\n                        </tr>\n                        <tr>\n                            <td>Serious</td>\n                            <td>-1</td>\n                        </tr>\n                        <tr>\n                            <td>Critical</td>\n                            <td>-2</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal</td>\n                            <td>-3</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal 1</td>\n                            <td>-4</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal 2</td>\n                            <td>-5</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal 3</td>\n                            <td>-6</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal 4</td>\n                            <td>-7</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal 5</td>\n                            <td>-8</td>\n                        </tr>\n                        <tr>\n                            <td>Mortal 6</td>\n                            <td>-9</td>\n                        </tr>\n                    </table>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderChoice = () => {\n\t\tswitch(this.state.section) {\n\t\t\tcase WoundsSections.Effects:\n\t\t\t\treturn this.renderWoundEffects();\n\t\t\tcase WoundsSections.Special:\n\t\t\t\treturn this.renderSpecial();\n\t\t\tcase WoundsSections.Stuns:\n\t\t\t\treturn this.renderStuns();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: WoundsSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n            <Tabs getContent={this.renderChoice} \n                isActive={this.isActive} \n                sections={WoundsSections} \n                title=\"Wounds:\" \n                switchContent={this.setSection}\n            />\n\t\t);\n\t}\n}\n\nexport default FNFFWounds;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './FNFFIntroduction.module.css';\n\nclass FNFFBodyType extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFIntroduction}>\n\t\t\t\t<div className={styles.FNFFIntroductionText}>\n\t\t\t\t\t<h1>The Body Type Modifier:</h1>\n                    <p>The next step after Armor is to apply your character's Body Type Modifier to the damage. </p>\n                    <p>This is a special bonus which reduces the effects of damage, reflecting the stamina and general toughness of the character. </p>\n                    <p>Each time your character takes damage, subtract your Body Type Modifier from the total amount of damage before applying it to your character.\n                    </p>\n                    <table className={styles.BTTable}>\n                        <tr>\n                            <th>Body Type:</th>\n                            <th>Modifier:</th>\n                        </tr>\n                        <tr>\n                            <td>Very Weak</td>\n                            <td>-0</td>\n                        </tr>\n                        <tr>\n                            <td>Weak</td>\n                            <td>-1</td>\n                        </tr>\n                        <tr>\n                            <td>Average</td>\n                            <td>-2</td>\n                        </tr>\n                        <tr>\n                            <td>Strong</td>\n                            <td>-3</td>\n                        </tr>\n                        <tr>\n                            <td>Very Strong</td>\n                            <td>-4</td>\n                        </tr>\n                        <tr>\n                            <td>Superhuman*</td>\n                            <td>-5</td>\n                        </tr>\n                    </table>\n                    <p>*Superhuman is only available with cybernetics.</p>\n                    <p>For example, say you took ten points of damage. If you were a Very Weak Body Type, you would take the full ten. But with a Very Strong Body Type, you'd only take (10-4=6) six points of damage.</p>\n                    <div className={styles.ExampleBorder}>\n                        <span>A Body Type Modifier may never reduce damage to less than one—in these cases, the character will automatically take 1 point of damage.</span>\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.FNFFIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"BodyType\" src=\"assets/Visuals/BodyType.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFBodyType;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './FNFFAttacks.module.css';\nimport FNFFAttacksRanged from './FNFFAttacksRanged';\nimport FNFFAttacksAuto from './FNFFAttacksAuto';\nimport FNFFAttacksLaser from './FNFFAttacksLaser';\nimport FNFFAttacksAoE from './FNFFAttacksAoE';\nimport FNFFAttacksMartialArts from './FNFFAttacksMartialArts';\nimport FNFFAttacksMelee from './FNFFAttacksMelee';\n\nenum AttackMethods {\n\tRanged = \"Ranged Weapons\",\n\tAutomatic = \"Automatic Weapons\",\n\tAoE = \"Area of Effect Weapons\",\n\tLaser = \"Laser weapons\",\n\tMelee = \"Melee Weapons\",\n\tMartial = \"Martial Arts\"\n}\n\ninterface FNFFAttacksState {\n\tcurrentSelection: AttackMethods | null;\n}\n\nclass FNFFAttacks extends Component<{}, FNFFAttacksState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentSelection: null\n\t\t}\n\t}\n\n\tpublic renderPicture = () => {\n\t\tlet url = \"\";\n\t\tswitch (this.state.currentSelection) {\n\t\t\tcase AttackMethods.Ranged:\n\t\t\t\turl = \"assets/Visuals/RangedWeapon.png\"\n\t\t\t\tbreak;\n\t\t\tcase AttackMethods.Martial:\n\t\t\t\turl = \"assets/Visuals/MartialArts.png\"\n\t\t\t\tbreak;\n\t\t\tcase AttackMethods.Melee:\n\t\t\t\turl = \"assets/Visuals/MeleeWeapons.png\"\n\t\t\t\tbreak;\n\t\t\tcase AttackMethods.Automatic:\n\t\t\t\turl = \"assets/Visuals/AutomaticWeapons.png\"\n\t\t\t\tbreak;\n\t\t\tcase AttackMethods.AoE:\n\t\t\t\turl = \"assets/Visuals/AoEWeapons.png\"\n\t\t\t\tbreak;\n\t\t\tcase AttackMethods.Laser:\n\t\t\t\turl = \"assets/Visuals/LaserWeapon.png\"\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\turl = \"assets/Visuals/FNFF.png\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacksPicture}>\n\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Friday Night Firefight\" src={url}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic setSection = (section: AttackMethods) => {\n\t\tthis.setState({\n\t\t\tcurrentSelection: section\n\t\t});\n\t}\n\n\tpublic renderBackButton = () => {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttackMenu + \" \" + styles.FNFFAttackSmallerMenu}>\n\t\t\t\t<button onClick={() => this.setState({ currentSelection: null })}>> [ RETURN ]</button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderSelection = () => {\n\t\tswitch (this.state.currentSelection) {\n\t\t\tcase AttackMethods.Ranged:\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderBackButton()}\n\t\t\t\t\t\t<FNFFAttacksRanged />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\tcase AttackMethods.Melee:\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderBackButton()}\n\t\t\t\t\t\t<FNFFAttacksMelee />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\tcase AttackMethods.Automatic:\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderBackButton()}\n\t\t\t\t\t\t<FNFFAttacksAuto />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\tcase AttackMethods.Martial:\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderBackButton()}\n\t\t\t\t\t\t<FNFFAttacksMartialArts />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\tcase AttackMethods.Laser:\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderBackButton()}\n\t\t\t\t\t\t<FNFFAttacksLaser />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\tcase AttackMethods.AoE:\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderBackButton()}\n\t\t\t\t\t\t<FNFFAttacksAoE />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacksInformation}>\n\t\t\t\t<h1>Making Attacks:</h1>\n\t\t\t\t<img className={styles.AttacksMobilePicture + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Friday Night Firefight\" src=\"assets/Visuals/FNFF.png\"/>\n\t\t\t\t<p>This section covers the basics of how to make attacks:</p>\n\t\t\t\t<hr/>\n\t\t\t\t<div className={ styles.FNFFAttackMenu }>\n\t\t\t\t\t{Object.values(AttackMethods).map((attack: AttackMethods) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button onClick={() => this.setSection(attack)}>{attack.toUpperCase()}</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<hr/>\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacksSplit}>\n\t\t\t\t{this.renderSelection()}\n\t\t\t\t{this.renderPicture()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacks;","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './FNFFIntroduction.module.css';\n\nclass FNFFDeathSaves extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFIntroduction}>\n\t\t\t\t<div className={styles.FNFFIntroductionText}>\n\t\t\t\t\t<h1>Death Saves:</h1>\n\t\t\t\t\t<img className={styles.FNFFIntroductionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Friday Night Firefight\" src=\"assets/Visuals/FNFFIntroduction.png\"/>\n                    <p>Unless you have taken a Mortal Wound, your character is in no danger of dying; he only needs to make his initial Stun save to remain conscious. But if the wound is a MORTAL one, he has a chance of dying.</p>\n                    <p>Determining whether he survives requires that a Death Save be made, with a new save required every turn that the character remains untreated.</p>\n                    <p>Like a Stun Save, a Death Save requires that you roll a value on 1D10 equal to or lower than your character’s Body Type score, \n                        subtracting the level of severity for the wound from your base chance to save. Mortal Wounds are rated from O to 8.\n                    </p>\n                    <div className={styles.ExampleBorder}>\n                        <span>Hargan is Very Strong and takes a Mortal 4 wound. He must roll lower than (10-4)=6 to stay alive.</span>\n                    </div>\n                    <p>Each turn, you must make another Death Save to see if you survive to the next turn. On a successful roll, you make it; on a failed roll, you will die at the end of the turn in which the roll was made.</p>\n                    <p>Sooner or later, you'll fail a roll and die. The only way out is</p>\n                    <h2>Stabilization:</h2>\n                    <p>Stabilization means the patient is no longer losing blood and that his major damage has been contained through use of drugs, battlefield surgery and/or wound dressing.</p>\n                    <p>A stabilized character will no longer be required to make Death Saves each turn. Anyone (except the patient himself) can attempt to stabilize a mortally wounded character; it just works better if the physician has had some medical training. A lot better.</p>\n                    <p>A successful stabilization is made by adding your TECH stat, any Medical Skill and one D10 for a result equal to or higher than the total number of damage points the patient has taken. </p>\n                    <div className={styles.ExampleBorder}>\n                        <span>Ripperjack has taken 20 points of damage, placing him in a Mortal 1 Wound State. To stabilize him will require a roll of 20 or greater. Once stabilized, the character is no longer in danger of dying unless another wound is taken. At this point, the whole messy business begins again...</span>\n                    </div>\n                    <p>The chances of a successful stabilization roll can be increased by the following modifiers, added to your die roll.</p>\n                    <table>\n                        <tr>\n                            <th>Advantage:</th>\n                            <th>Add to die roll:</th>\n                        </tr>\n                        <tr>\n                            <td>Full Hospital and Surgery</td>\n                            <td>+5</td>\n                        </tr>\n                        <tr>\n                            <td>Trauma Team Ambulance</td>\n                            <td>+3</td>\n                        </tr>\n                        <tr>\n                            <td>Life suspension tank</td>\n                            <td>+3</td>\n                        </tr>\n                    </table>\n                    <p>Assuming you make your stabilization rolls, you're going to survive to fight again. If you fail, no problem, that's why we have Body banks. </p>\n                    <p>Either way, to learn more about healing or spare parts brokering, check out the Trauma Team section.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.FNFFIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Friday Night Firefight\" src=\"assets/Visuals/FNFFIntroduction.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFDeathSaves;\n","\nimport React, { Component } from 'react';\nimport styles from './FNFFAttacks.module.css';\n\nclass FNFFAttacksRanged extends Component<{}, {}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacks}>\n\t\t\t\t<h1>Ranged attacks:</h1>\n\t\t\t\t<p>Ranged weapons are anything that is shot or thrown over a distance at the target.</p>\n\t\t\t\t<p>To make a ranged weapon attack (guns, bows, thrown objects, etc.) you must roll a combination of your:</p>\n\t\t\t\t<div className={styles.ExampleBorder}>\n\t\t\t\t\t<span>REF STAT + WEAPON SKILL + 1D10</span>\n\t\t\t\t</div>\n\t\t\t\t<p>equal to or greater than a specific hit number. The hit number is determined by the range between you and your target.</p>\n\t\t\t\t<div className={styles.SplitIntoTwo}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Range definitions:</h2>\n\t\t\t\t\t\t<ul className={styles.liPadding}>\n\t\t\t\t\t\t\t<li><b>Point blank:</b> The weapon is very close to or in actual physical contact with the target. It will almost always hit, doing maximum damage.</li>\n\t\t\t\t\t\t\t<li><b>Close:</b> The weapon is attacking at one quarter of the listed range.</li>\n\t\t\t\t\t\t\t<li><b>Medium:</b> The weapon is attacking at one half of the listed range for its type.</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.ExampleBorder}>\n\t\t\t\t\t\t<h3>Range Hit Numbers</h3>\n\t\t\t\t\t\t<p>Point blank .................................. 10</p>\n\t\t\t\t\t\t<p>Close ................................................ 15</p>\n\t\t\t\t\t\t<p>Medium ......................................... 20</p>\n\t\t\t\t\t\t<p>Long ................................................ 25</p>\n\t\t\t\t\t\t<p>Extreme ....................................... 30</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ul className={styles.liPadding}>\n\t\t\t\t\t<li><b>Long:</b>  The weapon is attacking at the listed range for its type.</li>\n\t\t\t\t\t<li><b>Extreme:</b> The weapon is attacking at twice the listed range for its type.</li>\n\t\t\t\t</ul>\n\t\t\t\t<h2>Modifiers:</h2>\n\t\t\t\t<p>When making your roll, you must add any and all modifiers that apply to the combat situation to your final Attack Roll. There are modifiers for Target, Aiming, Weapon Type, Type of Firing, Position and Movement, all listed on pg. 99.</p>\n\n\t\t\t\t<h2>Aiming:</h2>\n\t\t\t\t<p>One way to improve your chance to hit is to aim.</p>\n\t\t\t\t<p>Each turn of aiming adds +1 to your Attack, up to three rounds. Aiming assumes steady position, no movement, and a clear chance to track your target.</p>\n\n\t\t\t\t<h2>Critical success:</h2>\n\t\t\t\t<p>On a natural roll of 10, you have had a critical success. Roll an additional 1D10 and add it to your original roll.</p>\n\n\t\t\t\t<h2>Fumbles:</h2>\n\t\t\t\t<p>On a natural die roll of 1, you have fumbled. You must roll an additional 1D10 and check the result against the Fumble Table to see what happens. </p>\n\t\t\t\t<p>Fumbles can encompass a wide variety of effects. Most weapon fumbles include jamming or misfires.</p>\n\n\t\t\t\t<div className={styles.SplitIntoTwo}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Reliability:</h2>\n\t\t\t\t\t\t<p>Automatic weapons have the highest chance of fumbling, and will jam based on the Reliability of the weapon:</p>\n\t\t\t\t\t\t<p>When a fumbile is rolled while using an automatic weapon, ignore the table and roll a value on 1D10 higher \n\t\t\t\t\t\t\tthan the Reliability value for the weapon.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>In total it takes 1D6 turns to unjam the weapon.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Reliability table:</h3>\n\t\t\t\t\t\t<table className={styles.ATable}>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Weapon:</th>\n\t\t\t\t\t\t\t\t<th>Jams:</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<tr>Very Reliable</tr>\n\t\t\t\t\t\t\t\t<tr>Standard</tr>\n\t\t\t\t\t\t\t\t<tr>Unreliable</tr>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t\t<tr>3 or lower.</tr>\n\t\t\t\t\t\t\t\t<tr>5 or lower.</tr>\n\t\t\t\t\t\t\t\t<tr>8 or lower.</tr>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacksRanged;","\nimport React, { Component } from 'react';\nimport styles from './FNFFAttacks.module.css';\n\nclass FNFFAttacksAuto extends Component<{}, {}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacks}>\n\t\t\t\t<h1>Automatic Weapon attacks:</h1>\n\t\t\t\t<p>There are three ways to use automatic weapons.</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>The three round burst is used to put multiple shots on a single target at any range.</li>\n\t\t\t\t\t<li>Full Auto is used to deliver a lot of builets at close range to one or more targets.</li>\n\t\t\t\t\t<li> Suppressive fire is used to force an opponent to keep his head down or risk taking a slug.</li>\n\t\t\t\t</ul>\n\t\t\t\t<p>Each form has its own advantages and disadvantages in combat, and the smart street warrior knows when to use the right technique for the right job.</p>\n\t\t\t\t<h2>Three round burst:</h2>\n\t\t\t\t<p>The three round burst is a setting used on most automatic weapons to conserve ammunition and improve accuracy.</p>\n\t\t\t\t<p>The three round burst gives you an automatic +3 to hit advantage at certain ranges. The attack is made as one action. If successful, roll 1D6/2 to see how many rounds actually hit the target. This technique may only be used against single targets.</p>\n\t\t\t\t<div className={styles.ExampleBorder}>\n\t\t\t\t\t<span>3 ROUND BURST = +3 HIT, CLOSE / MEDIUM ONLY!</span>\n\t\t\t\t</div>\n\n\t\t\t\t<h2>Full auto:</h2>\n\t\t\t\t<div className={styles.SplitIntoTwo}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>This attack is best used to cover a wide range of targets or to make sure a single target is dead, dead, dead.</p>\n\t\t\t\t\t\t<p>A weapon on full auto is a bucking bronco; hard to hold on a target more than a few meters away.</p>\n\t\t\t\t\t\t<p>Using a scope or taking aim is also impossible. Therefore, range is critical in the full auto technique.</p>\n\t\t\t\t\t\t<p>The full auto option is based on the rate of fire (ROF) of the weapon. If attacking more than one target, you must divide the ROF of the weapon by the total number of targets (round down), then roll for each target individually.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.ExampleBorder + \" \" + styles.OverrideMaxContent}>\n\t\t\t\t\t\t<h3>Full auto rules:</h3>\n\t\t\t\t\t\t<p>At close range:</p>\n\t\t\t\t\t\t<p>For every 10 rounds fired at Close range, add 1 to your Attack Total.</p>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<p>At Medium, Long and Extreme Ranges:</p>\n\t\t\t\t\t\t<p>For every 10 rounds fired at Medium, Long and Extreme ranges, subtract 1 from your Attack Total.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p>For every point of success over the required to Hit roll, one round hits the target, up to the maximum ROF for the weapon.</p>\n\t\t\t\t<div className={styles.ExampleBorder}>\n\t\t\t\t\t<span>NUMBER OF HITS = # POINTS > THAN TO HIT NUMBER</span>\n\t\t\t\t</div>\n\n\t\t\t\t<h2>Suppressive fire:</h2>\n\t\t\t\t<p>Suppressive fire is used to cover an area (called a fire zone) with bullets, making the area hazardous to pass through. </p>\n\t\t\t\t<p>All targets entering or crossing the fire zone during this attack must make a “save” against taking a bullet by rolling their \n\t\t\t\t\tAthletics Skill + REF + 1D10 and beating a save number. A failed save means the target takes 1D6 rounds, each randomly focated.\n\t\t\t\t</p>\n\t\t\t\t<p>This save number is determined by dividing the total number of bullets fired by the width of the fire zone.</p>\n\t\t\t\t<p>Example: 64 rounds into a 2 meter area would require a save of 32 or higher. 64 rounds into a 5 meter area would require a save of 12 or greater.</p>\n\t\t\t\t<div className={styles.ExampleBorder}>\n\t\t\t\t\t<span>SAVE = NUMBER OF ROUNDS DIVIDED BY THE WIDTH OF THE FIRE ZONE IN METERS</span>\n\t\t\t\t</div>\n\t\t\t\t<p>You may overlap the fire zones of more than one weapon, dividing the total number of shots to determine the save number.</p>\n\t\t\t\t<p>For example, two Uzis with an ROF of 32 would place 64 bullets into the fire zone.</p>\n\t\t\t\t<p>Two rules are immediately apparent with suppressive fire. First, it's only useful when you can fire a LOT of rounds into a small space. This means teams should coordinate their actions and fire at the same time, placing the maximum number of rounds into thefire zone.</p>\n\t\t\t\t<p>Also, the fire zone should be a tight as possible (the minimum width of a fire zone is two meters).</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacksAuto;","import React, { Component } from 'react';\nimport styles from './FNFFAttacks.module.css';\n\nclass FNFFAttacksLaser extends Component<{}, {}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacks}>\n\t\t\t\t<h1>Laser attacks:</h1>\n\t\t\t\t<p>Beam Weapons include lasers and microwave weapons.</p>\n\t\t\t\t<p>Powerful beam weapons are extremely rare in the Cyberpunk universe (1 in 10 chance of availability, and even then only from major Corporations and/or governments).</p>\n\t\t\t\t<h2>Lasers</h2>\n\t\t\t\t<p>Lasers have a rechargeable powerpack holding a total of 10 six sided dice of damage.</p>\n\t\t\t\t<p>You can use as little as 1D6 or as much as 5D6 in a single shot, until you have used all 10 dice. Lasers recharge from wall current at a rate of 1D6 per hour.</p>\n\t\t\t\t<p>Example: Ripperjack has recently captured a laser from an Arasaka guard. He has 10D6 to work with; he dials the power grudge up to 5D6 and fires. At this rate, he'll only have one more shot before it's recharge time.</p>\n\t\t\t\t<h2>Microwavers:</h2>\n\t\t\t\t<p>Microwavers are fired like any other ranged weapon, delivering 1D6 in burn damage.</p>\n\t\t\t\t<p>In addition, any target within 1 meter of the path of the beam must roll 1D6 on the microwaver side effects table to determine if there are electrical side effects on exposed cyberwear. Shielded cyberwear s not effected by electrical side effects.</p>\n\t\t\t\t<p>Like lasers, microwavers recharge from a wall socket, taking one hour to reach a usable charge.</p>\n\t\t\t\t<h3>Microwave side effects:</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Cyberoptics short for 1D6 turns </li>\n\t\t\t\t\t<li>Neural pulse! if character has inter face plugs, reflex boosts or other hardwiring, REF stat reduced by 1D6/2 until repaired. </li>\n\t\t\t\t\t<li>Cyberaudio shorts for 1D6 turns </li>\n\t\t\t\t\t<li>Cyberlimb malfunction: Lose all use of cyberlimb for 1D10 turns. Roll 1D6 for limb, re-rolling if no cyberlimb limb is present: \n\t\t\t\t\t\t<p>1-2 Right Arm</p>\n\t\t\t\t\t\t<p>3 Left Leg</p>\n\t\t\t\t\t\t<p>4 Right Leg</p>\n\t\t\t\t\t\t<p>5-6 Left Arm</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>Total Neural breakdown! Character reduced to twitching, epileptic fit for 1D6/3 turns.</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacksLaser;","\nimport React, { Component } from 'react';\nimport styles from './FNFFAttacks.module.css';\n\nclass FNFFAttacksAoE extends Component<{}, {}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacks}>\n\t\t\t\t<h1>Area of Effect attacks:</h1>\n\t\t\t\t<p>Area Effect weapons are fired just like any other type of ranged weapon. However, they are capable of covering more than one target at a time with a cloud of pellets, flame, explosive force or gas. </p>\n\t\t\t\t<p>Area effect weapons include shotguns, grenades and explosives, flamethrowers, missiles and rockets, mines and rocket powered grenades (RPGs).</p>\n\t\t\t\t<p>Attacks are made as with other ranged weapons, with the center of the area effect falling on the designated target, and anything within the area of effect taking damage as well. If the target is missed, the true center of the attack must be determined. </p>\n\t\t\t\t<p>When calculating where agrenade or other Area weapon has hit, roll 1D10 to determine the directrion on the Grenade Table, then roll a second D10 to see how many meters away it hit.</p>\n\t\t\t\t<h2>Shotguns:</h2>\n\t\t\t\t<div className={styles.SplitIntoTwo}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Shotguns fire a cloud of small metal pellets called a “pattern”. The width of the pattern is based on the distance between the attacker and the defender. Any target in a straight path between attacker and intended target is also considered to be in the area of effect. </p>\n\t\t\t\t\t\t<p>Note: if something is between the path of the shotgun and its intended target, the intervening spaces behind that object are considered to be exempt from the effects of fire.</p>\n\t\t\t\t\t\t<p>Any target within the pattern will take damage based on the range (damage listed on the Weapons Table on pg. 51 in the rulebook is based on maximum damage).</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Shotgun Table:</h3>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Range</th>\n\t\t\t\t\t\t\t\t\t<th>Size of Pattern</th>\n\t\t\t\t\t\t\t\t\t<th>Damage</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Close,PB</td>\n\t\t\t\t\t\t\t\t\t<td>1 meter</td>\n\t\t\t\t\t\t\t\t\t<td>4D6</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Medium</td>\n\t\t\t\t\t\t\t\t\t<td>2 meters</td>\n\t\t\t\t\t\t\t\t\t<td>3D6</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Long</td>\n\t\t\t\t\t\t\t\t\t<td>3 meters</td>\n\t\t\t\t\t\t\t\t\t<td>2D6</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p>Example: Ripperjack opens up his shotgun on two boosters at medium range (pattern width = 2m). He hits the first booster dead on. However, the second booster is within 1 meter of the first— the pattern overlaps him as well. Both take damage.</p>\n\t\t\t\t<p>Shotguns are a very effective weapon in situations where aiming isn’t critical. For instance, in six foot hallways, there would be no way for a target to escape taking wounds no matter how much his reflexes were boosted. However, shotguns are also limited to relatively short ranges and don’t do a lot of damage on the individual peliet level.</p>\n\t\t\t\t<h3>Autoshotguns:</h3>\n\t\t\t\t<p>One of the nastiest house to house weapons is the autoshotgun. In combat, you may make as many attacks as your weapon's rate of fire on Full auto. All shots must be within 1 meter of each other.</p>\n\t\t\t\t<p>Each attack has a -2 penalty for every additional shot past the first. However, when this meansyou can putfive two-meter clouds of lead all over an area, a -4 or -6 penalty is a small price to pay.</p>\n\t\t\t\t<p>Autoshotguns are slow, bulky and have lousy range, but they are hell on wheels when it comes to house to house, short range combat.</p>\n\t\t\t\t<p>Example: Ripperjack opens up with a CAWS, firing 5 shots. He takes a -8 penalty to his attack roll to do this. He targets a 5 meter hallway, spacing his shots in 1 meter intervals. The hallway becomes Hamburger Heaven.</p>\n\t\t\t\t<h3>The Armor-Piercing Effects of Shotgun Slugs:</h3>\n\t\t\t\t<p>These projectiles have normal AP ability vs. all armors.</p>\n\t\t\t\t<p>Damage that penetrates Hard armor is not halved. Damage that penetrates Soft armor is halved as normal. This represents the concussive results of mass and impact by finned/saboted slugs.</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>10ga. slugs: 5D6+3</li>\n\t\t\t\t\t<li>12ga. slugs: 4D6+2</li>\n\t\t\t\t\t<li>20ga. slugs: 3D6+1</li>\n\t\t\t\t</ul>\n\t\t\t\t<h2>Grenades:</h2>\n\t\t\t\t<p>Grenades come in fragmentation, incendiary, stun, dazzle, sonic, concusslon and gas varieties. </p>\n\t\t\t\t<p>Each type hasits own area of effect, usually between 2 to 5 meters. Grenades and explosives can be detonated using timers, radio controls, tripwires or remote detonators. </p>\n\t\t\t\t<p>All grenade types are available in hand or rifle-propelled versions, and are described in the Area Effect Weapons and Grenade Table, pg. 89 in the rulebook.</p>\n\t\t\t\t<p>Grenades may be thrown up to 10x the character's Body Type in meters (-10m for every extra kg. past the initial 1), or launched to a range of 225 meters.</p>\n\t\t\t\t<p>Look at the rulebook for further information about the different grenade variations.</p>\n\n\t\t\t\t<h2>Other AoE weapons:</h2>\n\t\t\t\t<p>There are many more descriptions of weapons in the rulebook that are not written here. Mines, flamethrowers, explosives, rocket powered grenades, missiles and so on.</p>\n\t\t\t\t<p>Please look in the rulebook for further explanations.</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacksAoE;","import React, { Component } from 'react';\nimport styles from './FNFFAttacks.module.css';\n\nclass FNFFAttacksMartialArts extends Component<{}, {}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacks}>\n\t\t\t\t<h1>Martial Arts/Brawling attacks:</h1>\n\t\t\t\t<p>Brawling and Martial Arts attacks are different from other melee attacks in that an attack can be made inanumber of ways.</p>\n\t\t\t\t<p>You could, as an attack, use:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Strike: Cause 1D6/2 + Damage Modifier. </li>\n\t\t\t\t\t<li>Kick: Cause 1D6 + Damage Modifier. </li>\n\t\t\t\t\t<li>Block/Parry: Stop or absorb damage. </li>\n\t\t\t\t\t<li>Dodge: -2 to Attacker’s hit roll. </li>\n\t\t\t\t\t<li>Disarm: On successful roll, knock or remove weapon from opponent’s hand. </li>\n\t\t\t\t\t<li>Throw: Requires a Grapple first. Opponent isknocked toground, taking 1D6 + Damage Modifier, plus making a stun roll at -2. </li>\n\t\t\t\t\t<li>Hold: A painful joint or body hold. You must Grapple your opponent first. Foe is immobilized until an escape is made. </li>\n\t\t\t\t\t<li>Escape: On successful roll, you are free of the hold and may move. </li>\n\t\t\t\t\t<li>Choke: Requires hold or grapple as the previous move. Opponent takes 1D6 damage per turn. </li>\n\t\t\t\t\t<li>Sweep/Trip: Knock opponentto ground. He is -2 to next his attack; you gain +2 to your next attack. </li>\n\t\t\t\t\t<li>Grapple: A grabbing or holding move, prerequisite to applying a throw, choke or hold as the next action.</li>\n\t\t\t\t</ul>\n\t\t\t\t<h2>Martial Arts:</h2>\n\t\t\t\t<p>Martial Arts are traditional forms of melee combat that have been developed to be deadlier than regular brawling. All martial arts techniques have key attacks— attacks which reflect the particular strengths of the technique. </p>\n\t\t\t\t<p>When a key attack is used, such as a karate kick, the character gains an +2 to +4 attack bonus (depending on the style of martial art). \n\t\t\t\t\tFor example, Karate would have the following moves:\n\t\t\t\t</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Strike: +2</li>\n\t\t\t\t\t<li>Block/Parry: +2</li>\n\t\t\t\t\t<li>Kick: +2</li>\n\t\t\t\t</ul>\n\t\t\t\t<p>A Karate Master would be able to do any other type of move, but would be better at these three.</p>\n\t\t\t\t<p>A Master of Choi Li Fut would have:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Strike: +2</li>\n\t\t\t\t\t<li>Block/Parry: +2</li>\n\t\t\t\t\t<li>Kick: +2</li>\n\t\t\t\t\t<li>Throw: +1</li>\n\t\t\t\t\t<li>Dodge: +1</li>\n\t\t\t\t</ul>\n\t\t\t\t<p>—making him far more versatile than our Karate Master.</p>\n\t\t\t\t<p>Of course, it would far more difficult to learn Choi Li Fut than Karate; this is reflected in the difficulty level of the form.</p>\n\t\t\t\t<p>The number of Improvement points normally required to increase your level of skill is multiplied by the difficulty level to show this. </p>\n\t\t\t\t<p>A full list of martial arts, difficulty levels and key attacks is on pg. 100 in the rulebook.</p>\n\t\t\t\t<h3>Damage:\t</h3>\n\t\t\t\t<p>In addition, martial arts are far more deadly than regular brawling.</p>\n\t\t\t\t<p>When using martial arts, you will gain a damage bonus equal to your current level of martial arts in addition to any strength bonuses.</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacksMartialArts;","import React, { Component } from 'react';\nimport styles from './FNFFAttacks.module.css';\n\nclass FNFFAttacksMelee extends Component<{}, {}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFAttacks}>\n\t\t\t\t<h1>Melee attacks:</h1>\n                <p>Melee attacks include clubs, knives, swords, axes, chainsaws, sledgehammers, monokatanas and monoknives, monomolecular chains, cyberbeasts, battlegloves, rippers, scratchers, martial arts weapons, hand to hand attacks and brawling.</p>\n                <p>Melee attacks differ from ranged attacks in that you are opposing a person, instead of a target. To make a melee attack, the formula is:</p>\n\t\t\t\t<div className={styles.ExampleBorder}>\n                    <span>ATTACKER REF + SKILL + 1D10 Vs DEFENDER'S REF + SKILL (referee decision) + 1D10</span>\n                </div>\n                <h2>Dodging:</h2>\n                <p>Defenders can try to dodge melee attacks by announcing their intention to dodge at the start of the turn.</p>\n                <p>This will impose a -2 attack penalty to any attacks made against themin that turn; however, any other actions the defender makes will have a corresponding -3 penalty for each successive action.</p>\n\t\t\t\t<div className={styles.ExampleBorder}>\n                    <span>DODGE = -2 TO ATTACKER ROLL, -3 TO DEFENDER'S OTHER ACTIONS.</span>\n                </div>\n                <h2>Parrying:</h2>\n                <p>Defenders may also elect to parry melee attacks by announcing their intention to parry at the start of the turn. Any attacks made during the turn must expend their damage against the parrying object first.</p>\n                <p>Swords and other bladed weapons can be used to parry without taking damage, but must make a save ( 9 or lower on 1D10 for normal weapons) to avoid breaking.</p>\n                <p>Any other actions the defender makes will have a corresponding -3 penalty foreach successive action.</p>\n                <div className={styles.ExampleBorder}>\n                    <span>PARRY = STOPS THE ATTACK AT -3 TO DEFENDER'S OTHER ACTIONS.</span>\n                </div>\n                <h2>Melee Damage:</h2>\n                <div className={styles.SplitIntoTwo}>\n                    <div>\n                        <p>When making melee attacks with weapons, the damage is listed as part of the weapons description. </p>\n                        <p>When making a melee attack, you must also add a damage modifier based on your character’s body type to any damage.</p>\n                        <h2>Monoknives, Monokatanas and slice & dice</h2>\n                        <p>These do double damage on a natural attack roll of 10. </p>\n                        <p>These weapons will always break on a fumble (a natural 1), and require a special roll to determine if they shatter when used to parry (4 or less on 1D10).</p>\n                        <p>Unless otherwise notedin the weapon’sdescription, all mono-edge weapons are at 1/3xSP vs. soft armors, 2/3xSP vs. hard armors.</p>\n                        <h2>Cyberbeasts:</h2>\n                        <p>\"Cyberbeast\" is the popular term used to describe any cybernetically controlled weapon that is stored in the body and yet has the capacity toattack onits own.</p>\n                        <p>Cyberbeasts may make one attack per turn. They have a total attack skill of 10+1D10; in all other aspects, they attack as characters would.</p>\n                    </div>\n                    <div>\n                        <h3>Melee Damage Modifiers:</h3>\n                        <table>\n                            <tr>\n                                <th>Strength</th>\n                                <th>+ To Damage</th>\n                            </tr>\n                            <tr>\n                                <td>Very Weak</td>\n                                <td>-2</td>\n                            </tr>\n                            <tr>\n                                <td>Weak</td>\n                                <td>-1</td>\n                            </tr>\n                            <tr>\n                                <td>Average</td>\n                                <td>0</td>\n                            </tr>\n                            <tr>\n                                <td>Strong</td>\n                                <td>+1</td>\n                            </tr>\n                            <tr>\n                                <td>Very Strong</td>\n                                <td>+2</td>\n                            </tr>\n                            <tr>\n                                <td>Body Type 11-12</td>\n                                <td>+4</td>\n                            </tr>\n                            <tr>\n                                <td>Body Type 13-14</td>\n                                <td>+6</td>\n                            </tr>\n                            <tr>\n                                <td>Body Type 15+</td>\n                                <td>+8</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                { /* Continuation of Cyberbeast for text break. */ }\n                <p>The most common type of cyberbeast is the cybersnake, which cause 1D6 in damage per attack.</p>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFAttacksMelee;","import React, { Component } from 'react';\nimport styles from './FridayNightFirefight.module.css';\nimport Sidebar from '../Common/Sidebar.Navigation';\nimport FNFFIntroduction from './FNFFIntroduction';\nimport FNFFTurns from './FNFFTurns';\nimport FNFFActions from './FNFFActions';\nimport FNFFDamage from './FNFFDamage';\nimport FNFFArmor from './FNFFArmor';\nimport FNFFBodyType from './FNFFBodyType';\nimport FNFFWounds from './FNFFWounds';\nimport FNFFDeathSaves from './FNFFDeathSaves';\nimport FNFFAttacks from './FNFFAttacks';\nimport FNFFVehicles from './FNFFVehicles';\n\ninterface FNFFState {\n\tselection: string | null;\n\tshowMobileMenu: boolean;\n} \n\nenum Choices {\n    Introduction = \"Introduction\",\n    Initiative = \"Initiative\",\n    Actions = \"Actions\",\n    Damage = \"Damage\",\n    Armor = \"Armor\",\n    BodyType = \"Body Type\",\n\tWounds = \"Wound Effects\",\n\tDeath = \"Death Saves\",\n    Attacking = \"Making Attacks\",\n    Vehicles = \"Vehicles\"\n}\n\nclass FridayNightFirefight extends Component<{}, FNFFState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselection: Choices.Introduction,\n\t\t\tshowMobileMenu: false\n\t\t}\n\t}\n\n\tpublic changeSelection = (newSelection: string) => {\n\t\tthis.setState({\n\t\t\tselection: newSelection,\n\t\t\tshowMobileMenu: false\n\t\t});\n\t}\n\n\tpublic getCurrentSelection = () => {\n\t\tswitch(this.state.selection) {\n\t\t\tcase Choices.Introduction:\n                return <FNFFIntroduction />;\n            case Choices.Initiative:\n\t\t\t\treturn <FNFFTurns />;\n\t\t\tcase Choices.Actions:\n\t\t\t\treturn <FNFFActions />;\n\t\t\tcase Choices.Damage:\n\t\t\t\treturn <FNFFDamage />;\n\t\t\tcase Choices.Armor:\n\t\t\t\treturn <FNFFArmor />;\n\t\t\tcase Choices.BodyType:\n\t\t\t\treturn <FNFFBodyType />;\n\t\t\tcase Choices.Wounds:\n\t\t\t\treturn <FNFFWounds />\n\t\t\tcase Choices.Death:\n\t\t\t\treturn <FNFFDeathSaves />\n\t\t\tcase Choices.Attacking:\n\t\t\t\treturn <FNFFAttacks />\n\t\t\tdefault:\n\t\t\t\treturn <FNFFVehicles />;\n\t\t}\n\t}\n\n\tpublic toggleMobileView = () => {\n\t\tthis.setState({\n\t\t\tshowMobileMenu: !this.state.showMobileMenu\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"consoleText\" onClick={this.toggleMobileView}>Friday Night Firefight:</h1>\n\t\t\t\t<div className={styles.FNFFSplit}>\n\t\t\t\t\t<Sidebar showMobile={this.state.showMobileMenu} \n\t\t\t\t\t\t\tchoices={Object.values(Choices)} \n\t\t\t\t\t\t\tclicked={this.changeSelection} \n\t\t\t\t\t\t\tpreDetermined={Choices.Introduction} \n\t\t\t\t\t\t\ttoggleMobile={this.toggleMobileView}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={styles.FNFFMain}>\n\t\t\t\t\t\t{this.getCurrentSelection()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FridayNightFirefight;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './FNFFIntroduction.module.css';\n\nclass FNFFVehicles extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.FNFFIntroduction}>\n\t\t\t\t<div className={styles.FNFFIntroductionText}>\n\t\t\t\t\t<h1>Vehicles:</h1>\n                    <p>Vehicles involve two elements. The first is control of the vehicle; the second is attacks and damage.</p>\n                    <p>Although a more realistic system is included in Solo of Fortune, this simple system will work for most cases.</p>\n                    <p>To make a control roll you must roll a combination of your</p>\n                    <div className={styles.ExampleBorder}>\n                        <span>REF + (DRIVING OR PILOTING) SKILL + 1D10 + MODIFIERS</span>\n                    </div>\n                    <p>equal to or greater than a specific control number. The control number is determined by the difficulty of the maneuver you want to perform.</p>\n                    <ul>\n                        <li>Simple (swerve, take off or land, hover, rotate) : 15 </li>\n                        <li>Difficult (tight turn, control a skid, recover from a stall, emergency stop, pull out of dive, reverse or pull away): 20 </li>\n                        <li>Very Difficult (bootlegger turn, regain control from spin): 25</li>\n                    </ul>\n                    <p>When making your roll you must add any and all modifiers that apply to the situation to your final Control Roll.</p>\n                    <p>There are modifiers for both vehicles and speed of travel located at page 113 in the rulebook.</p>\n                    <p>On a failed roll, roll 1D6 and consult the Control Loss Table (page 113 in the rulebook)</p>\n                    <h2>Vehicle Combat:</h2>\n                    <p>Vehicle combat is performed exactly as with other combat, applying all appropriate modifiers, and using the Weapon Skills appropriate for the type of weapon.</p>\n                    <p>Shots are not targeted and there are no location for damage.</p>\n                    <p>Vehicles are usually armed with lasers, missiles, machine guns and railguns, and may receive bonuses for turret mounted weapons.</p>\n                    <h2>Vehicle Damage:</h2>\n                    <p>Vehicles have both SP values and Structural Damage Points (SDP). If armored, the vehicle’s SP is subtracted from the damage taken, with the remaining damage subtracted from the vehicle’s SDP.</p>\n                    <p>When a vehicle is reduced to 0 SDP, it is considered to be destroyed or inoperable. In this simplified system, there are no locations fordamage—all points are subtracted directly from the vehicle's SDP.</p>\n                    <h2>Crashing and Ramming:</h2>\n                    <p>Crash and ram damage is determined by dividing the speed of the moving vehicle by 20 (round down), to determine the number of six-sided dice thrown.</p>\n                    <p>This value is multiplied by a modifier based on the mass of the object collided with, listed in the Weight Modifier Table (also on page 113).</p>\n                    <p>The vehicle takes this many dice in damage to its SDP, while all occupants take one-half of this die amount.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.FNFFIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Friday Night Firefight\" src=\"assets/Visuals/Vehicles.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FNFFVehicles;\n","import React, { Component } from 'react';\nimport styles from './TraumaTeam.module.css';\nimport tabbedpanel from '../StyleModules/TabbedPanel.module.css';\nimport Tabs from '../Common/Tabs';\n\nenum HealingSections {\n    About = \"About\",\n\tFirstAid = \"First Aid\",\n    MedTech = \"Medical Tech\",\n    Nanomachines = \"Nanotechnology\",\n    Time = \"Time\"\n}\n\ninterface TTHealingState {\n    section: HealingSections;\n}\n\nclass TTHealing extends Component<{}, TTHealingState> {\n\n    public constructor(props: {}) {\n        super(props);\n        \n        this.state = {\n            section: HealingSections.About\n        }\n\t}\n\n\tpublic setSection = (section: HealingSections) => {\n\t\tthis.setState({\n\t\t\tsection: section\n\t\t});\n\t}\n\t\n\tpublic renderFirstAid = () => {\n\t\treturn (\n\t\t\t<div>\n                <p>First Aid involves cleaning and dressing the wounds, administering medication, setting broken limbs and putting on splints. </p>\n                <p>When a character makes a successful First Aid skill check, the patient will recover at the rate of 0.5 points per day. </p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <p>Example: A Light wound would be healed in 8 days. A Critical wound would heal in 24 days, a Mortal 3 wound in 56 days. </p>\n                    <p>Only one check need be made. You may (within reason and at Referee’s discretion), perform first aid on yourself. </p>\n                    <p> On an unsuccessful roll, the patient regains no points. New attempts may be made once per day until a successful roll is made.</p>\n                </div>\n                <h2>Speed heal drugs:</h2>\n                <p>Drugs can be used to speed the healing rate by 1 additional point per day.</p>\n                <p>Expensive and often proscribed, these drugs have a neural side effect of reducing the patient’s REF stat by 1D6/3 for a week after use.</p>\n                <p>Speedheal costs 1650eb per treatment.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderMedicalTech = () => {\n\t\treturn (\n\t\t\t<div>\n                <p>Medical Tech skill assumes that the character has studied medicine in a professional setting.</p>\n                <p>This gives him the ability to perform surgery, prescribe drugs, and know the proper treatment of injuries. He can replace damaged organs with vatgrown pieces, graft on new limbs, orinstall cyber limbs.</p>\n                <u><h3>You cannot perform Medical Tech skills on yourself.</h3></u>\n                <p>A character with Medical Tech skills makes a check as if using the First Aid skill, however, with Medical Tech, the patient will recover at the rate of 1 point per day.</p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <p>For example, a light wound would be healed in 4 days. A Mortal 3 wound would healin 28 days. </p>\n                    <p>Using Medical Tech skills supersedes the use of First Aid skills; a patient on which both have been successfully performed regains points at the rate of 1 per day, not 1.5!</p>\n                    <p>As with First Aid, the patient regains no points until a successful roll has been made. However, second attempts may be made once per day until a successful roll is made.</p>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderTime = () => {\n\t\treturn (\n\t\t\t<div>\n                <p>The first thing to remember is that after a First Aid or Medical Tech roll is made, the patient still has to actually recover (this isnt a fantasy game where a magician can lay on hands and the gutshot victim springs up ready to tackle the next challenge). </p>\n                <p>Each Wound State imposes certain limits on the character: </p>\n                <ul className={styles.LiPadding}>\n                    <li>Light Wound: The patient is fully ambulatory; he can go about his business with a minor amount of pain. </li>\n                    <li>Serious Wound: The patient is ambulatory, but will need his dressings changed once a day, and will be at -2 REF for all actions. </li>\n                    <li>Critical Wound: The patient must spend at least half of his day in bed in order to regain any lost points of damage. Other activities must be limited at simple tasks, at 1 -4 REF to all actions. Dressings must be changed twice a day, and nursing care of some sort must be available.</li>\n                    <li>Mortal Wound: The patient is bedridden. At Mortal Wounds 3 and above, he is probably comatose (50%) most of the time, and wired into all kinds of machinery for life support. He requires constant care during the entire process, although he will not have to make Death Saves (he’s been stabilized).</li>\n                </ul>\n\t\t\t</div>\n\t\t)\n    }\n    \n    public renderNanotech = () => {\n        return (\n            <div>\n                <p>Nanotechnology involves the use of incredibly tiny, psuedo-organic machines to perform minute surgical tasks.</p>\n                <p>These tiny tools can be programmed to repair damaged cells with molecule-sized polymer threads, or to act as temporary bridges between mutilated nerve endings.</p>\n                <p>Combined with tailored antibodies, nanotech devices can speed healing to twice the normal rate (patients recover 1 point per day in addition to normal healing). A Light Wound for example, would be healed in two days, while a Mortal Wound 0 would completely heal in eight days. </p>\n                <p>When combined with speed healing drugs, this rate is increased to 3 points per day, allowing the same mortally wounded character to be back in action in an unbelievable <u>six days!</u></p>\n                <p>Here’s the catch: Besides being expensive (1500 eb. per treatment) nanotech is available only in certain hospitals (1 in 10).</p>\n                <p>But if you’ve got the money, it’s the best option for getting back on the Street fast.</p>\n            </div>\n        )\n    }\n\n\tpublic renderAbout = () => {\n\t\treturn (\n\t\t\t<div>\n                <h3>Okay, so you’re not on a slab in Savage Doc's place... </h3>\n                <p>In order to recover from damage, characters must make some type of medical skill check. Otherwise, the patient continues to take damage (from infection and system shock) at the rate of 2 points per day.</p>\n                <p>If the patient is at a Mortal Wound State, he must make a daily Death Save as well as taking this damage.</p>\n                <p>Without medical aid, you're going to run out of luck pretty soon. This is probably why humans invented medicine in the first place. </p>\n                <div className={tabbedpanel.ExampleBorder}>\n                    <span>HEALING = (TECH + FIRST AID/MEDICAL TECH + 1D10) > DAMAGE.</span>\n                </div>\n                <p>To make a successful medical skill check, you must roll a value (using TECH, your medical Skill and 1D10) greater than the total number of points of damage the patient has taken.</p>\n                <p>Medical skill checks are made with two skills, First Aid or Medical Tech.</p>\n\n\t\t\t</div>\n\t\t)\n\t}\n\n\tpublic renderChoice = () => {\n\t\tswitch(this.state.section) {\n            case HealingSections.About:\n                return this.renderAbout();\n\t\t\tcase HealingSections.FirstAid:\n\t\t\t\treturn this.renderFirstAid();\n\t\t\tcase HealingSections.MedTech:\n\t\t\t\treturn this.renderMedicalTech();\n\t\t\tcase HealingSections.Time:\n                return this.renderTime();\n            case HealingSections.Nanomachines:\n                return this.renderNanotech();\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tpublic isActive = (selection: HealingSections) => {\n\t\treturn this.state.section === selection;\n    }\n\n\tpublic render() {\n\n\t\treturn (\n            <Tabs getContent={this.renderChoice} \n                isActive={this.isActive} \n                sections={HealingSections} \n                title=\"Healing:\" \n                switchContent={this.setSection}\n            />\n\t\t);\n\t}\n}\n\nexport default TTHealing;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './TraumaTeam.module.css';\n\nclass TTIntroduction extends Component<{}> {\n\n    public redirectToVideo = () => {\n        window.open(\"https://www.youtube.com/watch?v=Lic1GMbH6dQ\", \"_blank\"); \n    }\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.TTIntroduction}>\n\t\t\t\t<div className={styles.TTIntroductionText}>\n\t\t\t\t\t<h1>Heal. Diagnose. Extract.</h1>\n\t\t\t\t\t<img className={styles.TTIntroMobilePicture + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Logo of Trauma Team International\" src=\"assets/Visuals/TraumaTeam.png\"/>\n\t\t\t\t\t<p>One of the most powerful Corporations of the Cyber Age is the Trauma Team™; a bonded and licensed paramedical franchise operating throughout the U.S., Canada and parts of Europe.</p>\n                    <p>These crack ambulance units are specifically designed to get to the scene of a fatality within seven minutes (or your money back).</p>\n                    <p>Trauma Team's crews are made up of the best paramedical techs and staff available. The teams are usually made up of a driver, a senior Medtechie, an assistant and two security officers. They normally travel in a heavily armored AV-4 aircraft, supported by mobile tanker trucks and ground refuelling stations. </p>\n                    <p>A Trauma Team AV-4 contains the most sophisticated revivification and life support technology available, including a mobile cryotank to lower the body temperature to approximately -4 degrees celcius, (the optimum temperature to prevent hemorrhaging, shock, and brain swelling).</p>\n                    <h2>The bill:</h2>\n                    <p>Trauma Team fees are exceedingly steep ($100 per minute), the best method of offsetting their exorbitant costs is to either carry Trauma Team services as part of a Corporate group insurance policy, or to establish an account with TT International, paying a premium of $500 in advance each month for continued service.</p>\n                    <p>The executive plan at $12.000 per month covers all ammo and fuel costs, however the customer still has to pay for equipment and/or personnel damage.</p>\n                    <p>The high priority coverage has a response time of 3-5 minutes which Trauma Team claims is the fastest in the business. </p>\n                    <p>Once picked up, the customer will be taken to a corporate hospital instead of a medical center.\n                        All ammunition and fuel costs are covered, but any equipment damage or personnel damage is added to the bill.</p>\n                    <p>The price for high priority? If you have to ask...</p>\n                    <h2>Contacting:</h2>\n                    <p>Trauma Teams™ can be summoned by dialing 911 on any phone, and are equipped to trace the origin of any phone call to its source. (You're billed from the moment you call, until delivery to the Hospital.)</p>\n                    <p>You may also opt to carry a deadman transmitter, which will activate and automatically signal a Trauma Team the moment your brainwave pattern falls into a coma state.</p>\n                    <p>The most common transmitter is in the form of a plastic credit card, which is activated by bending the card in half, and has a range of 20 miles.</p>\n                    <p>Trauma cards can be transferred between members of a group as long as the card's owner s present to sign the charges off when the Team arrives.</p>\n                    <div className={styles.InterlacedVideo} onClick={this.redirectToVideo}>\n                        <video loop muted autoPlay className={pictureAnimation.InterlacedPicture} src=\"assets/TRAUMA.webm\"/>\n                    </div>\n                    <p>There are usually a dozen or more Trauma Teams on call at any time in a major city. Immediately after receiving an alert, the nearest Trauma Team™ unit goes airborne, their sophisticated tracking equipment homing in on the last known location of the patient.</p>\n                    <p>The pilot (who is skilled enough to set his six-ton AV-4 on top of a parked car if need be), drops in as close as possible.\n                        If the firefight is still going on, the security team secures the area (using the AV's twin autocannon or their own portable weapons).\n                    </p>\n                    <p>The medtechs load the patient on board, shunting his life support to the onboard heart-lung machines, plugging him into onboard biomonitors, and chilling his body down in the refrigerated tank for stabilization.</p>\n                    <p>Rapid surgery is performed on the spot for the most critical wounds, while the med specialist uses a combination of electroshock, drugs and manual resuscitation to get the patient on-line again. The pilot slamsdown the throttlesand the AV-4 rockets skywards on a pillar of exhaust, headed for the nearest emergency room.</p>\n                    <p>The entire process may have taken all of four minutes from start to finish.</p>\n                    <h3>Friendly reminder:</h3>\n                    <p>As a privately owned concern, Trauma Teams™ are not under any obligation to transport a casualty to a hospital, although they are responsible for reviving and stabilizing critically wounded patients. </p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.TTIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Logo of Trauma Team International\" src=\"assets/Visuals/TraumaTeam.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TTIntroduction;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './TraumaTeam.module.css';\n\nclass TTDeath extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.TTIntroduction}>\n\t\t\t\t<div className={styles.TTIntroductionText}>\n\t\t\t\t\t<h1>Death:</h1>\n\t\t\t\t\t<img className={styles.TTDeathMobilePicture + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Don't die please.\" src=\"assets/Visuals/TraumaTeamDeath.png\"/>\n                    <p>Whenever a character’s Wound State drops to MORTAL, he has a pretty good chance of dying. But when?</p>\n                    <p>In Cyberpunk, each time you are at a MORTAL wound state, you must make a Death Save to avoid dying.</p>\n                    <p>To make the Save, roll a 1D10 value lower than your character’s Body Type, subtracting the level of Mortality from your base chance to save.</p>\n                    <p>Each turn, you must make another death save to see if the character makes it through another turn. On a successful roll, you make it; on a failed roll, you will die at the end of the turn in which the roll was made.</p>\n                    <div className={styles.ExampleBorder}>\n                        <p>For example, say Savage has a Body Type of 10 (Very Strong) and takes a Mortal 4 wound. He must roll lower than (10-4)=6 to stay alive.</p>\n                        <p>The first turn he rolls a 5. Whew. The next turn, he rolls a 7 and expires. Immediately, his mates start fighting over who gets his boots.</p>\n                    </div>\n                    <p>Get the point? Sooner or later, you'll fail a roll and die. The only way out is stabilization. (see Death Saves under Friday Night Firefight)</p>\n                    <p>But let’s say your ripperdoc had a Medical Tech Skill of 2... </p>\n                    <p>We can do some pretty amazing things these days. We can grow skin, blood, organs, limbs and muscle tissue in collagen-saccharide tissue tanks. </p>\n                    <p>Other parts, like toes, fingers, eyes and internal organs can also be purchased from the local Body Bank and grafted on with advanced micro surgery.</p>\n                    <p>What we can’t do is regrow souls; Once you're dead, you’re dead.</p>\n                    <p>Let’s amend that: once you're DEAD 10, you're dead. </p>\n                    <p>Because twenty-first century medicine is so good at reviving the clinically dead, TraumaTeam™ Inc. (the world’s largest paramedical service, with offices worldwide), has established ten levels of death, each succeeding level a measure of how difficult it will be to revive the patient.</p>\n                    <p>This measuring system is called Death State, and for every minute (six turns) that you are clinically dead, your death state increases by two levels. </p>\n                    <h3>This is of critical importance to the dead Cyberpunk character:</h3>\n                    <p>When the Trauma Team arrives, a roll must be made to determine if the patient can be revived.</p>\n                    <div className={styles.ExampleBorder}>\n                        <p>This roll, on 1D10, must be higher than the current Death State number, or the patient is a candidate for the Body Bank.</p>\n                    </div>\n                    <p>On a successful roll, the patient is stabilized at his last Wound State and the process of healing can begin.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.TTIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Don't die please.\" src=\"assets/Visuals/TraumaTeamDeath.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TTDeath;\n","import React, { Component } from 'react';\nimport styles from './TraumaTeam.module.css';\nimport TTIntroduction from './TTIntroduction';\nimport Sidebar from '../Common/Sidebar.Navigation';\nimport TTDeath from './TTDeath';\nimport TTHealing from './TTHealing';\nimport TTBodyBank from './TTBodyBank';\nimport TTDrugs from './TTDrugs';\n\n\ninterface TTState {\n\tselection: string | null;\n\tshowMobileMenu: boolean;\n} \n\nenum Choices {\n\tIntroduction = \"Introduction\",\n\tDeath = \"Death\",\n\tHealing = \"Healing\",\n\tBodyBank = \"Body bank\",\n\tDrugs = \"Drugs\"\n}\n\nclass TraumaTeam extends Component<{}, TTState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselection: Choices.Introduction,\n\t\t\tshowMobileMenu: false\n\t\t}\n\t}\n\n\tpublic changeSelection = (newSelection: string) => {\n\t\tthis.setState({\n\t\t\tselection: newSelection,\n\t\t\tshowMobileMenu: false\n\t\t});\n\t}\n\n\tpublic getCurrentSelection = () => {\n\t\tswitch(this.state.selection) {\n\t\t\tcase Choices.Introduction:\n                return <TTIntroduction />;\n            case Choices.Death:\n                return <TTDeath />\n            case Choices.Healing:\n                return <TTHealing />\n\t\t\tcase Choices.BodyBank:\n\t\t\t\treturn <TTBodyBank />\n\t\t\tcase Choices.Drugs:\n\t\t\t\treturn <TTDrugs />\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tpublic toggleMobileView = () => {\n\t\tthis.setState({\n\t\t\tshowMobileMenu: !this.state.showMobileMenu\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"consoleText\" onClick={this.toggleMobileView}>Trauma Team International:</h1>\n\t\t\t\t<div className={styles.TTSplit}>\n\t\t\t\t\t<Sidebar showMobile={this.state.showMobileMenu} \n\t\t\t\t\t\tchoices={Object.values(Choices)} \n\t\t\t\t\t\tclicked={this.changeSelection} \n\t\t\t\t\t\tpreDetermined={Choices.Introduction}\n\t\t\t\t\t\ttoggleMobile={this.toggleMobileView}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={styles.TTMain}>\n\t\t\t\t\t\t{this.getCurrentSelection()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TraumaTeam;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './TraumaTeam.module.css';\n\nclass TTBodyBank extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.TTIntroduction}>\n\t\t\t\t<div className={styles.TTIntroductionText}>\n\t\t\t\t\t<h1>The Body Bank:</h1>\n\t\t\t\t\t<img className={styles.BodyBankPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Logo of Trauma Team International\" src=\"assets/Visuals/TraumaTeamAV4.png\"/>\n\t\t\t\t\t<p>These are places where you can get the raw materials for putting people back together again. They are a staple of the Cyberpunk landscape, and a good source of steady income for the enterprising street dweller.</p>\n                    <p>Just in case it didn’t work out, you can still make a dead comrade pull his weight. The Lifeline Act of 1994 (an extension of the donor cards of the 1980s) allows a potential source of spare parts to carry adonor card in his wallet.</p>\n                    <p>This card must be registered with the federal government. Only donor carded bodies can be turned into a donor center, where a bounty is paid. The bounty is based onthe parts involved and the body condition at the time.</p>\n                    <table className={styles.TTBodyBankTable}>\n                        <tr>\n                            <th>Part</th>\n                            <th>Average bounty</th>\n                            <th>Sale price</th>\n                        </tr>\n                        <tr>\n                            <td>Arm</td>\n                            <td>500</td>\n                            <td>1000</td>\n                        </tr>\n                        <tr>\n                            <td>Leg</td>\n                            <td>600</td>\n                            <td>1200</td>\n                        </tr>\n                        <tr>\n                            <td>Heart / Lung</td>\n                            <td>700</td>\n                            <td>1400</td>\n                        </tr>\n                        <tr>\n                            <td>Liver / Kidney</td>\n                            <td>200</td>\n                            <td>400</td>\n                        </tr>\n                        <tr>\n                            <td>Eyes / Ears</td>\n                            <td>800</td>\n                            <td>1000</td>\n                        </tr>\n                        <tr>\n                            <td>Other organs</td>\n                            <td>200 - 300</td>\n                            <td>400 - 600</td>\n                        </tr>\n                    </table>\n                    <p>The Government doesn’t care who turns the body in. All you need is the card and a legitimate death certificate stating that the deceased died of natural or accidental causes, available through any local coroner. </p>\n                    <p>The result is that many firefights end with a frenzied looting of bodies for donor cards—followed by another firefight over disputed claims and ending in another frenzy of looting.</p>\n                    <p>Legally, donor centers must be located in legitimate offices of the County or City Coroner’s Office, or in a public hospital. However, a thriving black market in fraudulent donors thrives in most of the combat zones, usually out of “ripperdoc” clinics or Corporate centers (where high level execs get first pick of the new parts).</p>\n                    <p>The biggest problem with Body Bank replacements is the availability of genetically matching parts:</p>\n                    <div className={styles.ExampleBorder}>\n                        <span>When attempting to locate a replacement limb or other part at a body bank, roll 1D10. On a 1,2, or 3, the partis unavailable that day.</span>\n                        <p>On a 4 or 5, the part is in, but it may be the wrong color or have some other minor difference.</p>\n                    </div>\n                    <h2>VAT grown tissue banks:</h2>\n                    <p>This reflects recent (2017) improvements in genetic technology. Using tailored DNA and cell-growthvats, legs, arms, organs and other parts (including exotic designs like animal human crosses) can be grown to order.</p>\n                    <p>Unlike bodybanking, vat-grown parts are available to match any genotype.</p>\n                    <p>However, the process is relatively new and is more expensive than simply using an arm off the rack (2 times the price for a similar body bank part in Excellent condition).</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.TTIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Logo of Trauma Team International\" src=\"assets/Visuals/TraumaTeamAV4.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TTBodyBank;\n","export interface Drug {\n    name: string;\n    strength: string;\n    difficulty: string;\n    duration: string;\n    description: string;\n}\n\nexport class TraumaTeamService {\n\tpublic static async getDrugs(): Promise<Drug[]> {\n\t\treturn fetch('assets/TraumaTeam/Drugs.json')\n\t\t.then((s) => s.json().then((fetched: { drugs: Drug[] }) => {\n\t\t\t\treturn fetched.drugs;\n\t\t\t})\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './TraumaTeam.module.css';\nimport drugcss from './TTDrugs.module.css';\nimport { Drug, TraumaTeamService } from '../Services/TraumaTeamService';\n\ninterface DrugState {\n    drugs: Drug[]\n    shownDrug: Drug | null;\n}\n\nclass TTDrugs extends Component<{}, DrugState> {\n\n    public constructor(props: {}) {\n        super(props);\n        this.state = {\n            drugs: [],\n            shownDrug: null\n        }\n\n        this.getDrugs();\n    }\n\n    public async getDrugs() {\n        let drugs = await TraumaTeamService.getDrugs();\n        this.setState({\n            drugs: drugs\n        });\n    }\n\n    public clearModal = () => {\n        this.setState({\n            shownDrug: null\n        });\n    }\n\n    public renderDrug = () => {\n        if(this.state.shownDrug != null) {\n            return (\n                <div>\n                    <div className={drugcss.ModalBackground} onClick={this.clearModal}></div>\n                    <div className={drugcss.WindowedInformation}>\n                        <h3>{this.state.shownDrug.name}</h3>\n                        <p>> Strength: {this.state.shownDrug.strength}</p>\n                        <p>> Difficulty: {this.state.shownDrug.difficulty}</p>\n                        <p>> Duration: {this.state.shownDrug.duration}</p>\n                        {this.state.shownDrug.description.split(\"\\n\").map((splitLine: string) => {\n                            return <p>{splitLine}</p>\n                        })}\n                        <button className={drugcss.ModalReturn} onClick={this.clearModal}>\n                            > <span>[ </span> Return <span>]</span>\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n        return \"\";\n    }\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.TTIntroduction}>\n\t\t\t\t<div className={styles.TTIntroductionText}>\n\t\t\t\t\t<h1>Drugs:</h1>\n\t\t\t\t\t<img className={styles.DrugsPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Stop it.\" src=\"assets/Visuals/TTDrugs.png\"/>\n                    { this.renderDrug() }\n                    <p>The drugs of the future are far more lethal than their 20th century counterparts. Many are experimental chemicals dumped on the Street by unscrupulous Corporations looking for guinea pigs.</p>\n                    <p>Some are homebrewed horrors designed in basement labs. Still others are military designed combat drugs designed to create armies of zombie killing machines. All of them are bad news.</p>\n                    <p>Most of the drugs in Cyberpunk are addictive—the people who designed them were looking for a way to create a captive market of addicts.</p>\n                    <p>Only the very wealthy can afford to have non-toxic \"designer  drugs\" created for their own physiologies; \n                        most of the scum on the Street (the rest of you) are left sucking up the dregs of the chemical sewer.</p>\n                    <p>Here are some common street drugs:</p>\n                    <div className={drugcss.DrugList}>\n                        {this.state.drugs.map((drug) => {\n                            return <button onClick={() => { this.setState({shownDrug: drug}); } }>{drug.name}</button>\n                        })}\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.TTIntroductionPicture}>\n                    <img className={pictureAnimation.InterlacedPicture} alt=\"Stop it.\" \n                        title=\"Stop it. Get some help and a burger from McDonalds®\" src=\"assets/Visuals/TTDrugs.png\"\n                    />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TTDrugs;\n","import React, { Component } from 'react';\nimport styles from './Cyberware.module.css';\nimport Sidebar from '../Common/Sidebar.Navigation';\nimport CyberSurgery from './CyberSurgery';\nimport CyberwareIntroduction from './CyberwareIntroduction';\nimport Cyberpsychosis from './Cyberpsychosis';\nimport CyberwareHumanity from './CyberHumanity';\nimport CyberPieces from './CyberwarePieces';\n\ninterface CyberState {\n\tselection: string | null;\n\tshowMobileMenu: boolean;\n} \n\nenum Choices {\n\tIntroduction = \"Introduction\",\n\tCyberpsychosis = \"Cyberpsychosis\",\n\tSurgery = \"Surgery\",\n\tHumanity = \"Humanity\",\n\tPieces = \"Pieces\"\n}\n\nclass Cyberware extends Component<{}, CyberState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselection: Choices.Introduction,\n\t\t\tshowMobileMenu: false\n\t\t}\n\t}\n\n\tpublic changeSelection = (newSelection: string) => {\n\t\tthis.setState({\n\t\t\tselection: newSelection,\n\t\t\tshowMobileMenu: false\n\t\t});\n\t}\n\n\tpublic getCurrentSelection = () => {\n\t\tswitch(this.state.selection) {\n\t\t\tcase Choices.Introduction:\n\t\t\t\treturn <CyberwareIntroduction />\n\t\t\tcase Choices.Cyberpsychosis:\n\t\t\t\treturn <Cyberpsychosis />\n\t\t\tcase Choices.Surgery:\n\t\t\t\treturn <CyberSurgery />\n\t\t\tcase Choices.Humanity:\n\t\t\t\treturn <CyberwareHumanity />\n\t\t\tcase Choices.Pieces:\n\t\t\t\treturn <CyberPieces />\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tpublic toggleMobileView = () => {\n\t\tthis.setState({\n\t\t\tshowMobileMenu: !this.state.showMobileMenu\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"consoleText\" onClick={this.toggleMobileView}>Cyberware:</h1>\n\t\t\t\t<div className={styles.CyberSplit}>\n\t\t\t\t\t<Sidebar showMobile={this.state.showMobileMenu} \n\t\t\t\t\t\t\tchoices={Object.values(Choices)} \n\t\t\t\t\t\t\tclicked={this.changeSelection} \n\t\t\t\t\t\t\tpreDetermined={Choices.Introduction}\n\t\t\t\t\t\t\ttoggleMobile={this.toggleMobileView}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={styles.CyberMain}>\n\t\t\t\t\t\t{this.getCurrentSelection()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Cyberware;\n","export interface SurgeryCode {\n    name: string;\n    required: string;\n    time: string;\n    damage: string;\n    cost: string;\n    difficulty: string;\n}\n\nexport class CyberwareService {\n\tpublic static async getCodes(): Promise<SurgeryCode[]> {\n\t\treturn fetch('assets/Cyberware/SurgeryCodes.json')\n\t\t.then((s) => s.json().then((fetched: { codes: SurgeryCode[] }) => {\n\t\t\t\treturn fetched.codes;\n\t\t\t})\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport styles from './CyberSurgery.module.css';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport { SurgeryCode, CyberwareService } from '../Services/CyberwareService';\n\ninterface SurgeryState {\n\tsurgeryCodes: SurgeryCode[];\n}\n\nclass CyberSurgery extends Component<{}, SurgeryState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsurgeryCodes: []\n\t\t}\n\n\t\tthis.getSurgeryCodes();\n\t}\n\n\tpublic async getSurgeryCodes() {\n\t\tthis.setState({\n\t\t\tsurgeryCodes: await CyberwareService.getCodes()\n\t\t});\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.SurgeryMain}>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Surgery:</h1>\n\t\t\t\t\t<img className={styles.SurgeryMobilePicture + \" \" + pictureAnimation.PictureMobileOnly} \n\t\t\t\t\t\talt=\"Surgery is dangerous.\" src=\"assets/Visuals/Surgery.png\" \n\t\t\t\t\t/>\n                    <p>Not all medical care is the result of accidents or combat. This is the Metal Age, and when you want to get cybered up, you gotta pay a price in blood.</p>\n\t\t\t\t\t<p>Surgery is usually done at ripperdocs who specialize in installing Cyberware. These can be smaller and independent ripperdocs, or more expensive and professional medical centers.</p>\n\t\t\t\t\t<p>Ripperdocs can be both completely legal or illegal. The latter can potentially have black market military-grade cyberware, but can also have less qualms about your safety.</p>\n                    <p>If you’re going to get wired with a cyberlimb, the first thing you’ll have to decide is whether you want to keep the meat one. </p>\n                    <p>For around 100eb a month, a Body Bank will store your old one until you decide to reclaim it, with only a 20% chance that someone will sell it for spare parts in the meantime. For about 200eb a month, this drops to a 5% chance; not perfect, but better than nothing.</p>\n                    <p>Now you've ditched the old meat in the freezer, it'stime to getcybered up. A Medical Tech skill is required to install cyberwear.</p>\n                    <p>You can’t install cyberwear on yourself. Each type of cyberwear has a Surgery Code (pg. 75). </p>\n                    <p>This code represents the minimum level of medical care required to install the cyberwear, the length of surgical time required, the cost of the surgery, the damage taken in surgery and the Difficulty of the installation procedure.</p>\n                    <p>The Surgery Code assumes that a successful Medical Tech check has been made on the patient as part of the operation. Healing is then based on the number of points lost due to the surgery.</p>\n\t\t\t\t\t<div className={styles.SplitSurgery}>\n\t\t\t\t\t\t{this.state.surgeryCodes.map((surgeryCode) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h2>{surgeryCode.name}</h2>\n\t\t\t\t\t\t\t\t\t<p>Requirements: {surgeryCode.required}</p>\n\t\t\t\t\t\t\t\t\t<p>Time in surgery: {surgeryCode.time}</p>\n\t\t\t\t\t\t\t\t\t<p>Damage:{surgeryCode.damage}</p>\n\t\t\t\t\t\t\t\t\t<p>Cost: {surgeryCode.cost}</p>\n\t\t\t\t\t\t\t\t\t<p>Difficulty: {surgeryCode.difficulty}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Example: Morgan Blackshadow decides to get a cyberarm installed. The surgery code is Critical (CR).</p>\n\t\t\t\t\t\t<p>Morgan takes 11 points in surgical damage (Wound State=Critical).</p>\n\t\t\t\t\t\t<p>The surgery is Difficult (25), requires a hospital, takes six hours and costs 2,500 eb.</p>\n\t\t\t\t\t\t<p>It will take Morgan 11 days to recover fully, but he can be back on the street in a week (operating at a Light Wound State).</p>\n\n\t\t\t\t\t\t<h2>Replacement surgery:</h2>\n\t\t\t\t\t\t<p>Remember; arms and legs don’t grow back. Even if you heal, a missing limb will still be missing.</p>\n\t\t\t\t\t\t<p>You can chose to replace it with something out of a Body Bank or vat, or you can go for the metal.</p>\n\t\t\t\t\t\t<p>Replacing a limb with either requires a CR surgery code. </p>\n\t\t\t\t\t\t<p>A replacement meat arm will cost about 1,000 eb. A replacement cyberarm starts at 2,000eb and goes up from there depending on what you want to plug into it.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.SurgeryImage}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Surgery is dangerous.\" src=\"assets/Visuals/Surgery.png\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CyberSurgery;\n","import React, { Component } from 'react';\nimport styles from './Cyberware.module.css';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\n\nclass CyberwareIntroduction extends Component<{}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.IntroductionSplit}>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Introduction:</h1>\n\t\t\t\t\t<img className={styles.IntroductionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} title=\"Alt Cunningham. Johnny Silverhand's input.\" \n\t\t\t\t\talt=\"Alt Cunningham. Johnny Silverhand's input.\" src=\"assets/Visuals/Cyberware.png\" />\n\t\t\t\t\t<p>Forget everything you ever thought about cyborgs. Everything. </p>\n\t\t\t\t\t<p>This is the 2000's. Today’s cyborg is stylish.</p>\n\t\t\t\t\t<p>His cybernetics are designed for a streamlined, highmover lifestyle. Whether equipped with implanted data chips in his nervous system to enhance his tennis game, or bioengineered miniweapons for his personal protection, the cyborg of the 2000's is the cutting edge of high tech living.</p>\n\t\t\t\t\t<p>But he isn’t necessarily a walking tank either. Cybertech can be smoother than that—less obvious. </p>\n\t\t\t\t\t<p>You have to integrate your newtech gadgets into a slick, seamless whole. You're either predator or prey, and the faster you learn to blur the line between the two categories, the longer you'll survive. </p>\n\t\t\t\t\t<p>And that’s the point. Survival.</p>\n\t\t\t\t\t<h2>Cyberfashion:</h2>\n\t\t\t\t\t<p>It's hip and aware to have high tech grafted onto your body somewhere.</p>\n\t\t\t\t\t<p>If you can afford it, you probably have at least a couple of \"enhancements”; a few software chips installed in your nervous system to interface \n\t\t\t\t\t\twith your computer, remember your appointments (the ever popular Daytimer™ chip for example), and improve your raquetball reflexes. \n\t\t\t\t\t</p>\n\t\t\t\t\t<p>If your job involves some type of security or combat function (and most occupations of the 2000's have at least some type of combat aspect), \n\t\t\t\t\t\tyou probably have two or three types of combat software, as well as plugs and interfaces for a smartgun.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p> As a Solo, you may have had one or more limbs replaced with cyberware prosthetics, allowing you to hide a variety of tools and weapons in your body, as well as giving you an edge in speed and strength.</p>\n\t\t\t\t\t<p>As a cyberpunk, you’re going to want to get your hands on the best of this exciting and expensive new tech. And expensive is the word.</p>\n\t\t\t\t\t<p>The average enhanced character with, say, one cyberoptic (Targeting scope and IRenhancement), a reflex boost, one superchromed arm with \n\t\t\t\t\t\ta .25 cal submachine gun, interface plugs and chipware for Martial Arts, Rotorwing Pilot and Handgun is an investment of tens of thousands of eurobucks.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Of course, the ambitious Punk already knows atleast twenty-five ways (most of them illegal) to raise that sort of paltry sum.</p>\n\t\t\t\t\t<p>But before you start loading up on Cyberware, there's a catch...</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.IntroductionImage}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} title=\"Alt Cunningham. Johnny Silverhand's input.\" \n\t\t\t\t\talt=\"Alt Cunningham. Johnny Silverhand's input.\" src=\"assets/Visuals/Cyberware.png\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CyberwareIntroduction;\n","import React, { Component } from 'react';\nimport styles from './Cyberware.module.css';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\n\nclass Cyberpsychosis extends Component<{}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.IntroductionSplit}>\n\t\t\t\t<div>\n\t\t\t\t\t<div className={styles.LoadAnimation} />\n\t\t\t\t\t<h1 className={styles.SmallerMobileTitle}>Cyberpsychosis:</h1>\n\t\t\t\t\t<img className={styles.CyberpsychosisMobilePicture + \" \" + pictureAnimation.PictureMobileOnly} title=\"You'll get put down by MAX-TAC.\" \n\t\t\t\t\talt=\"You'll get put down by MAX-TAC.\" src=\"assets/Visuals/Cyberpsychosis.png\" />\n                    <p>Something happens when you start adding metal and plastic to people. They start to change. And it isn’t pretty. </p>\n                    <p>In the 2000's, we call this cyberpsychosis; a mental disease in which the addition of cybernetics causes an already unstable personality to fragment:</p>\n                    <p>At first, the victim begins to relate more to machines than to humans. </p>\n                    <p>Soon, he starts to ignore people— parents, friends, lovers. Eating, sleeping all become less important.</p>\n                    <p>Finally, human interactions begin to irritate, culminating in a terrifying rage that consumes the victim entirely.</p>\n\n                    <h2>So, how do I go cyberpsycho? </h2>\n                    <p>You have an EMP stat. This stat is a measure of how well the character relates to other people, and is the basis of such skills as leadership, lying, convincing and romantic relationships.</p>\n                    <p>Likewise, every major cybernetic enhancement has a corresponding Humanity Cost, which is added together to get an overall Humanity Cost of all enhancements.</p>\n                    <p>Humanity Costs are rated from VERY LOW to VERY HIGH, and correspond to the general effect this enhancement will have on the human psyche. In addition, each option added to an enhancement has an additional point value as well.</p>\n                    <div className={styles.ExampleBorder}>\n\t\t\t\t\t\t<h3>For every ten points of Humanity, the character loses one point of Empathy (unequal values are rounded down).</h3>\n                    </div>\n\t\t\t\t\t<p>For example, say you add four new cybernetic devices for a total Humanity Cost of 36. You will lose 3 points of Empathy.</p>\n\t\t\t\t\t<p>This can start to cost you. With an Empathy of 3 the character is something of a \"cold fish\".</p>\n\t\t\t\t\t<p>emotionless and cold. With an Empathy of 2, the character is chilly, forbidding, and distinctly unpleasant to others.</p>\n\t\t\t\t\t<p>With an Empathy of 1, the character is usually violent, sociopathic and vicious. He must constantly fight to keep from going over the edge and committing irrational, violent acts of murder and mayhem.</p>\n\t\t\t\t\t<p>At zero, your character succumbs to Cyberpsychosis and becomes an NPC.</p>\n\t\t\t\t\t<p>Not all cyberpsychos are the rampaging type. Many exhibit more subtle symptoms; compulsive lying, kleptomania, sadism, brutality, split personality and extremely violent mood swings.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.IntroductionImage}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} title=\"You'll get put down by MAX-TAC.\" \n\t\t\t\t\talt=\"You'll get put down by MAX-TAC.\" src=\"assets/Visuals/Cyberpsychosis.png\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Cyberpsychosis;\n","import React, { Component } from 'react';\nimport styles from './Cyberware.module.css';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\n\nclass CyberwareHumanity extends Component<{}> {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.IntroductionSplit}>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Humanity:</h1>\n                    <img className={styles.HumanityPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} \n                        alt=\"Do not forget your humanity.\" src=\"assets/Visuals/Humanity.png\" \n                    />\n                    <p>Each time you add on a cybernetic enhancement, there’s a corresponding loss of humanity. But it’s not simple, linear, or nice.</p>\n                    <p>Different people react differently to the \"cyborging\" process. Therefore, your Humanity Cost is based on the throw of a random dice value for each enhancement.</p>\n                    <p>This is important, because it means that sheer bad luck could put you over the line before you know it.</p>\n                    <p>Remember: you must keep track of the cumulative number of points lost. Those little .5's and 1's are going to start adding up fast...</p>\n                    <div className={styles.Cyberware50Split}>\n                        <div>\n                            <h2>Gaining Humanity:</h2>\n                            <p>You can get humanity back by going to Cyberpsychologists and thus going to therapy.</p>\n                            <p>If C-SWAT drags you kicking and screaming in you'll be strapped down and your cybersystems will be disabled \n                                and you'll be jacked into a braindance for \"reassembly\" of your brain so you can be more socially acceptable.\n                            </p>\n                        </div>\n                        <div className={styles.ExampleBorder}>\n                            <h3>Humanity Costs:</h3>\n                            <p>Very low: ................ 1D6/2</p>\n                            <p>Low: ............................ 1D6</p>\n                            <p>Medium: ................... 2D6</p>\n                            <p>High: ............................ 3D6</p>\n                            <p>Very high: ............... 4D6</p>\n                        </div>\n                    </div>\n                    <p>The following table is mentioned on page 101/102 in Chrome book 2 and describes regains per implant:</p>\n\n                    <div className={styles.ExampleBorder}>\n                        <h3>Therapist gains:</h3>\n                        <p>Therapy Cost/Week Time Required Humanity points Regained</p>\n                        <ul>\n                            <li>Outpatient 1,000eb 14 hours/week 25%</li>\n                            <li>Inpatient 5,000eb 168 hours/week 33%</li>\n                            <li>ICT 10,000eb 168 hours/week 50%</li>\n                        </ul>\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.IntroductionImage}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Do not forget your humanity\" src=\"assets/Visuals/Humanity.png\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CyberwareHumanity;\n","import React, { Component } from 'react';\nimport styles from './CyberSurgery.module.css';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\n\nclass CyberPieces extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.SurgeryMain}>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Pieces of Cyberware:</h1>\n                    <img className={pictureAnimation.PictureMobileOnly} alt=\"Buy now!.\" title=\"Buy now!.\" src=\"assets/Visuals/CyberPieces2.png\" />\n                    <p>All available Cyberware are described both in the core rulebook (page 76) and Chrome books 1-4. The latter is highly recommended as they contain all kinds of cyberware and also weapons and vehicles.</p>\n                    <p>However you might be wondering what kind of Cyberware there is, and here are some examples of cyberware types:</p>\n                    \n                    <h2>Fashionware:</h2>\n                    <p>These are typical hi-tech gadgets. Biomonitors, skinwatches (clocks with LEDs under your skin), Techhair that changes your hair color depending on the weather, light tattoos that glow and more.</p>\n                    <img className={pictureAnimation.PictureMobileOnly} alt=\"Get it today!.\" title=\"Get it today!.\" src=\"assets/Visuals/CyberPieces.png\" />\n                    \n                    <h2>Neuralware (Processor):</h2>\n                    <p>Invisible cyberware that amplifies your existing abilities. Reflex boosters, pain editors, Cybermodem links, smartgun links, interface plugs and so on.</p>\n                    <p>There's also cyberchips that you can install. There are two kinds of chipware: APTR (Reflex) chips and MRAM memoryware.</p>\n                    \n                    <h2>Chipware:</h2>\n                    <p>Having chipware is like having instant skills whenever you want them. The problem is, chipware is expensive, and limited to only the lowest levels of a specific skill (from +1 to +3). To progress further, you would have to have a specially designed chip built at a higher level (not an easy proposition).</p>\n                    <p>Another problem with chips is that unlike natural skills, you can’tlearn to become better. If you're chipped for a Karate of +2, you'll be at that level of skill until you die, no matter how many fights you get into. </p>\n                    <p>You also can't combine natural and chipwared skills; for example, combining a chipped Karate of +2 and a natural Karate skill of +5 for a total of +7. The programmed responses of a chip will always override natural responses, setting the user’s level of skill equal to that of the chip.</p>\n                    <p>You can only run as many chips as your INT stat simultanously, though you can change it out whenever you want (one turn in combat).</p>\n                    \n                    <h2>Implants:</h2>\n                    <p>These are little things you can get plugged in to make your life easier.</p>\n                    <p>Nasal poison filters, gill implants, Mr. Studd™ Sexual Implant, Adrenal Boosters, Audio/Video tape recorders, motion detectors usually go under this category.</p>\n                    \n                    <h2>Bioware:</h2>\n                    <p>Bioware is anything which is primarily low-impact technology that is designed along biological rather than mechanical lines by utilizing nanotechnology.</p>\n                    <p>Grafted muscle, bone lace, skinweave (increases your skin's Stopping Power by 12), enhanced antibodies, nanosurgeons etc.</p>\n                    \n                    <h2>Cyberweapons:</h2>\n                    <p>These are usually severely illegal black market cyberware and are hidden killing tools.</p>\n                    <p>Getting these usually involve paying a shady fixer deep into the Combat Zone a lot of eurodollars and giving the parts to your local black market ripperdoc.</p>\n                    <p>Examples include: Scratchers (metal or carbo-glass fingernails, making them as sharp as razorblades), Vampires (implanted fangs, not black market stuff), Wolvers (wolverine claws), Slice 'N Dice (false fingernail which extends into a monomolecular wire that will cut through almost all organic and plastic.) </p>\n                    \n                    <h2>Cyberoptics:</h2>\n                    <p>A combination of digital processor and camera, cyberoptics are replacements for normal eyes. Cybervision is just like regular vision, only better. Colors are brighter, images sharper. And that's just the start.</p>\n                    <p>Want to see life as a 30's black and white movie? No problem. Telescopic or microscopic vision? Optional. Infrared and low light vision? Standard for Solos.</p>\n                    \n                    <h2>Cyberaudio:</h2>\n                    <p>This enhancement affects both ears, and also includes a subvocalizing mike on the mastoid bone. There is no visible change to the outer ear, although some cyberpunks replace the outer ear with a set of mechanical speaker pickups for max effect.</p>\n                    <p>Radio links, ECM Scramblers, amplified hearing, voice stress analyzers, sound editing, volume level dampner, and various recorders are typically in this category.</p>\n                    <img className={pictureAnimation.PictureMobileOnly} alt=\"Get it today!.\" title=\"Get it today!.\" src=\"assets/Visuals/CyberPieces4.png\" />\n                    \n                    <h2>Cyberlimbs:</h2>\n                    <p>Still a popular fad in the Cyberpunk future. They are chromed, airbrushed, jeweled, lighted, and even sculpted in the pursuit of true cybertech chic.</p>\n                    <p>Under all the designer fashion, the standard cyberlimb is an aluminum and steel basket framework, with artificial myomar plastic muscles controlling motion. The joints are stainless steel.</p>\n                    <p>There are many pros of getting a cyberlimb. They never get tired, they don't feel pain and they can dish out incredible amounts of damage.</p>\n                    <p>There are many types of cyberlimbs and you can get everything from tool hands, web foots, EMP shielding, hidden holsters, cellular cybermodems and more.</p>\n                    \n                    <h2>Linear frames:</h2>\n                    <p>Exoskeletons. A metal framework with synethic muscles for movement and resemble a suit of contoured metal body armor which is grafted onto your body.</p>\n                    <p>You cannot swim with them, you lose a REF point, but you can throw cars and allows you to deadlift 600kg if you want to.</p>\n                    <p>These come in Sigma, Beta and Omega versions. Where the lowest one (Sigma) increases your strength to 12 and damage modifiers revolving physical force by +4.</p>\n                    \n                    <h2>Body plating:</h2>\n                    <p>Body plating covers any situation where armored plastics and metals are layered over and directly anchored to the skin.</p>\n                    <p>It doesn’t make you any stronger or faster, but it's perfect if you want all over protection all the time—and don't care who knows it.</p>\n                    <p>Things like Cowls (covering the skull), torso plates, face plates, or front optic mounts (seen the Maelstrom gang in the Cyberpunk 2077 video game? Yeah, like that.)</p>\n\t\t\t\t</div>\n                <div>\n                    <div className={styles.SurgeryImage}>\n                        <img className={pictureAnimation.InterlacedPicture} alt=\"Get it today!.\" title=\"Get it today!.\" src=\"assets/Visuals/CyberPieces.png\" />\n                    </div>\n                    <div className={styles.SurgeryImage}>\n                        <img className={pictureAnimation.InterlacedPicture} alt=\"Buy now!.\" title=\"Buy now!.\" src=\"assets/Visuals/CyberPieces2.png\" />\n                    </div>\n                    <div className={styles.SurgeryImage}>\n                        <img className={pictureAnimation.InterlacedPicture} alt=\"Soon out of stock!.\" title=\"Soon out of stock!.\" src=\"assets/Visuals/CyberPieces3.png\" />\n                    </div>\n                    <div className={styles.SurgeryImage}>\n                        <img className={pictureAnimation.InterlacedPicture} alt=\"Can't live without it!\" title=\"Can't live without it!\" src=\"assets/Visuals/CyberPieces4.png\" />\n                    </div>\n                </div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CyberPieces;\n","import React, { Component, Suspense } from 'react';\nimport styles from './NightCity.module.css';\nimport Sidebar from '../Common/Sidebar.Navigation';\nimport NightCityStartingOut from './NCStartingOut';\nimport NightCityTheEdge from './NCLivingOnTheEdge';\nimport NightCityHistory from './NCHistory';\nimport NightCityAmerica from './NCAmerica';\nimport NightCitySlang from './NCSlang';\nimport NightCityCorporations from './NCCorporations';\nimport NightCityMaps from './NCMaps';\nimport Loading from '../Common/Loading';\n\nconst NightCityIntroduction = React.lazy(() => import('./NCIntroduction'));\n\ninterface NightCityState {\n\tselection: string | null;\n\tshowMobileMenu: boolean;\n} \n\nenum Choices {\n    Introduction = \"About\",\n    TheEdge = \"Living on the Edge\",\n    GetStarted = \"First Session\",\n    History = \"History\",\n    America = \"America\",\n\tCorporations = \"Corporations\",\n    Slang = \"Slang\",\t\n\tMaps = \"Map\"\n}\n\nclass NightCity extends Component<{}, NightCityState> {\n\n\tpublic constructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselection: Choices.Introduction,\n\t\t\tshowMobileMenu: false\n\t\t}\n\t}\n\n\tpublic changeSelection = (newSelection: string) => {\n\t\tthis.setState({\n\t\t\tselection: newSelection,\n\t\t\tshowMobileMenu: false\n\t\t});\n\t}\n\n\tpublic getCurrentSelection = () => {\n\t\tswitch(this.state.selection) {\n            case Choices.Introduction:\n                return <NightCityIntroduction />\n            case Choices.GetStarted:\n                return <NightCityStartingOut />\n            case Choices.TheEdge:\n                return <NightCityTheEdge />\n            case Choices.History:\n                return <NightCityHistory />\n\t\t\tcase Choices.America:\n\t\t\t\treturn <NightCityAmerica />\n\t\t\tcase Choices.Slang:\n\t\t\t\treturn <NightCitySlang />\n\t\t\tcase Choices.Corporations:\n\t\t\t\treturn <NightCityCorporations />\n\t\t\tcase Choices.Maps: \n\t\t\t\treturn <NightCityMaps />\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tpublic toggleMobileView = () => {\n\t\tthis.setState({\n\t\t\tshowMobileMenu: !this.state.showMobileMenu\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"consoleText\" onClick={this.toggleMobileView}>Night City:</h1>\n\t\t\t\t<div className={styles.NightCitySplit}>\n\t\t\t\t\t<Sidebar showMobile={this.state.showMobileMenu} \n\t\t\t\t\t\t\tchoices={Object.values(Choices)} \n\t\t\t\t\t\t\tclicked={this.changeSelection} \n\t\t\t\t\t\t\tpreDetermined={Choices.Introduction}\n\t\t\t\t\t\t\ttoggleMobile={this.toggleMobileView}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={styles.NightCityMain}>\n\t\t\t\t\t\t<Suspense fallback={<Loading/>}>\n\t\t\t\t\t\t\t{this.getCurrentSelection()}\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NightCity;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './NightCity.module.css';\n\nclass NightCityStartingOut extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.NightCityIntroduction}>\n\t\t\t\t<div className={styles.NightCityIntroductionText}>\n\t\t\t\t\t<h1>The First Session:</h1>\n\t\t\t\t\t<img className={styles.FirstSessionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Let's get started.\" src=\"assets/Visuals/FirstSession.jpg\"/>\n                    <p>Like when we've been learning other systems - We'll start off by having the first session dedicated to character creation, filling out character sheets and an introduction.</p>\n                    <p>The intro will not be individual like in the World of Darkness games. This time, we'll do it as a team.</p>\n                    <p>As you might have surmised, you're currently at Zetatech. A wetware and computer hardware and software design megacorporation.</p>\n                    <p>They have wiped your memory. You cannot remember your past.</p>\n                    <h2>Think about the following:</h2>\n                    <p>> Choose a class you want to play.</p>\n                    <p>> Think about your character; Who are you, and why are you at Zetatech?</p>\n                    <p>> What chain of events happened that ended with you being there, trapped inside wild simulations?</p>\n                    <p>> Were you living in Night City? Somewhere else?</p>\n                    <p>> How old are you? Are you 20, 30 or maybe you were cryofrozen and revived into the year of 2020?</p>\n                    <p>There are so many ways you can do this. But the information above is something to keep in mind. </p>\n                    <h2>Lifepath:</h2>\n                    <p>We'll be doing details of your character through the Lifepath system (see Interlock System), however it should be <i>your</i> character, the Lifepath system is only a guide for fleshing out the backstory.</p>\n                    <p>So if you have firm knowledge of your character, run with it and don't use everything the Lifepath system spits out.</p>\n                    <p>If you have a loose knowledge of your character, maybe it'll help you.</p>\n                    <p>I highly recommend you look at how the Lifepath system works and its options before fleshing out your character completely.</p>\n\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.NightCityIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Let's get started.\" src=\"assets/Visuals/FirstSession.jpg\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NightCityStartingOut;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './NightCity.module.css';\n\nclass NightCityTheEdge extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.NightCityLivingOnTheEdge}>\n                <div className={styles.NightCityOnTheEdgeSplitter}>\n                    <h1>Living on the Edge:</h1>\n                    <img className={styles.NightCityLivingOnTheEdgePicture + \" \" + pictureAnimation.PictureMobileOnly } alt=\"Living on the Edge\" src=\"assets/Visuals/OnTheEdgeSide.jpg\"/>\n                    <p>To achieve the essence of the 2000's, you need to master three concepts.</p>\n                    <div className={styles.NightCityEdgeRules}>\n                        <div className={styles.ExampleBorder}>\n                            <h2>1) Style over Substance:</h2>\n                            <p>It doesn’t matter how well you do something, as long as you look good doing it.</p>\n                            <p>If you're going to blow it, make sure you look like you planned it that way.</p>\n                            <p>Normally, clothes and looks don’t matter in an adventure - in this world, having a leather armor jacket and mirrorshades is a serious consideration.</p>\n                            \n                            <h2>2) Attitude is Everything</h2>\n                            <p>Think dangerous; be dangerous. Think weak; be weak. Remember, every. one in the 2000's is carrying lots of lethal hardware and high-tech enhancements.</p>\n                            <p>{\"They won’t be impressed by your new H&K smartgun unless you swagger into the club looking like you know how to use it - and are just itching for an excuse.\"}</p>\n                            <p>Never walk into a room when you can stride in. Never look at someone unless you can make it your best \"killer\" look. Use your best \"I'm bad and you aren't.” smile. Don't sit around the flat or cube waiting for the next job.</p>\n                            <p>Get on out and hit the clubs and hangouts.</p>\n                            <p>Make sure you're where the party starts.</p>\n\n                            <h2>3) Live on the Edge</h2>\n                            <p>The Edge is that nebulous zone where risk takers and highriders go. On the Edge, you'll risk your cash, your rep, even your life on something as vague as a principle or a big score. </p>\n                            <p>As a cyberpunk, you want to be the action, start the rebellion, light the fire. Join great causes and fight for big issues. Never drive slow when you can drive fast. Throw yourself up against danger and take it head on. Never play it too safe.</p>\n                            <p>Stay committed to the Edge.</p>\n                        </div>\n                        <div className={styles.NightCityIntroductionPicture}>\n                            <img className={pictureAnimation.InterlacedPicture} alt=\"Living on the Edge\" src=\"assets/Visuals/OnTheEdgeSide.jpg\"/>\n                        </div>\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.NightCityIntroductionText}>\n                    <h1>Okay, so you're ready?</h1>\n\n                    <p>As a cyberpunk, you grab technology by the throat and hang on. You're not afraid to check out the newest in \"enhancements\", cybertech and bio-engineering.</p>\n                    <p>You got interface plugs in your wrists, weapon in your arms, lasers in your eyes, biochip programs in your brain.</p>\n                    <p>You become the car you drive, the gyro you fly, the guns you shoot.</p>\n                    <p>You dive headfirst into the Net, using your mind to hurtle at lightspeed all over a vast network of Data Fortresses and Artifical Intelligences.</p>\n                    <p>With cyborged fingers you pick computer locks; with enhanced senses, you see into the Future.</p>\n                    { /* Not happy with this. Shouldn't be an extra picture. */ }\n                    <img className={pictureAnimation.PictureMobileOnly } \n                        alt=\"Living on the Edge\" src=\"assets/Visuals/OnTheEdge.jpg\"\n                    />\n                    <div className={styles.NightCityOnTheEdgePicture}>\n                        <img className={pictureAnimation.InterlacedPicture} \n                            alt=\"Living on the Edge\" src=\"assets/Visuals/OnTheEdge.jpg\"\n                        />\n                    </div>\n                    <p>Cyberpunk is also an attitude.</p>\n                    <p>You wear the most in clothes, know the right people and follow the right crowds.</p>\n                    <p>You plan your crimes in the most select clubs and bars. Your enemies are Corporate armies, cyborg bike gangs, power-armored assassins and computer-wired Netheads.</p>\n                    <p>Your weapons are nerve, streetsmarts, bravado and the Minami 10 smartgun on your hip.</p>\n                    <p>Are you ready now? Of course you are.</p>\n                    <h2><u>Now</u> you're Cyberpunk.</h2>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NightCityTheEdge;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './NightCity.module.css';\n\nclass NightCityHistory extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.NightCityIntroduction}>\n\t\t\t\t<div className={styles.NightCityIntroductionText}>\n\t\t\t\t\t<h1>History of Night City:</h1>\n\t\t\t\t\t<img className={styles.FirstSessionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"The Corporate Center.\" title=\"The Corporate Center.\" src=\"assets/Visuals/History.jpg\"/>\n                    <p>Night City was founded rather recently as cities go. Before 1994, the city was merely a clutter of unincorporated suburban sprawl between San Francisco and Los Angeles.</p>\n                    <p>During the Collapse, an enterprising land developer named Richard Night bought up the majority of what was later to become the Corporate Center and City Center areas. He proposed to start a new, safe, clean corporate city, free of crime and urban blight.</p>\n                    <p>By offering lucrative tax packages to several major corporations (PetroChem, for example, had established drilling rights off the coast), he was able to establish a strong economic base as well as an instant population of corporate employees.</p>\n                    <p>As planned, Night City was a clean, open community with rapid transit, and safe streets.</p>\n                    <p> Unfortunately, Night's plan went awry. In using his own advanced building techniques and materials, he excluded a number of established unions and construction firms, many of these controlled by organized crime syndicates.</p>\n                    <p>Four years after initial construction, the powerful gang bosses murdered Night and took over the Night City project.</p>\n                    <p>Between selling contracts to their cronies, setting up drug and extortion rackets, and generally inviting the scum of the Collapse into the area, the gangs managed to turn a relatively clean, modern city into an embattled war zone. </p>\n                    <p>Crime, drugs, prostitution, random violence and cybernetic terrorism soon became the rule of law. By 2005, the name Night City had taken on a grim and deadly new meaning.</p>\n                    <p>By 2009, the Corps decided they'd had enough. In lightning strikes, covert Solo squads eliminated most of the gang leaders and established a Corporation-controlled City Council.</p>\n                    <p>The newly elected Council, faced with chaos in the City, deputized Corporate security forces and allowed them full authority within the City limits. The Corporate and City centers were cleaned out and restored to their pristine state.</p>\n                    <p>The old Harbor Mall (originally built in the 1980's), was demolished and the New Harbor Mall constructed.</p>\n                    <p>The Night City Mayor's Office owes everything to the Corporations, and accordingly, the Corps can do anything they want in Night City.</p>\n                    <p>The current Mayor of Night City is Mbole Ebunike, a well-trained corporate puppet recently elected for his second term in 2020</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.NightCityIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"The Corporate Center.\" title=\"The Corporate Center.\" src=\"assets/Visuals/History.jpg\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NightCityHistory;\n","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './NightCity.module.css';\n\nclass NightCityAmerica extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.NightCityIntroduction}>\n\t\t\t\t<div className={styles.NightCityIntroductionText}>\n\t\t\t\t\t<h1>America in 2020:</h1>\n\t\t\t\t\t<img className={styles.FirstSessionPictureMobile + \" \" + pictureAnimation.PictureMobileOnly} alt=\"Map of the United States.\" src=\"assets/Visuals/MapOfUS.png\"/>\n\t\t\t\t\t<p>If you listen to the Euro-trash, the United States is a seething hellhole of drug addicts, psychopathic killers and wandering homeless packs armed to the teeth.</p>\n\t\t\t\t\t<p>If you listen to the corporate-controlled media, it's a place of \"new challenges and exciting beginnings.</p>\n\t\t\t\t\t<p>If you listen to the punk on the Street, it's neither one, but a mix of both.</p>\n\t\t\t\t\t\n\t\t\t\t\t<h3>The Collapse:</h3>\n\t\t\t\t\t<p>Total economic, social, and political breakdown began with the Crash of '94 and resulted in the disintegration of American society and its standing as a world superpower.</p>\n\t\t\t\t\t<p>The subsequent years would come to be known as the Collapse, and would see the deaths of roughly 100,000,000 people as a result of plagues, mutated viruses, terrorist nuclear attacks and complete ecological collapse.</p>\n\t\t\t\t\t<p>The disintegration of NATO and the hardline foreign policy pursued by the \"Gang of Four\" isoated the United States politically and economically; with trade wars increasing the suffering of the American people.</p>\n\t\t\t\t\t\n\t\t\t\t\t<h3>The Environment:</h3>\n\t\t\t\t\t<p> During the last thirty years, a series of ecological disasters has taken the greatest toll on the United State's infrastructure.</p>\n\t\t\t\t\t<p>Global warming has melted much of the polar icecaps, resulting in higher sea level. Large parts of the East Coastand the South are now underwater or partially swampland; New Orleans is on stilts and Houston has an alligator population.</p>\n\t\t\t\t\t<p>Rising temperatures have thawed out much of southem Alaska, central Canada and the upper U.S.;</p>\n\t\t\t\t\t\n\t\t\t\t\t<h3>The Government:</h3>\n\t\t\t\t\t<p>The United States is pretty much a nation in name only. Of its three branches, the Executive Branch is the only effective part of the Federal Government: it controls the military. </p>\n\t\t\t\t\t<p>The Executive Branch is governed by a host of advisors and appointed agency heads; for the last three Administrations, the President has been chosen in a backroom. </p>\n\t\t\t\t\t<p>It doesn’t matter, only 12.6% of the U.S. population bothers to vote any more, and that's only in the states that are still part of the Union. Both of the Californias, Texas, Utah, Alaska and Nevada have become what are called Free States.</p>\n\t\t\t\t\t<p>They pretty much set their own rules and write their own laws while giving lip service to the idea of a United States (as long as the honchos in Washington don't try to tell them what to do).</p>\n\t\t\t\t\t\n\t\t\t\t\t<h3>The Cities:</h3>\n\t\t\t\t\t<p>Good News: Most American cities survived the Collapse. Bad News: Most unincorporated or non-urban areas were obliterated. </p>\n\t\t\t\t\t<p>The key was inertia. No matter how many problems (economic, social, whatever) a big city had, it had far more resources than a small town. </p>\n\t\t\t\t\t<p>The road back from the Collapse has been a long one, filled with famine, plague, violence and destruction. It hasn’t been pretty. But it is getting better. </p>\n\t\t\t\t\t<p>No matter what the Euro-media tells you. Even Detroit (voted the Most Dangerous Cityof 2019 by NET 54's YOU DECIDE! poll), has a few nice areas.</p>\n\t\t\t\t\t\n\t\t\t\t\t<h3>The Wrapup:</h3>\n\t\t\t\t\t<p>So much for an overview of the American scene today. But face it, this only describes the America you get from a fast holo shot taken out the window of a speeding AV. It doesn’t give you a slice into the minds of the people themselves, just the environment they live in.</p>\n\t\t\t\t\t<p>For that, you'll need to get down on the Street and meet a few. The invitation’s open. Don’t take the word of the Europress on it. Go on out there and meet the real America today; the people you live with.</p>\n\t\t\t\t\t<p>Get to know them. Its a tough world out there, and you oughta know the neighbors.</p>\n\t\t\t\t\t<h3>Referee note: Check out the Night City sourcebook if you want to learn more about Night City.</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.NightCityIntroductionPicture}>\n\t\t\t\t\t<img className={pictureAnimation.InterlacedPicture} alt=\"Night City from NCU.\" title=\"Night City as seen from NCU.\" src=\"assets/Visuals/MapOfUS.png\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NightCityAmerica;\n","import React, { Component } from 'react';\nimport styles from './NightCity.module.css';\n\nclass NightCitySlang extends Component<{}> {\n\n\tpublic render() {\n\t\treturn (\n            <div>\n                <div className={styles.NightCityIntroductionText}>\n\t\t\t\t\t<h1>Slang and terms:</h1>\n                    <p>Let's chat, choomba. It's a large world out there, and you need to know the lingo. You can't take your input or local Call-girl to the ripperdoc when you are nearly out of eddies and a fodder is waiting to flatline you.</p>\n                </div>\n                <div className={styles.SlangSplit}>\n                    <div><h3>ACPA:</h3><p> Assisted Combat Personell Armor aka Power Armor.</p></div>\n                    <div><h3>Amped Out:</h3><p> Fatigue after being under the influence of combat drugs.</p></div>\n                    <div><h3>AV/Aerodynes:</h3><p> Aerovehicles and aerodynes are flying cars.</p></div>\n                    <div><h3>Bag man:</h3><p> Fixers who orchestrate deals with mercenaries.</p></div>\n                    <div><h3>Borgs / Full body conversations:</h3><p> People who have opted to replace most of their body with cybernetic conversions.</p></div>\n                    <div><h3>Badges:</h3><p> Slang for the Night City Police Department (NCPD).</p></div>\n                    <div><h3>Big hats:</h3><p> State police men.</p></div>\n                    <div><h3>Bioware:</h3><p> Body enhancements that are based around biology instead of electronics.</p></div>\n                    <div><h3>Body Sculpting:</h3><p> Altering your appearance through cosmetic surgery and cybernetics.</p></div>\n                    <div><h3>Body banks:</h3><p> Medical centers that store, preserve and grow body parts.</p></div>\n                    <div><h3>Boosters:</h3><p> Boostergang members who use cyberware, leather jackets and has an affinity for violence.</p></div>\n                    <div><h3>Braindance:</h3><p> A type of recorded immmersive virtual reality where you feel all sensations of the recorder.</p></div>\n                    <div><h3>Brain Potato:</h3><p> Braindance addicts.</p></div>\n                    <div><h3>Button head:</h3><p> Addicts who stimulate their brain through interface sockets.</p></div>\n                    <div><h3>Cams:</h3><p> Braindance recordings.</p></div>\n                    <div><h3>Call girls:</h3><p> High-priced prositutes.</p></div>\n                    <div><h3>Choomba / Choombatta:</h3><p> Neo-African slang for friend/family member.</p></div>\n                    <div><h3>Chippin' in:</h3><p> Getting your first cyberware.</p></div>\n                    <div><h3>Chairjocks:</h3><p> Netrunner.</p></div>\n                    <div><h3>CHOOH2:</h3><p> Superfuel of the future engineered by Biotechnica and licensed by Petrochem.</p></div>\n                    <div><h3>Chrome:</h3><p> Cyberware</p></div>\n                    <div><h3>Chromed out:</h3><p> Being full of Cyberware.</p></div>\n                    <div><h3>Chrome bangers:</h3><p> Slang for the C-SWAT aka Cyberpsycho Squad / MAX-TAC who take down and kill Cyberpsychos. </p></div>\n                    <div><h3>Combat drugs:</h3><p> Designer drugs created to make you into a killer.</p></div>\n                    <div><h3>Combat zone:</h3><p> Places of urban decay in cities characterized by high crime, violence and tattered infrastructure.</p></div>\n                    <div><h3>Credchip / Chop:</h3><p> A chip with eurodollars.</p></div>\n                    <div><h3>Crystal Jock:</h3><p> Netrunner.</p></div>\n                    <div><h3>Cyberpsychos:</h3><p> Individuals who are mentally ill due to excessive cyberware implants.</p></div>\n                    <div><h3>Cyberdeck:</h3><p> A hardware device required for you to enter Cyberspace aka The Net.</p></div>\n                    <div><h3>Data Fortress:</h3><p> 3D Representation of a computer system on the net. Usually looks like something out of Tron.</p></div>\n                    <div><h3>Dataterm:</h3><p> Public information access computers placed in heavily armored cases on most US street corners.</p></div>\n                    <div><h3>Dirtgirl / Dirtboy:</h3><p> Orbital slang for earthmen and women.</p></div>\n                    <div><h3>Dock:</h3><p> Intercourse.</p></div>\n                    <div><h3>Dragon Piss:</h3><p> Any form of oriental beer.</p></div>\n                    <div><h3>Dream time:</h3><p> Being jailed and confined inside a braindance.</p></div>\n                    <div><h3>Eddies:</h3><p> Eurodollars / Eurobucks.</p></div>\n                    <div><h3>Edgerunners:</h3><p> People living on The Edge.</p></div>\n                    <div><h3>Eurobucks:</h3><p>Other word for Eurodollars.</p></div>\n                    <div><h3>Eurodollars:</h3><p>The european currency unit, which is one of the most used currencies in Night City and all over the world. </p></div>\n                    <div><h3>Exotics:</h3><p> Biosculpted individuals who typically have non-human features like fur, fangs and/or tails.</p></div>\n                    <div><h3>Face:</h3><p> Interface or jacking into the net.</p></div>\n                    <div><h3>Flatbacker:</h3><p> A prostitute.</p></div>\n                    <div><h3>Flatline:</h3><p> To kill.</p></div>\n                    <div><h3>Fixers:</h3><p> Information brokers and a class. Make deals and facilitates mercenaries.</p></div>\n                    <div><h3>Fodder:</h3><p> Derogatory term for the Solo class.</p></div>\n                    <div><h3>Gonks:</h3><p> Idiots.</p></div>\n                    <div><h3>Gonked out:</h3><p> Broken/Defective.</p></div>\n                    <div><h3>Handle:</h3><p> Your working name on the street.</p></div>\n                    <div><h3>Hexed:</h3><p> Cyberpsychosis or obsessed with the net.</p></div>\n                    <div><h3>Hotdoggers:</h3><p> Inexperienced netrunners.</p></div>\n                    <div><h3>Hosho Kaisha:</h3><p> Japanese slang for hired muscle.</p></div>\n                    <div><h3>I.C.E:</h3><p> Intrusion Countermeasure Electronics.</p></div>\n                    <div><h3>Input:</h3><p> Girlfriend.</p></div>\n                    <div><h3>Joygirl/boys:</h3><p> Prostitutes who have been sculpted to meet the user.</p></div>\n                    <div><h3>Kibble:</h3><p> Cheaply produced food that resemble cat/dog food.</p></div>\n                    <div><h3>Linefoot:</h3><p> Nomad slang for anyone who isn't a nomad.</p></div>\n                    <div><h3>Meat Puppets:</h3><p> Prostitutes who are connected to brain dances while being banged.</p></div>\n                    <div><h3>Metal Head:</h3><p> People undergone full cyborg conversion.</p></div>\n                    <div><h3>Mizu Shobai:</h3><p> Water industries like nightclubs, bars, resturants.</p></div>\n                    <div><h3>Monkey:</h3><p> ACPA user who isn't well trained.</p></div>\n                    <div><h3>NCART:</h3><p> Night City Area Rapid Transit aka monorail train system.</p></div>\n                    <div><h3>Netwatch:</h3><p> Policing organization looking in The Net for illegal activities. They use programs to kill or maim opposition.</p></div>\n                    <div><h3>Netpig:</h3><p> Derogatory term for Netwatch.</p></div>\n                    <div><h3>Nudies:</h3><p> People without power armor or exoskeletons.</p></div>\n                    <div><h3>Output:</h3><p> Boyfriend.</p></div>\n                    <div><h3>Paintboys:</h3><p> Yakuza</p></div>\n                    <div><h3>Pastaboys:</h3><p> Italian Mafia.</p></div>\n                    <div><h3>Panzerboys:</h3><p> Smugglers.</p></div>\n                    <div><h3>Polymer-One shots:</h3><p> Cheap unreliable non-reloadable handguns.</p></div>\n                    <div><h3>Posergangs:</h3><p> A gang that sculpe their body to look a certain way.</p></div>\n                    <div><h3>Psychogang:</h3><p> A combat gang that is very near cyberpsychosis.</p></div>\n                    <div><h3>Puppets:</h3><p> Gang members who have sold out to the corpos or organized crime syndicates.</p></div>\n                    <div><h3>Reality junkies:</h3><p> Addicts to Virtual Reality, braindance, The Net or video games.</p></div>\n                    <div><h3>Ripperdocs:</h3><p> Surgeons who specialize in installing Cyberware.</p></div>\n                    <div><h3>Rin Tin Tin:</h3><p> A robot dog, usually a police K9.</p></div>\n                    <div><h3>Ronins:</h3><p> Freelance mercenaries.</p></div>\n                    <div><h3>Samurai:</h3><p> Corporate assassin or mercenary, hired to hit corporate property or make strikes against other corpo holdings.</p></div>\n                    <div><h3>Screamsheets:</h3><p> Newspapers that can be printed at Dataterms.</p></div>\n                    <div><h3>Shards:</h3><p> Cyberchips that store programs.</p></div>\n                    <div><h3>Skagman:</h3><p> Wired illegal seller.</p></div>\n                    <div><h3>Spook:</h3><p> An intelligence or espionage agent</p></div>\n                    <div><h3>Taking sake:</h3><p> Working for Japanese organizations or crime syndicates.</p></div>\n                    <div><h3>Tiger:</h3><p> Military netrunner.</p></div>\n                    <div><h3>Throwbacks:</h3><p> Another word for Exotics.</p></div>\n                    <div><h3>Vatjobs:</h3><p> People with excessive cyberware replacements.</p></div>\n                    <div><h3>Wilson:</h3><p> A screwup.</p></div>\n                    <div><h3>Zipgun:</h3><p> Home made firarm.</p></div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default NightCitySlang;\n","export interface Corporation {\n    name: string;\n    shortname: string;\n    logo: string;\n    description: string;\n    headquarters: string;\n    regionalOffices: string[];\n    majorShareholder: string;\n    employees: {\n        worldwide: string;\n        troops: string;\n        covert: string;\n    },\n    background: string;\n    resources: string;\n}\n\nexport class CorporationService {\n\tpublic static async getCorporations(): Promise<Corporation[]> {\n\t\treturn fetch('assets/NightCity/Corporations.json')\n\t\t.then((s) => s.json().then((fetched: { corporations: Corporation[] }) => {\n                console.log(JSON.stringify(fetched.corporations));\n\t\t\t\treturn fetched.corporations;\n\t\t\t})\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport pictureAnimation from '../StyleModules/Pictures.module.css';\nimport styles from './NCCorporations.module.css';\nimport animation from '../StyleModules/Animations.module.css';\nimport { Corporation, CorporationService } from '../Services/CorporationService';\n\ninterface CorporationState {\n    corporations: Corporation[];\n    selected: Corporation | null;\n}\n\nclass NightCityCorporations extends Component<{}, CorporationState> {\n    public constructor(props: {}) {\n        super(props);\n\n        this.state = {\n            corporations: [],\n            selected: null\n        }\n\n        this.getCorporations();\n    }\n\n    public async getCorporations() {\n        this.setState({\n            corporations: await CorporationService.getCorporations()\n        });\n    }\n\n    public setCorporation = (corpo: Corporation) => {\n        this.setState({\n            selected: corpo\n        });\n    }\n\n    public clearCorpo = () => {\n        this.setState({\n            selected: null\n        });\n    }\n\n    public renderCorporationList = () => {\n        return (\n            <div className={styles.NightCityCorporations}>\n                <div>\n                    <div className={animation.FadeIn}>\n                        <h1>The Corporations of Night City:</h1>\n                        <p>The modern corporations of 2020 are much like the corporations of the late 20th century, only much larger and more fully autonomous. They are very nearly nations in themselves, with their own laws, cities, factories and armies. </p>\n                        <p>Most corporations in 2020 are multinational; i.e., they have branches and operations all over the world. These branches may be as small as a research facility or sales office, or as large as a major manufacturing facility and security center.</p>\n                        <p>Here are some your everyday megacorporations in Night City:</p>\n                        <hr/>\n                    </div>\n                    <div className={styles.NightCityCorporationGrid + \" \" + animation.FadeInSlow}>\n                        {this.state.corporations.map((corp) => {\n                            return (\n                                <button onClick={() => { this.setCorporation(corp); }}>{corp.shortname}</button>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className={styles.NightCityCorporationPicture + \" \" + animation.FadeInVerySlow}>\n                    <img className={pictureAnimation.InterlacedPicture} alt=\"Corporate Center.\" title=\"Corporate Center.\" src=\"assets/Visuals/Corporations.png\"/>\n                </div>\n            </div>\n        )\n    }\n\n    public renderCorporation = () => {\n        let corpo = this.state.selected;\n\n        if(corpo != null) {\n            return (\n                <div className={styles.PadOutCorporation + \" \" + animation.FadeIn}>\n                    <div className={styles.BackButton} onClick={this.clearCorpo}>\n                        > { \"[ Back ]\".split(\" \").map((splitButton) => {\n                            return <span> {splitButton} </span>\n                        })}\n                    </div>\n                    <div className={styles.BackButtonMobileBackground}>\n                        <button className={styles.BackButtonMobile} onClick={this.clearCorpo}>Back</button>\n                    </div>\n                    <h1 className={styles.NoMarginHeader}>Corporation Profile:</h1>\n                    <hr/>\n\n                    <div className={styles.NightCityCorporationChosen}>\n                        <div>\n                            <h1 className={styles.NoMarginHeader}>{corpo.name}</h1>\n                            <h3>{corpo.description}</h3>\n                            <div className={styles.NightCityCorporationLogo}>\n                                <img className={pictureAnimation.InterlacedPicture} alt={corpo.name} src={\"assets/Visuals/CorporationLogos/\" + corpo.logo}/>\n                            </div>\n                            <h2>General Information:</h2>\n                            <p>Headerquarters: {corpo.headquarters}</p>\n                            <p>Major stockholder: {corpo.majorShareholder}</p>\n                            <p>Regional Offices:</p>\n                            <ul className={styles.RegionalOfficeSplit}>\n                                {corpo.regionalOffices.map((office) => {\n                                    return <li>{office}</li>\n                                })}\n                            </ul>\n                            <p>Employees:</p>\n                            <ul className={styles.EmployeeSplit}>\n                                <span><u>Worldwide:</u> {corpo.employees.worldwide}</span>\n                                <span><u>Troops:</u> {corpo.employees.troops}</span>\n                                <span><u>Covert:</u> {corpo.employees.covert}</span>\n                            </ul>\n\n                        </div>\n                        <div>\n                            <div className={styles.ExampleBorder}>\n                            <h2>Background:</h2>\n                            { corpo.background.split(\"\\n\").map((splitLine) => { return <p>{splitLine}</p> }) }\n\n                            <h2>Resources:</h2>\n                            { corpo.resources.split(\"\\n\").map((splitLine) => { return <p>{splitLine}</p> }) }\n\n                        </div>\n                    </div>\n                </div>\n                <hr/>\n\n            </div>\n            )\n        }\n\n        return \"\";\n    }\n\n\tpublic render() {\n        if(this.state.selected === null) {\n            return this.renderCorporationList();\n        }\n        \n        return this.renderCorporation()\n\t}\n}\n\nexport default NightCityCorporations;\n","import React, { Component } from 'react';\nimport styles from './NCMaps.module.css';\n\nclass NightCityMaps extends Component<{}> {\n\n    public openMapInNewWindow = () => {\n        window.open(\"assets/Visuals/MapBlackBG.jpg\", \"_blank\"); \n    }\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.NightCityMaps}>\n                <h1>Map of Night City:</h1>\n                <p>Night City is large and you need a way to get around. Your local DataTerm has maps of course, or maybe you have cyberware for that.</p>\n                <p>In any case a map is necessary, old fashioned way or digitally.</p>\n                <p>The <i>Night City Sourcebook</i> has <u>a lot</u> of places to visit with fully detailed maps of each section of the city and <u>every</u> building is described in detail.</p>\n                <p>Please take a look for a even more detailed look at each section of the city.</p>\n                <img alt=\"Map of Night City\" src=\"assets/Visuals/Map.png\" onClick={this.openMapInNewWindow} className={styles.MapPicture}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NightCityMaps;\n","import React, { Component } from 'react'\nimport animations from '../StyleModules/Animations.module.css';\n\nclass Loading extends Component {\n\n  render() {\n    return (\n        <div className={animations.loading}><div></div><div></div></div>\n      )\n  }\n}\n\nexport default Loading","import React, { Component } from 'react';\nimport Classes from '../Classes/Classes'\nimport Interlock from '../InterlockSystem/Interlock';\nimport { MainSection } from '../MainMenu/MainMenu';\nimport styles from './Mainframe.module.css';\nimport \"./ConsoleText.css\";\nimport FridayNightFirefight from '../FNFF/FridayNightFirefight';\nimport TraumaTeam from '../TraumaTeam/TraumaTeam';\nimport Cyberware from '../Cyberware/Cyberware';\nimport NightCity from '../NightCity/NightCity';\n\nenum Feeds {\n\tRealspace = \"Realspace\",\n\tNetspace = \"Netspace\"\n}\n\ninterface IMainframeProps {\n\tcurrentSection: MainSection;\n}\n\ninterface IMainframeState {\n\tselectedVideo: Feeds\n}\n\nclass Mainframe extends Component<IMainframeProps, IMainframeState> {\n\tpublic constructor(props: IMainframeProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedVideo: Feeds.Realspace\n\t\t};\n\t}\n\n\tpublic switchFeed = () => {\n\t\tlet videoFeed = Feeds.Netspace;\n\n\t\tif(this.state.selectedVideo !== Feeds.Realspace)\n\t\t\tvideoFeed = Feeds.Realspace;\n\n\t\tthis.setState({\n\t\t\tselectedVideo: videoFeed\n\t\t});\n\t}\n\n\tpublic getFeed = () => {\n\t\tlet videoLocation = \"\";\n\t\tif(this.state.selectedVideo === Feeds.Realspace) {\n\t\t\tvideoLocation = \"assets/Background/OutsideVideo.webm\";\n\t\t}\n\t\telse {\n\t\t\tvideoLocation = \"assets/Background.mp4\"\n\t\t}\n\t\treturn <video loop muted autoPlay className={styles.fullscreenbgvideo} src={videoLocation}/>\n\t}\n\n\tpublic renderSection() {\n\t\tswitch (this.props.currentSection) {\n\t\t\tcase MainSection.Classes:\n\t\t\t\treturn <Classes/>\n\t\t\tcase MainSection.InterlockSystem:\n\t\t\t\treturn <Interlock/>\n\t\t\tcase MainSection.NightCity:\n\t\t\t\treturn <NightCity />\n\t\t\tcase MainSection.FNFF:\n\t\t\t\treturn <FridayNightFirefight />\n\t\t\tcase MainSection.TraumaTeam:\n\t\t\t\treturn <TraumaTeam />\n\t\t\tcase MainSection.Cyberware:\n\t\t\t\treturn <Cyberware />\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1 className=\"consoleText\">Welcome, netrunner.</h1>\n\t\t\t\t\t\t<div className={styles.mainframeVideo}>\n\t\t\t\t\t\t\t<span className={styles.videoDescription}>{'>'} Current view from:</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tObject.values(Feeds).map((feed) => {\n\t\t\t\t\t\t\t\t\treturn <span key={feed} className={styles.videoNav + \" \" + (this.state.selectedVideo === feed ? styles.activeVideo : \"\")} onClick={this.switchFeed}>{feed}</span>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{this.getFeed()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t}\n\t}\n\n\tpublic render() {\t\t\n\t\treturn (\n\t\t\t<div className={styles.Mainframe}>\n\t\t\t\t{this.renderSection()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Mainframe;\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { ISong } from './Player';\nimport PlayerControls from './PlayerControls';\nimport styles from './PlayerControls.module.css';\n\nenum PlayerState {\n\tUnstarted,\n\tEnded,\n\tPlaying,\n\tPaused,\n\tBuffering,\n\tVideoCued\n}\n\ninterface IPlayerMiddlewareProps {\n\tsong: ISong | null;\n\tswitchToNextSong: () => void;\n\tswitchToPreviousSong: () => void;\n\tminimized: boolean;\n\ttoggleMinimize: () => void;\n}\n\ninterface IPlayerMiddlewareState {\n\tisPlaying: boolean;\n\tcontroller: IController | null;\n}\n\nexport default class PlayerMiddleware extends Component<IPlayerMiddlewareProps, IPlayerMiddlewareState> {\n\tprivate playerOpts: any = {\n\t\theight: '0',\n\t\tplayerVars: {\n\t\t\tautoplay: 1\n\t\t},\n\t\twidth: '0'\n\t}\n\n\tpublic constructor(props: IPlayerMiddlewareProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcontroller: null,\n\t\t\tisPlaying: true,\n\t\t}\n\t}\n\n\tpublic playMusic = () => {\n\t\tif(this.state.controller != null) {\n\t\t\tthis.state.controller.playVideo();\n\t\t\tthis.setState({\n\t\t\t\tisPlaying: true\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic pauseMusic = () => {\n\t\tif(this.state.controller != null) {\n\t\t\tthis.state.controller.pauseVideo();\n\t\t\tthis.setState({\n\t\t\t\tisPlaying: false\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic setPlayerController = (event: any) => {\n\t\tthis.setState({\n\t\t\tcontroller: event.target as IController\n\t\t});\n\t}\n\n\t// When the next button is pressed while the player is playing -> Automagically play the new song.\n\tpublic onYTChange = (event: {target: any, data: number}) => {\n\t\tif(event.target.getPlayerState() === PlayerState.VideoCued) {\n\t\t\tthis.playMusic();\n\t\t}\n\t\telse if(event.target.getPlayerState() === PlayerState.Unstarted) {\n\t\t\tthis.props.switchToNextSong();\n\t\t}\n\t}\n\n\tpublic setIsPlaying = (status: boolean) => {\n\t\tthis.setState({\n\t\t\tisPlaying: status\n\t\t});\n\t}\n\n\tpublic render() {\n\t\tif(this.props.song != null) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className={styles.invisibleMiddleware} >\n\t\t\t\t\t\t<YouTube videoId={this.props.song.id} opts={this.playerOpts} onReady={this.setPlayerController} onStateChange={this.onYTChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<PlayerControls \n\t\t\t\t\t\ttoggleMinimize={this.props.toggleMinimize} \n\t\t\t\t\t\tminimized={this.props.minimized} \n\t\t\t\t\t\tswitchToNextSong={this.props.switchToNextSong} \n\t\t\t\t\t\tswitchToPreviousSong={this.props.switchToPreviousSong}\n\t\t\t\t\t\tsong={this.props.song} \n\t\t\t\t\t\tplayMusic={this.playMusic}\n\t\t\t\t\t\tpauseMusic={this.pauseMusic}\n\t\t\t\t\t\tisPlaying={this.state.isPlaying}\n\t\t\t\t\t\tsetIsPlayingStatus={this.setIsPlaying}\n\t\t\t\t\t\tcontroller={this.state.controller}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport interface IController {\n\tpauseVideo: () => void;\n\tplayVideo: () => void;\n\tgetCurrentTime: () => number;\n\tseekTo: (seconds: number, allowSeekAhead: boolean) => void;\n\tgetDuration: () => number;\n\tgetPlayerState: () => PlayerState;\n}\n","import { IAlbum, ISong } from '../Player/Player';\n\nexport class PlayerService {\n\tpublic static async getAlbums(): Promise<IAlbum[]> {\n\t\treturn fetch('Music.json')\n\t\t.then((s) => s.json()\n\t\t\t.then((fetched: { albums: IAlbum[] }) => {\n\t\t\t\treturn fetched.albums;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic static async getSongs(album: IAlbum): Promise<ISong[]> {\n\t\treturn fetch('assets/Albums/'+ album.folderName +'/Songs.json')\n\t\t.then((s) => s.json()\n\t\t\t.then((fetched: { songs: ISong[] }) => {\n\t\t\t\treturn fetched.songs;\n\t\t\t})\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport styles from './AlbumList.module.css';\nimport { IAlbum } from './Player';\n\ninterface IAlbumListProps {\n\talbums: IAlbum[];\n\tsetShownAlbum: (album: IAlbum) => void;\n}\n\nexport default class AlbumList extends Component<IAlbumListProps, {}> {\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.AlbumListWrapper}>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h1>Albums</h1>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className={styles.AlbumList}>\n\t\t\t\t\t\t{this.props.albums.map((album) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={album.name}>\n\t\t\t\t\t\t\t\t\t<button onClick={this.props.setShownAlbum.bind(this, album)} className={styles.Album}>{album.name}</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from 'react';\nimport { IAlbum, ISong } from './Player';\nimport styles from './PlayerArtwork.module.css';\n\ninterface IPlayerArtworkProps {\n\talbum: IAlbum | null;\n\tsong: ISong | null;\n}\n\ninterface IPlayerArtworkState {\n\tcurrentShownArtwork: number;\n}\n\nexport default class PlayerArtwork extends Component<IPlayerArtworkProps, IPlayerArtworkState> {\n\tprivate interval = 0;\n\n\tpublic constructor(props: IPlayerArtworkProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentShownArtwork: 0\n\t\t};\n\t}\n\n\tpublic setSlideshowInterval = () => {\n\t\tthis.interval = window.setInterval(() => {\n\t\t\tif(this.props.song != null && this.props.song.artwork.length !== this.state.currentShownArtwork) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentShownArtwork: this.state.currentShownArtwork + 1\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if(this.props.song != null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentShownArtwork: 0\n\t\t\t\t});\n\t\t\t}\n\t\t}, 30000);\n\t}\n\n\tpublic componentWillUnmount() {\n\t\twindow.clearInterval(this.interval);\n\t}\n\n\tpublic render() {\n\t\tif(this.props.album != null && this.props.song != null) {\n\t\t\tconst path = \"assets/Albums/\" + this.props.album.folderName + \"/Artwork/\"\n\t\t\treturn (\n\t\t\t\t<div className={styles.PlayerArtwork}>\n\t\t\t\t\t<img alt={this.props.album.name} src={path + this.props.song.artwork[this.state.currentShownArtwork].filename} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className={styles.PlayerArtwork}>\n\t\t\t\t<h1>No song selected</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}","import 'material-icons';\nimport React, { Component } from 'react'\nimport { ISong, PlayerInterface } from './Player';\nimport styles from './Player.module.css';\n\ninterface IPlayerHeaderbarProps {\n\tswitchToInterface: (target: PlayerInterface) => void;\n\ttoggleMinimize: () => void;\n\tminimized: boolean;\n\tclosePlayer: () => void;\n\thasSong: ISong | null;\n}\n\nexport default class PlayerHeaderbar extends Component<IPlayerHeaderbarProps, {}> {\n\n\tpublic constructor(props: IPlayerHeaderbarProps) {\n\t\tsuper(props);\n\t}\n\n\tpublic switchToPlaying = () => {\n\t\tthis.props.switchToInterface(PlayerInterface.NowPlaying);\n\t}\n\n\tpublic switchToAlbums = () => {\n\t\tthis.props.switchToInterface(PlayerInterface.Albums);\n\t}\n\n\tpublic switchToLyrics = () => {\n\t\tthis.props.switchToInterface(PlayerInterface.Lyrics);\n\t}\n\n\tpublic renderMinimizeButton() {\n\t\tif(this.props.hasSong != null) { \n\t\t\treturn (\n\t\t\t\t<li onClick={this.props.toggleMinimize}>_</li>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic render() {\n\t\tif(this.props.minimized !== true) {\n\t\t\treturn(\n\t\t\t\t<nav className={styles.HeaderBar}>\n\t\t\t\t\t<div className={styles.HeaderBarButtons}>\n\t\t\t\t\t\t<li onClick={this.switchToPlaying}>Now playing</li>\n\t\t\t\t\t\t|\n\t\t\t\t\t\t<li onClick={this.switchToAlbums}>Albums</li>\n\t\t\t\t\t\t|\n\t\t\t\t\t\t<li onClick={this.switchToLyrics}>Lyrics</li>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.HeaderBarButtons}>\n\t\t\t\t\t\t|\n\t\t\t\t\t\t{this.renderMinimizeButton()}\n\t\t\t\t\t\t<li onClick={this.props.closePlayer}>X</li>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t)\t\n\t\t}\n\t\treturn null;\n\t}\n}","import 'material-icons';\nimport React, { Component } from 'react';\nimport { ISong } from './Player';\nimport styles from './PlayerControls.module.css';\nimport { IController } from './PlayerMiddleware';\n\ninterface IPlayerControlsProps {\n\tsong: ISong | null;\n\tminimized: boolean;\n\tcontroller: IController | null;\n\tisPlaying: boolean;\n\tswitchToNextSong: () => void;\n\tswitchToPreviousSong: () => void;\n\tplayMusic: () => void;\n\tpauseMusic: () => void;\n\tsetIsPlayingStatus: (status: boolean) => void;\n\ttoggleMinimize: () => void;\n}\n\ninterface IPlayerControlsState {\n\tcurrentTime: number;\n}\n\nexport default class PlayerControls extends Component<IPlayerControlsProps, IPlayerControlsState> {\n\tprivate intervalTimer = 0\n\tpublic constructor(props: IPlayerControlsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentTime: 0,\n\t\t}\n\n\t\tthis.setSeekerListener();\n\t}\n\n\t/**\n\t * Set seekbar listener which is a simple interval that calls time every second. Maybe better way of doing this? EventListeners?\n\t */\n\tpublic setSeekerListener = () => {\n\t\tthis.intervalTimer = window.setInterval(() => {\n\t\t\tif(this.props.controller != null) {\n\t\t\t\tconst time = this.props.controller.getCurrentTime();\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentTime: time\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000)\n\t}\n\n\tpublic componentWillUnmount() {\n\t\twindow.clearInterval(this.intervalTimer);\n\t}\n\n\tpublic togglePlayPause = () => {\n\t\tthis.props.isPlaying ? this.props.pauseMusic() : this.props.playMusic();\n\t}\n\n\tpublic onSeek = (event: React.FormEvent<HTMLInputElement>) => {\n\t\tif(this.props.controller != null) {\n\t\t\tthis.props.controller.seekTo(Number.parseInt(event.currentTarget.value, 10), true);\n\t\t}\n\t}\n\n\tpublic renderSeekBar = () => {\n\t\tif(this.props.controller != null && this.state.currentTime != null && this.props.controller.getDuration() != null) {\n\t\t\treturn (\n\t\t\t\t<div className={styles.playerSeekBar}>\n\t\t\t\t\t<input type=\"range\" min=\"0\" max={this.props.controller.getDuration()} value={this.state.currentTime} onChange={this.onSeek} className={styles.playerSeeker} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic switchToNextSongButton = () => {\n\t\tthis.props.switchToNextSong();\n\t\tthis.props.setIsPlayingStatus(true);\n\t}\n\n\tpublic switchToPreviousSongButton = () => {\n\t\tthis.props.switchToPreviousSong();\n\t\tthis.props.setIsPlayingStatus(true);\n\t}\n\n\tpublic renderSongTitle = () => {\n\t\tif(this.props.minimized !== true && this.props.song != null) {\n\t\t\treturn (\n\t\t\t\t<div className={styles.nowPlaying}>\n\t\t\t\t\t<h4>{this.props.song.name} - {this.props.song.artist}</h4>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic renderPlayedWhen = () => {\n\t\tif(this.props.minimized !== true && this.props.song != null) {\n\t\t\treturn (\n\t\t\t\t<div className={styles.nowPlaying}>\n\t\t\t\t\t<p>{this.props.song.wasPlayed}</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic renderMaximizeButton() {\n\t\tif(this.props.minimized) {\n\t\t\treturn (\n\t\t\t\t<li className={\"material-icons \" + styles.MaximizeButton} onClick={this.props.toggleMinimize}>launch</li>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic render() {\n\t\tif(this.props.song != null) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className={styles.playerControls}>\n\t\t\t\t\t\t{this.renderSongTitle()}\n\t\t\t\t\t\t{this.renderPlayedWhen()}\n\t\t\t\t\t\t<div className={styles.controls}>\n\t\t\t\t\t\t\t<span className=\"material-icons\" onClick={this.switchToPreviousSongButton}>skip_previous</span>\n\t\t\t\t\t\t\t<span className=\"material-icons\" onClick={this.togglePlayPause}>{this.props.isPlaying ? 'pause' : 'play_arrow'}</span>\n\t\t\t\t\t\t\t<span className=\"material-icons\" onClick={this.switchToNextSongButton}>skip_next</span>\n\t\t\t\t\t\t\t{this.renderMaximizeButton()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.renderSeekBar()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn null;\n\t}\n}","import React, { Component } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { PlayerService } from '../Services/PlayerService';\nimport AlbumList from './AlbumList';\nimport styles from './Player.module.css';\nimport PlayerArtwork from './PlayerArtwork';\nimport PlayerHeaderbar from './PlayerHeaderbar';\nimport PlayerMiddleware from './PlayerMiddleware';\nimport './PlayerScrollbar.css';\nimport SongList from './SongList';\nimport SongLyrics from './SongLyrics';\n\nexport enum PlayerInterface {\n\tNowPlaying,\n\tAlbums,\n\tSongs,\n\tLyrics\n}\n\ninterface IPlayerState {\n\talbums: IAlbum[];\n\tcurrentAlbum: IAlbum | null;\n\tcurrentSong: ISong | null;\n\tshowList: PlayerInterface;\n\tshownAlbum: IAlbum | null;\n\tminimized: boolean;\n}\n\ninterface IPlayerProps {\n\tclosePlayer: () => void;\n}\n\nexport default class Player extends Component<IPlayerProps, IPlayerState> {\n\t\n\tconstructor(props: IPlayerProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\talbums: [],\n\t\t\tcurrentAlbum: null,\n\t\t\tcurrentSong: null,\n\t\t\tminimized: false,\n\t\t\tshowList: PlayerInterface.Albums,\n\t\t\tshownAlbum: null\n\t\t}\n\n\t\tthis.getAlbums();\n\t}\n\n\tpublic getAlbums() {\n\t\tPlayerService.getAlbums().then( async (incAlbums) => {\n\t\t\tfor (const album of incAlbums) {\n\t\t\t\talbum.songs = await PlayerService.getSongs(album);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\talbums: incAlbums,\n\t\t\t\tcurrentAlbum: incAlbums[0],\n\t\t\t\tcurrentSong: null\n\t\t\t});\n\t\t});\t\n\t}\n\n\tpublic renderListOrThumbnail = () => {\n\t\tswitch(this.state.showList) {\n\t\t\tcase PlayerInterface.Albums:\n\t\t\t\treturn <AlbumList setShownAlbum={this.showThisAlbum} albums={this.state.albums} />\n\t\t\tcase PlayerInterface.Songs:\n\t\t\t\treturn <SongList setInterface={this.switchToInterface} switchToSong={this.changeToSong} album={this.state.shownAlbum} />\n\t\t\tcase PlayerInterface.Lyrics:\n\t\t\t\treturn <SongLyrics song={this.state.currentSong} />\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<PlayerArtwork album={this.state.currentAlbum} song={this.state.currentSong} />\n\t\t\t\t)\n\t\t}\n\t}\n\n\tpublic showThisAlbum = (album: IAlbum) => {\n\t\tthis.setState({\n\t\t\tshowList: PlayerInterface.Songs,\n\t\t\tshownAlbum: album\n\t\t});\n\t}\n\n\t/**\n\t * Play a song. \n\t * Nulls out the current song to restart the song if it is already playing.\n\t */\n\tpublic changeToSong = (album: IAlbum, song: ISong) => {\n\t\tthis.setState({\n\t\t\tcurrentAlbum: album,\n\t\t\tcurrentSong: null\n\t\t}, () => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentSong: song,\n\t\t\t\tshowList: PlayerInterface.NowPlaying\n\t\t\t})\n\t\t});\n\t}\n\n\tpublic changeToNextSong = () => {\n\t\tlet currentSongIndex = 0;\n\t\tif(this.state.currentAlbum != null && this.state.currentSong != null) {\n\t\t\tcurrentSongIndex = this.state.currentAlbum.songs\n\t\t\t.findIndex(x => x.id === (this.state.currentSong != null ? this.state.currentSong.id : ''));\n\n\t\t\tif(this.state.currentAlbum.songs.length !== currentSongIndex) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentSong: this.state.currentAlbum.songs[currentSongIndex+1]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic changeToPreviousSong = () => {\n\t\tlet currentSongIndex = 0;\n\t\tif(this.state.currentAlbum != null && this.state.currentSong != null) {\n\t\t\tcurrentSongIndex = this.state.currentAlbum.songs\n\t\t\t.findIndex(x => x.id === (this.state.currentSong != null ? this.state.currentSong.id : ''));\n\n\t\t\tif(currentSongIndex !== 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentSong: this.state.currentAlbum.songs[currentSongIndex-1]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic switchToInterface = (target: PlayerInterface) => {\n\t\tthis.setState({\n\t\t\tshowList: target\n\t\t});\n\t}\n\n\tpublic toggleMinimize = () => {\n\t\tthis.setState({\n\t\t\tminimized: !this.state.minimized\n\t\t})\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.Player + \" \" + (this.state.minimized ? styles.MinimizedPlayer : styles.ShownPlayer) }>\n\t\t\t\t<PlayerHeaderbar minimized={this.state.minimized} \n\t\t\t\t\t\t\t\tclosePlayer={this.props.closePlayer} \n\t\t\t\t\t\t\t\ttoggleMinimize={this.toggleMinimize} \n\t\t\t\t\t\t\t\thasSong={this.state.currentSong} \n\t\t\t\t\t\t\t\tswitchToInterface={this.switchToInterface} \n\t\t\t\t/>\n\t\t\t\t<div className={styles.relativeTo}>\n\t\t\t\t\t<PerfectScrollbar className={styles.mainArea}>\n\t\t\t\t\t\t{this.renderListOrThumbnail()}\n\t\t\t\t\t</PerfectScrollbar>\n\t\t\t\t\t<PlayerMiddleware \n\t\t\t\t\t\ttoggleMinimize={this.toggleMinimize} \n\t\t\t\t\t\tminimized={this.state.minimized} \n\t\t\t\t\t\tswitchToNextSong={this.changeToNextSong} \n\t\t\t\t\t\tswitchToPreviousSong={this.changeToPreviousSong} \n\t\t\t\t\t\tsong={this.state.currentSong}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport interface IAlbum {\n\tname: string;\n\tfolderName: string;\n\tsongs: ISong[];\n}\n\nexport interface ISong {\n\tname: string;\n\tartist: string;\n\tid: string;\n\tartwork: Array<\n\t\t{\n\t\t\tfilename: string;\n\t\t}\n\t>\n\tlyrics: string;\n\twasPlayed: string;\n}\n\n","import React, { Component } from 'react';\nimport { IAlbum, ISong, PlayerInterface } from './Player';\nimport styles from './SongList.module.css';\n\ninterface ISongListProps {\n\talbum: IAlbum | null;\n\tswitchToSong: (album: IAlbum, song: ISong) => void;\n\tsetInterface: (intrfc: PlayerInterface) => void;\n}\n\nexport default class SongList extends Component<ISongListProps, {}> {\n\n\tpublic constructor(props: ISongListProps) {\n\t\tsuper(props);\n\t}\n\n\tpublic renderList = () => {\n\t\tif(this.props.album != null) {\n\t\t\tlet album = this.props.album;\n\t\t\treturn this.props.album.songs.map((song) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={song.name}>\n\t\t\t\t\t\t<button onClick={this.props.switchToSong.bind(this, album, song)} className={styles.Song}>{song.name} - {song.artist}</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic playAllSongs = () => {\n\t\tif(this.props.album != null) {\n\t\t\tthis.props.switchToSong(this.props.album, this.props.album.songs[0]);\n\t\t}\n\t}\n\t\n\tpublic render() {\n\t\tif(this.props.album != null) {\n\t\t\treturn (\n\t\t\t\t<div className={styles.SongListWrapper}>\n\t\t\t\t\t<h1>{this.props.album.name}</h1>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className={styles.SongList}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className={styles.Song} onClick={this.playAllSongs}>Play all</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{this.renderList()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}","import React, { Component } from 'react';\nimport { ISong } from './Player';\nimport styles from './SongLyrics.module.css';\n\ninterface ISongLyricsProps {\n\tsong: ISong | null;\n}\n\nexport default class SongLyrics extends Component<ISongLyricsProps, {}> {\n\t\n\tpublic constructor(props: ISongLyricsProps) {\n\t\tsuper(props);\n\t}\n\n\tpublic render() {\n\t\tif(this.props.song != null) {\n\t\t\treturn (\n\t\t\t\t<div className={styles.LyricsPadding}>\n\t\t\t\t\t<h1>{this.props.song.name}</h1>\n\t\t\t\t\t<p>{this.props.song.lyrics}</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className={styles.LyricsPadding}>\n\t\t\t\t<h1>No song selected.</h1>\n\t\t\t\t<p>Lyrics unavailable.</p>\n\t\t\t</div>\n\t\t)\n\t}\n}","export class FileService {\n\n\tpublic static async getFiles() {\n\t\t const files = fetch('MainframeStructure.json');\n\t\t return files.then((s) => s.json().then(async (data: IStructure) => {\n\t\t\t\t// Apply the epilogue to the folder structure since it is in a seperate file.\n\t\t\t\t\n\t\t\t\t const epilogue = await this.getVampireEpilogue();\n\t\t\t\t /* tslint:disable:no-string-literal */\n\t\t\t\t data.folders[\"home\"].folders[\"mainframe\"].folders[\"Vampire\"].folders[\"Epilogue_RECOVERED.dat\"].result = epilogue.epilogue;\n\n\t\t\t\treturn data;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic static async getVampireEpilogue() {\n\t\tconst epilogue = fetch('VampireEpilogue.json');\n\t\treturn epilogue.then((s) => s.json().then((data: { epilogue: string }) => {\n\t\t\treturn data;\n\t\t}));\n\t}\n\n}\n\nexport interface IStructure {\n\tfolders: IStructure[],\n\tname: string,\n\tpermission: boolean,\n\tresult: string\n}","import React, { Component } from 'react';  \nimport { FileService, IStructure } from '../Services/FileService';\nimport styles from './Terminal.module.css';\n\ninterface ITerminalState {\n\tcurrentPath: string;\n\tcommands: ICommand[];\n\tcommandHistory: string[];\n\tcurrentCommand: string;\n\tcurrentFolder: IStructure;\n}\n\ninterface ITerminalProps {\n\tenablePlayer: () => void;\n}\n\ninterface ICommand {\n\tcommand: string;\n\tresult: string;\n}\n\nclass Terminal extends Component<ITerminalProps, ITerminalState> {\n\tpublic prompt = \" ❯❯ \";\n\tpublic structure: IStructure = { folders: [], name: '', permission: false, result: \"\" };\n\tpublic reverseHistoryNumber = 1;\t// What command is currently chosen if history is being browsed.\n\n\tpublic constructor(props: ITerminalProps) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tcommandHistory: [],\n\t\t\tcommands: [],\n\t\t\tcurrentCommand: \"\",\n\t\t\tcurrentFolder: { folders: [], name: '', permission: false, result: \"\" },\n\t\t\tcurrentPath: \"/home/mainframe \",\n\t\t}\n\t\t\n\t\tthis.getFolderStructure();\n\t}\n\n\tpublic async getFolderStructure() {\n\t\tconst home = \"home\";\n\t\tconst mainframe = \"mainframe\";\n\t\tthis.structure = await FileService.getFiles();\n\t\t\t\t\n\t\tthis.setState({\n\t\t\tcurrentFolder: this.structure.folders[home].folders[mainframe],\n\t\t});\n\t}\n\n\tpublic keyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\n\t\tswitch(event.key) {\n\t\t\tcase 'Enter':\n\t\t\t\tthis.execute();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowUp': \n\t\t\t\tthis.goUpHistory();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown':\n\t\t\t\tthis.goDownHistory();\n\t\t\t\tbreak;\n\t\t\tcase 'Tab':\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.tabAutocomplete();\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Hotkey clear.\n\t\tif(event.ctrlKey && event.key === 'l') {\n\t\t\tevent.preventDefault();\n\t\t\tthis.cls();\n\t\t}\n\t}\n\n\tpublic tabAutocomplete() {\n\t\tconst cmd = this.state.currentCommand.split(' ');\n\t\tif(cmd.length > 1) {\n\t\t\tfor (const folder in this.state.currentFolder.folders) {\n\t\t\t\tif(this.state.currentFolder.folders[folder] != null){\n\t\t\t\t\tconst fold = this.state.currentFolder.folders[folder];\n\t\t\t\t\tif(fold.name.toLowerCase().includes(cmd[1].toLowerCase())){\n\t\t\t\t\t\tcmd[1] = fold.name;\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentCommand: cmd.join(\" \")\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\tpublic goUpHistory() {\n\t\tif(this.state.commandHistory[this.state.commandHistory.length - this.reverseHistoryNumber] != null) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentCommand: this.state.commandHistory[this.state.commandHistory.length - this.reverseHistoryNumber]\n\t\t\t});\n\t\t\t\n\t\t\tthis.reverseHistoryNumber++;\n\t\t}\n\t}\n\n\tpublic goDownHistory() {\n\t\tthis.reverseHistoryNumber--;\n\n\t\tif(this.state.commandHistory[this.state.commandHistory.length - this.reverseHistoryNumber + 1] != null) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentCommand: this.state.commandHistory[this.state.commandHistory.length - this.reverseHistoryNumber + 1]\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tcurrentCommand: \"\"\n\t\t});\n\t\tthis.reverseHistoryNumber = 1;\n\t}\n\n\tpublic changeCurrentCommand = (e: any) => {\n\t\tthis.setState({currentCommand: e.currentTarget.value})\n\t}\n\n\tpublic cat() {\n\t\tconst splitted = this.state.currentCommand.split(' ');\n\t\tconst fold = splitted[1];\n\t\tconst target = this.state.currentFolder.folders[fold];\n\t\t\n\t\tif(target != null && target.file === true && target.permission === true){\n\t\t\tthis.print(target.result);\n\t\t}\n\t\telse if(target != null && target.file === false) {\n\t\t\tthis.print(fold + ' is not a file.');\n\t\t}\n\t\telse if(target != null && target.file === true && target.permission === false){\n\t\t\tthis.print(\"Permission denied.\");\n\t\t}\n\t\telse {\n\t\t\tthis.print(\"File does not exist.\");\n\t\t}\n\t}\n\n\tpublic cls = () => {\n\t\tthis.setState({ commands: [] })\n\t}\n\n\tpublic parentDirectory() {\n\t\tif(this.state.currentPath.trim() === \"/\"){\n\t\t\tthis.print('Parent directory above root does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet pathSplit = this.state.currentPath.split(\"/\");\n\n\t\t// Remove empty string and pop last.\n\t\tpathSplit = pathSplit.splice(1, pathSplit.length-2);\n\n\t\tlet folder: IStructure = this.structure;\n\n\t\tif(pathSplit.length > 0) {\n\t\t\tfor (const path of pathSplit) {\n\t\t\t\tfolder = folder.folders[path]\t\n\t\t\t} \n\t\t}\n\n\t\tif(folder != null){\n\t\t\tthis.setState({\n\t\t\t\tcurrentFolder: folder,\n\t\t\t\tcurrentPath: this.state.currentPath.replace(RegExp('/[^/]*$'), '')\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic changeDirectry() {\n\t\tif(this.state.currentCommand.endsWith(\" ..\")){\n\t\t\tthis.parentDirectory();\n\t\t\treturn;\n\t\t}\n\n\t\tconst splitted = this.state.currentCommand.split(' ');\n\t\tconst fold = splitted[1];\n\t\tconst target = this.state.currentFolder.folders[fold];\n\n\t\tif(target != null && target.permission === true && target.file === false){\n\t\t\tthis.setState({\n\t\t\t\tcurrentFolder: target,\n\t\t\t\tcurrentPath: this.state.currentPath.trim() + \"/\" + fold\n\t\t\t})\n\t\t}\n\t\telse if(target != null && target.permission === false){\n\t\t\tthis.print(\"Permission denied.\");\n\t\t}\n\t\telse {\n\t\t\tthis.print(fold + ' does not exist or is not a folder.');\n\t\t}\n\t}\n\n\tpublic ls() {\n\t\tlet folders = \"\";\n\t\tfor (const fold in this.state.currentFolder.folders) {\n\t\t\tif(fold != null){\n\t\t\t\tfolders += fold + \"   \";\n\t\t\t}\n\t\t}\n\t\tthis.print(folders);\n\t}\n\n\tpublic executeFile() {\n\t\tconst splitted = this.state.currentCommand.split('/');\n\t\tconst fold = splitted[1];\n\t\tconst target = this.state.currentFolder.folders[fold];\n\n\t\tif(target != null && target.permission === true && target.file === true && fold.endsWith('Player.exe')) {\n\t\t\tthis.props.enablePlayer();\n\t\t}\n\t\telse if(target != null && target.permission === true && target.file === true && fold.endsWith('.exe')) {\n\t\t\tthis.print(target.execute);\n\t\t}\n\t\telse if(target != null && target.permission === true && target.file === true && fold.endsWith('.Site')){\n\t\t\twindow.location.href = target.execute;\n\t\t}\n\t\telse {\n\t\t\tthis.print('File is not executable.');\n\t\t}\n\t}\n\n\tpublic execute() {\n\t\tconst cmd = this.state.currentCommand.trim();\n\t\tthis.state.commandHistory.push(cmd);\n\t\tthis.reverseHistoryNumber = 1;\n\n\t\tif(cmd.toLowerCase().startsWith('./')){\n\t\t\tthis.executeFile();\n\t\t}\n\t\telse if(cmd.toLowerCase().startsWith('cat')) {\n\t\t\tthis.cat();\n\t\t}\n\t\telse if(cmd.toLowerCase() === 'cls'){\n\t\t\tthis.cls();\n\t\t}\n\t\telse if(cmd.toLowerCase().startsWith('exit')) {\n\t\t\tthis.print('Wolf.exe is running by another user. Exiting module before terminating could be dangerous for plugged in users. \\n EXIT ABORTED...');\n\t\t}\n\t\telse if(cmd.startsWith('cd')) {\n\t\t\tthis.changeDirectry();\n\t\t}\n\t\telse if(cmd.toLowerCase().indexOf('shit') > -1) {\n\t\t\tthis.print('Stop being angry.');\n\t\t}\n\t\telse if(cmd.toLowerCase().indexOf('fuck you') > -1) {\n\t\t\tthis.print(\"No, fuck YOU!\");\n\t\t}\n\t\telse if(cmd.toLowerCase().startsWith('fuck')) {\n\t\t\tthis.print(\"You can't fuck this.\");\n\t\t}\n\t\telse if(cmd.toLowerCase().startsWith('shut down')) {\n\t\t\tthis.print(\"Shutting down the mainframe with users logged into their Cyberdecks is extremely dangerous. \\nShut down sequence terminated.\");\n\t\t}\n\t\telse if(cmd.toLowerCase() === \"ls\") {\n\t\t\tthis.ls();\n\t\t}\n\t\telse if(cmd.toLowerCase() === 'help') {\n\t\t\tthis.print('The following commands are available: \\n ./[file] \\n cat [file] \\n cls \\n cd [folder] \\n ls \\n help')\n\t\t}\n\t\telse if(cmd === ''){\n\t\t\tthis.print('');\n\t\t}\n\t\telse {\n\t\t\tthis.print('Command not found: ' + this.state.currentCommand);\n\t\t}\n\n\t\tthis.setState({currentCommand: \"\"});\n\t}\n\n\tpublic print(print: string) {\n\t\tconst printArray = print.split('\\n');\n\t\tlet first = true;\n\t\tfor (const printable of printArray) {\n\t\t\tif(first){\n\t\t\t\tthis.state.commands.push({command: this.state.currentPath + this.prompt + this.state.currentCommand, result: printable });\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.state.commands.push({command: '', result: printable });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className={styles.Terminal}>\n\t\t\t\t<div id=\"Terminal\" className={styles.Commands}>\n\t\t\t\t\t{this.state.commands.map((val) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={this.state.commands.indexOf(val)}>\n\t\t\t\t\t\t\t\t<p>{val.command}</p>\n\t\t\t\t\t\t\t\t<p>{val.result}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<div className={styles.CommandLine}>\n\t\t\t\t\t\t{this.state.currentPath + this.prompt}\n\t\t\t\t\t\t<input onKeyDown={this.keyDown} className={styles.InvisibleInput} value={this.state.currentCommand} onChange={this.changeCurrentCommand} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Terminal;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Bootloader from './Bootloader';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Bootloader />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}